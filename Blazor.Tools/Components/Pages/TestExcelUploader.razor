@page "/test-excel-uploader"
@rendermode InteractiveServer
@using Blazor.Tools.BlazorBundler.Entities
@using Blazor.Tools.BlazorBundler.Entities.SampleObjects.Data
@using Blazor.Tools.BlazorBundler.Interfaces
@using Blazor.Tools.BlazorBundler.Components.Grid
@using Blazor.Tools.BlazorBundler.SessionManagement
@using Blazor.Tools.BlazorBundler.SessionManagement.Interfaces

@inherits SampleData

@if (!_isInitialized)
{ 
    <h1>Loading...</h1>

}
else
{
    <ExcelUploader Title="Upload Excel Files"
                   ModelsAssemblyName="@ModelsAssemblyName"
                   ViewModelsAssemblyName="@ViewModelsAssemblyName"
                   HostAssemblies="@HostAssemblies" />
}

@code {

    [Inject] public ISessionTableService _sessionTableService { get; set; } = default!;

    private bool _isInitialized = false;
    protected override async Task OnInitializedAsync()
    {
        _isInitialized = true;
        var apiDLLPath = @"C:\Hermie\AccSol\AccSol.API\bin\Debug\net8.0\AccSol.API.dll";

        // Using specific settings:
        var aspNetCoreEnvironment = "Development";
        var aspNetCoreURLs = "https://localhost:7040/";

        // Using the current Environment variables:
        // var aspNetCoreEnvironment = Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT");
        // var aspNetCoreURLs = Environment.GetEnvironmentVariable("ASPNETCORE_URLS");

        var sessionManager = SessionManager.GetInstance(_sessionTableService, apiDLLPath, aspNetCoreEnvironment, aspNetCoreURLs);

        await base.OnInitializedAsync();


    }
}
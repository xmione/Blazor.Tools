@page "/test-data-table-grid"
@rendermode InteractiveServer

@using Blazor.Tools
@* @using Blazor.Tools.Components.Grid
@using Bogus *@
@using System.Data
@inject NavigationManager Navigation

<PageTitle>Test Data Table Grid</PageTitle>

<h1>Testing Sample Data Table Grid Component</h1>
@* 
<DataTableGrid SelectedTable="@_employees" HiddenColumnNames="@_hiddenEmployeeColumns" />
<DataTableGrid SelectedTable="@_countries" HiddenColumnNames="@_hiddenCountryColumns" />
 
@code {

    private DataTable _employees = default!;
    private DataTable _countries = default!;
    private List<string>? _hiddenEmployeeColumns;
    private List<string>? _hiddenCountryColumns;

    protected override void OnParametersSet()
    {
        Console.WriteLine("TestTableGrid OnParametersSetAsync");

        // Initialize hidden column lists
        _hiddenEmployeeColumns = new List<string>();
        _hiddenCountryColumns = new List<string>();

        _hiddenEmployeeColumns.Add("ID");
        _hiddenCountryColumns.Add("ID");

        // Initialize _employees DataTable
        _employees = new DataTable("Employee");
        _employees.Columns.Add("ID", typeof(int));
        _employees.Columns.Add("FirstName", typeof(string));
        _employees.Columns.Add("MiddleName", typeof(string));
        _employees.Columns.Add("LastName", typeof(string));
        _employees.Columns.Add("CountryID", typeof(int));

        var employeeFaker = new Faker<Employee>()
           .RuleFor(e => e.ID, f => f.IndexFaker + 1)
           .RuleFor(e => e.FirstName, f => f.Name.FirstName())
           .RuleFor(e => e.MiddleName, f => f.Name.FirstName().Substring(0, 1) + ".")
           .RuleFor(e => e.LastName, f => f.Name.LastName())
           .RuleFor(e => e.CountryID, f => f.Random.Int(1, 2));

        var countryFaker = new Faker<Country>()
        .RuleFor(c => c.ID, f => f.IndexFaker + 1)
        .RuleFor(c => c.Name, f => f.Address.Country());

        for (int i = 0; i < 101; i++)
        {
            var employee = employeeFaker.Generate();
            _employees.Rows.Add(i + 1, employee.FirstName, employee.MiddleName, employee.LastName, employee.CountryID);
        }

        // Initialize and generate country data
        _countries = new DataTable("Country");
        _countries.Columns.Add("ID", typeof(int));
        _countries.Columns.Add("Name", typeof(string));

        for (int i = 0; i < 101; i++)
        {
            var country = countryFaker.Generate();
            _countries.Rows.Add(i+ 1, country.Name);
        }

    }

    public class Employee
    {
        public int ID { get; set; }
        public string FirstName { get; set; } = default!;
        public string MiddleName { get; set; } = default!;
        public string LastName { get; set; } = default!;
        public int CountryID { get; set; } 
    }

    public class Country
    {
        public int ID { get; set; }
        public string Name { get; set; } = default!;
    }

}
 *@
@page "/test-table-grid-internals"
@rendermode InteractiveServer

@using Blazor.Tools.BlazorBundler.Entities
@using Blazor.Tools.BlazorBundler.Extensions
@using Blazor.Tools.BlazorBundler.Interfaces
@using Blazor.Tools.BlazorBundler.Components.Grid
@using Blazor.Tools.Components.Pages.SampleObjects
@using Bogus
@using System.Data
@using System.ComponentModel.DataAnnotations
@using ValidationResult = System.ComponentModel.DataAnnotations.ValidationResult
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<PageTitle>Test TableGridInternals</PageTitle>
<h1>Using TableGridInternals Component</h1>
<TableGridInternals Title="@_data.Title"
                    TableID="@_data.TableID"
                    ColumnDefinitions="@_data.ColumnDefinitions"
                    ModelVM="_data.EmployeeVM"
                    Items="_data.Employees"
                    Context="employee"
                    ItemsChanged="_data.OnItemsChanged"
                    AllowCellRangeSelection="true">
    <StartContent>
        <h2>@_data.Title</h2>
    </StartContent>
    <TableHeader>
        @if(_data.ColumnDefinitions != null)
        {
            foreach (var column in _data.ColumnDefinitions)
            {
                <th>@column.HeaderText</th>
            }
        }
    </TableHeader>
    <RowTemplate>
        @* 
            Note: This should be the format for the td ids:
            id="_data.TableID-row-col" 
            <td id="employee-1-1">
        *@
        <td id=@($"{_data.TableID}-{employee.RowID}-1") @onclick="@(async () => await _data.HandleCellClickAsync($"{_data.TableID}-{employee.RowID}-1", (EmployeeVM)employee, 1))" class="cursor-pointer">
            <NumberInput ColumnName="ID" 
                Value="@(employee.GetProperty("ID"))"
                IsEditMode="@(employee.GetProperty("IsEditMode") as bool? ?? false)"
                RowID="@employee.RowID"
                ValueChanged="@(newValue => _data.OnIDValueChanged(newValue, (EmployeeVM)employee))"  
                />
        </td>
        <td id=@($"{_data.TableID}-{employee.RowID}-2") @onclick="@(async () => await _data.HandleCellClickAsync($"{_data.TableID}-{employee.RowID}-2", (EmployeeVM)employee, 2))" class="cursor-pointer">
            <TextInput ColumnName="FirstName" 
                Value="@(employee.GetProperty("FirstName"))"
                IsEditMode="@(employee.GetProperty("IsEditMode") as bool? ?? false)"
                RowID="@employee.RowID"
                       ValueChanged="@(newValue => _data.OnFirstNameValueChanged(newValue, (EmployeeVM)employee))" />
        </td>
        <td id=@($"{_data.TableID}-{employee.RowID}-3") @onclick="@(async () => await _data.HandleCellClickAsync($"{_data.TableID}-{employee.RowID}-3", (EmployeeVM)employee, 3))" class="cursor-pointer">
            <TextInput ColumnName="MiddleName"
                       Value="@(employee.GetProperty("MiddleName"))"
                       IsEditMode="@(employee.GetProperty("IsEditMode") as bool? ?? false)"
                       RowID="@employee.RowID"
                       ValueChanged="@(newValue => _data.OnMiddleNameValueChanged(newValue, (EmployeeVM)employee))" />
        </td>
        <td id=@($"{_data.TableID}-{employee.RowID}-4") @onclick="@(async () => await _data.HandleCellClickAsync($"{_data.TableID}-{employee.RowID}-4", (EmployeeVM)employee, 4))" class="cursor-pointer">
            <TextInput ColumnName="LastName"
                       Value="@(employee.GetProperty("LastName"))"
                       IsEditMode="@(employee.GetProperty("IsEditMode") as bool? ?? false)"
                       RowID="@employee.RowID"
                       ValueChanged="@(newValue => _data.OnLastNameValueChanged(newValue, (EmployeeVM)employee))" />
        </td>
        <td id=@($"{_data.TableID}-{employee.RowID}-5") @onclick="@(async () => await _data.HandleCellClickAsync($"{_data.TableID}-{employee.RowID}-5", (EmployeeVM)employee, 5))" class="cursor-pointer">
            <DateOnlyPicker ColumnName="DateOfBirth"
                Value="@(employee.GetProperty("DateOfBirth") as DateOnly? ?? default!)"
                IsEditMode="@(employee.GetProperty("IsEditMode") as bool? ?? false)"
                RowID="@employee.RowID"
                            ValueChanged="@((DateOnly? newValue) => _data.OnDateOfBirthValueChanged(newValue, (EmployeeVM)employee))" />
             
        </td>
        <td id=@($"{_data.TableID}-{@employee.RowID}-6") @onclick="@(async () => await _data.HandleCellClickAsync($"{_data.TableID}-{employee.RowID}-6", (EmployeeVM)employee, 6))" class="cursor-pointer">
            <DropdownList Items="_data.Countries"
                          ColumnName="CountryID"
                          Value="@(employee.GetProperty("DateOfBirth") as DateOnly? ?? default!)"
                          IsEditMode="@(employee.GetProperty("IsEditMode") as bool? ?? false)"
                          OptionIDFieldName="ID"
                          OptionValueFieldName="Name"
                          RowID="@employee.RowID"
                          ValueChanged="@((object newValue) => _data.OnDropdownValueChanged(newValue, (EmployeeVM)employee))" />
        </td>

    </RowTemplate>
</TableGridInternals>
 
@code {

    //[Inject] public ISessionTableService _sessionTableService { get; set; } = default!;

    private SampleData _data = new SampleData();

}
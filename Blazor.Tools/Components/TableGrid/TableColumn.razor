@* TableColumn.razor *@
@using System.Data

@if (_dataSource != null)
{
    if (Type == "TextBox")
    {
        <input type="text" value="@DisplayFieldValue" />
    }
    else if (Type == "DropdownList")
    {
        <select>
            @foreach (DataRow row in _dataSource.Rows)
            {
                if (row != null)
                {
                    <option value="@row[DisplayFieldValue]">
                        @row[DisplayFieldName]
                    </option>
                }
            }
        </select>
    }
}

@code {
    [CascadingParameter] private TableGrid TableGridContext { get; set; } = default!;
    [CascadingParameter] private TableNode TableNodeContext { get; set; } = default!;
    [Parameter] public string DataSource { get; set; } = default!;
    [Parameter] public string FieldName { get; set; } = default!;
    [Parameter] public string Type { get; set; } = default!;
    [Parameter] public string DisplayFieldName { get; set; } = default!;
    [Parameter] public string DisplayFieldValue { get; set; } = default!;

    private DataTable _dataSource = default!;
    public int RowNumber = 0;

    protected override void OnParametersSet()
    {
        _dataSource = TableGridContext?.GetDataSource(DataSource) ?? _dataSource;

        if (_dataSource != null)
        {
            if (Type == "TextBox")
            {
                var row = _dataSource.Rows[RowNumber];
                DisplayFieldValue = GetFieldValue(row);
            }
        }

        TableNodeContext?.AddColumn(this);

        Console.WriteLine("TableColumn OnParametersSetAsync");

    }

    private string GetFieldValue(DataRow row)
    {
        return row[FieldName]?.ToString() ?? string.Empty;
    }
}

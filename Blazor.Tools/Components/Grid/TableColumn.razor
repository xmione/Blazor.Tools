@* TableColumn.razor *@
@using System.Data

@code {
    [CascadingParameter] private TableGrid TableGridContext { get; set; } = default!;
    [CascadingParameter] private TableNode TableNodeContext { get; set; } = default!;
    [Parameter] public string DataSourceName { get; set; } = default!;
    [Parameter] public string FieldName { get; set; } = default!;
    [Parameter] public string Type { get; set; } = default!;
    [Parameter] public string DisplayFieldName { get; set; } = default!;
    [Parameter] public string DisplayFieldValue { get; set; } = default!;
    [Parameter] public string HeaderName { get; set; } = default!;
    [Parameter] public int RowNumber { get; set; } = default!;
    [Parameter] public bool Visible { get; set; } = true;


    public DataTable _dataSource = default!;

    protected override void OnParametersSet()
    {
        _dataSource = TableGridContext?.GetDataSource(DataSourceName) ?? _dataSource;

        if (_dataSource != null)
        {
            if (Type == "TextBox")
            {
                var row = _dataSource.Rows[RowNumber];
                DisplayFieldValue = GetFieldValue(row);
            }
        }

        if (HeaderName == null)
        {
            HeaderName = FieldName;    
        }

        if (DisplayFieldName == null)
        {
            DisplayFieldName = FieldName;    
        }

        TableNodeContext?.AddColumn(this);

        Console.WriteLine("TableColumn OnParametersSetAsync");

    }

    public DataTable GetDataSource()
    {
        return _dataSource;
    }

    private string GetFieldValue(DataRow row)
    {
        return row[FieldName]?.ToString() ?? string.Empty;
    }
}

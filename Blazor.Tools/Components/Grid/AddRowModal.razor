@*====================================================================================================
    Component Name: AddRowModal.razor
    Created By    : Solomio S. Sisante
    Created On    : June 5, 2024
    Purpose       : Modal dialog box for adding DataTable rows.
===================================================================================================*@
@using System.Data
@using BlazorBootstrap

<div class="data-table-grid-modal @(ShowAddRowModal ? "show" : "")">
    <!-- Buttons -->
    <div class="data-table-grid-modal-close-button">
        <Icon Name="IconName.CheckCircleFill" @onclick="e => OnSave.InvokeAsync()" title="Add" />
        <Icon Name="IconName.XCircleFill" title="Close" @onclick="e => OnClose.InvokeAsync()" />
    </div>
    <div class="data-table-grid-modal-content">
        @foreach (DataColumn column in DataTable.Columns)
        {
            var isHidden = HiddenColumnNames?.Contains(column.ColumnName) ?? false;
            if (!isHidden)
            {
                <div class="form-group">
                    <label>@column.ColumnName</label>
                    <input value="@NewRowData[column.ColumnName]?.ToString()" @oninput="e => UpdateNewRowData(column, e?.Value?.ToString() ?? string.Empty)" class="form-control" />
                </div>
            }
        }
        
    </div>
</div>

@code {
    [Parameter] public bool ShowAddRowModal { get; set; }
    [Parameter] public DataTable DataTable { get; set; } = default!;
    [Parameter] public DataRow NewRowData { get; set; } = default!;
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnSave { get; set; }
    [Parameter] public List<string> HiddenColumnNames { get; set; } = default!;

    protected override void OnParametersSet()
    {
        Console.WriteLine("AddRowModal OnParametersSet");
        base.OnParametersSet();
    }
    private void UpdateNewRowData(DataColumn column, string value)
    {
        NewRowData[column.ColumnName] = Convert.ChangeType(value, column.DataType);
    }
}

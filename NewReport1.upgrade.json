{
  "settings": {
    "components": {
      "code": true,
      "binaries": false
    },
    "targetId": "",
    "targetDisplayName": ".NET 9.0"
  },
  "analysisStartTime": "2024-09-06T12:29:58.8079191Z",
  "analysisEndTime": "2024-09-06T12:31:32.6054847Z",
  "privacyModeHelpUrl": "https://go.microsoft.com/fwlink/?linkid=2270980",
  "stats": {
    "summary": {
      "projects": 19,
      "issues": 4,
      "incidents": 1878,
      "effort": 1878
    },
    "charts": {
      "severity": {
        "Mandatory": 20,
        "Optional": 0,
        "Potential": 1858,
        "Information": 0
      },
      "category": {
        "NuGet": 25,
        "Project": 19,
        "Api": 1834
      }
    }
  },
  "projects": [
    {
      "path": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
      "startingProject": true,
      "issues": 3,
      "storyPoints": 11,
      "ruleInstances": [
        {
          "incidentId": "43f65276-b3af-406a-858a-36712ff2d457",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Aspire.Hosting.AppHost, 8.0.0\n\nRecommendation:\n\nAspire.Hosting.AppHost 8.2.0",
              "protected": "Aspire.Hosting.AppHost, 8.0.0\n\nRecommendation:\n\nAspire.Hosting.AppHost 8.2.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
            "snippet": "Aspire.Hosting.AppHost, 8.0.0\n\nRecommendation:\n\nAspire.Hosting.AppHost 8.2.0",
            "protectedSnippet": "Aspire.Hosting.AppHost, 8.0.0\n\nRecommendation:\n\nAspire.Hosting.AppHost 8.2.0",
            "label": "Aspire.Hosting.AppHost 8.0.0"
          }
        },
        {
          "incidentId": "46ebc92c-1f23-423e-a692-c9d46df6f9c9",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        },
        {
          "incidentId": "92dffbc6-910c-4d1b-8310-ee32fd31f4d7",
          "ruleId": "Api.0002",
          "description": "API is available in package Aspire.Hosting, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var builder = DistributedApplication.CreateBuilder(args);",
              "protected": "M:Aspire.Hosting.DistributedApplication.CreateBuilder(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools.AppHost\\Program.cs",
            "snippet": "var builder = DistributedApplication.CreateBuilder(args);",
            "protectedSnippet": "M:Aspire.Hosting.DistributedApplication.CreateBuilder(System.String[])",
            "label": "M:Aspire.Hosting.DistributedApplication.CreateBuilder(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/aspire.hosting.distributedapplication.createbuilder",
                "isCustom": false
              }
            ],
            "line": 0,
            "column": 0
          }
        },
        {
          "incidentId": "97f08512-a404-4e0d-a8f5-ca39660710c6",
          "ruleId": "Api.0002",
          "description": "API is available in package Aspire.Hosting, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var builder = DistributedApplication.CreateBuilder(args);",
              "protected": "T:Aspire.Hosting.IDistributedApplicationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools.AppHost\\Program.cs",
            "snippet": "var builder = DistributedApplication.CreateBuilder(args);",
            "protectedSnippet": "T:Aspire.Hosting.IDistributedApplicationBuilder",
            "label": "T:Aspire.Hosting.IDistributedApplicationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/aspire.hosting.idistributedapplicationbuilder",
                "isCustom": false
              }
            ],
            "line": 0,
            "column": 0
          }
        },
        {
          "incidentId": "3f4b27e1-b2f8-4426-9483-9e583c17f01c",
          "ruleId": "Api.0002",
          "description": "API is available in package Aspire.Hosting, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var builder = DistributedApplication.CreateBuilder(args);",
              "protected": "T:Aspire.Hosting.DistributedApplication"
            },
            "kind": "File",
            "path": "Blazor.Tools.AppHost\\Program.cs",
            "snippet": "var builder = DistributedApplication.CreateBuilder(args);",
            "protectedSnippet": "T:Aspire.Hosting.DistributedApplication",
            "label": "T:Aspire.Hosting.DistributedApplication",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/aspire.hosting.distributedapplication",
                "isCustom": false
              }
            ],
            "line": 0,
            "column": 0
          }
        },
        {
          "incidentId": "fdea9509-53c2-4d1e-b22d-3782c6dbd15d",
          "ruleId": "Api.0002",
          "description": "API is available in package Aspire.Hosting, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.AddProject\u003CProjects.Blazor_Tools\u003E(\u0022blazor-tools\u0022);",
              "protected": "M:Aspire.Hosting.ProjectResourceBuilderExtensions.AddProject\u0060\u00601(Aspire.Hosting.IDistributedApplicationBuilder,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.AppHost\\Program.cs",
            "snippet": "builder.AddProject\u003CProjects.Blazor_Tools\u003E(\u0022blazor-tools\u0022);",
            "protectedSnippet": "M:Aspire.Hosting.ProjectResourceBuilderExtensions.AddProject\u0060\u00601(Aspire.Hosting.IDistributedApplicationBuilder,System.String)",
            "label": "M:Aspire.Hosting.ProjectResourceBuilderExtensions.AddProject\u0060\u00601(Aspire.Hosting.IDistributedApplicationBuilder,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/aspire.hosting.projectresourcebuilderextensions.addproject",
                "isCustom": false
              }
            ],
            "line": 2,
            "column": 0
          }
        },
        {
          "incidentId": "16f2e35c-fd49-4a7d-b0fb-fda821eaad30",
          "ruleId": "Api.0002",
          "description": "API is available in package Aspire.Hosting, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.AddProject\u003CProjects.Blazor_Tools\u003E(\u0022blazor-tools\u0022);",
              "protected": "T:Aspire.Hosting.ProjectResourceBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools.AppHost\\Program.cs",
            "snippet": "builder.AddProject\u003CProjects.Blazor_Tools\u003E(\u0022blazor-tools\u0022);",
            "protectedSnippet": "T:Aspire.Hosting.ProjectResourceBuilderExtensions",
            "label": "T:Aspire.Hosting.ProjectResourceBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/aspire.hosting.projectresourcebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 2,
            "column": 0
          }
        },
        {
          "incidentId": "677c1807-36c1-44d8-b109-bc0c3bf33161",
          "ruleId": "Api.0002",
          "description": "API is available in package Aspire.Hosting, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Build().Run();",
              "protected": "M:Aspire.Hosting.DistributedApplication.Run"
            },
            "kind": "File",
            "path": "Blazor.Tools.AppHost\\Program.cs",
            "snippet": "builder.Build().Run();",
            "protectedSnippet": "M:Aspire.Hosting.DistributedApplication.Run",
            "label": "M:Aspire.Hosting.DistributedApplication.Run",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/aspire.hosting.distributedapplication.run",
                "isCustom": false
              }
            ],
            "line": 4,
            "column": 0
          }
        },
        {
          "incidentId": "3189b020-0764-4a7b-a7bb-0eef8b0fce07",
          "ruleId": "Api.0002",
          "description": "API is available in package Aspire.Hosting, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Build().Run();",
              "protected": "M:Aspire.Hosting.IDistributedApplicationBuilder.Build"
            },
            "kind": "File",
            "path": "Blazor.Tools.AppHost\\Program.cs",
            "snippet": "builder.Build().Run();",
            "protectedSnippet": "M:Aspire.Hosting.IDistributedApplicationBuilder.Build",
            "label": "M:Aspire.Hosting.IDistributedApplicationBuilder.Build",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/aspire.hosting.idistributedapplicationbuilder.build",
                "isCustom": false
              }
            ],
            "line": 4,
            "column": 0
          }
        },
        {
          "incidentId": "7d970c84-b615-4702-a1cf-177b1a77a2d1",
          "ruleId": "Api.0002",
          "description": "API is available in package Aspire.Hosting, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Build().Run();",
              "protected": "T:Aspire.Hosting.DistributedApplication"
            },
            "kind": "File",
            "path": "Blazor.Tools.AppHost\\Program.cs",
            "snippet": "builder.Build().Run();",
            "protectedSnippet": "T:Aspire.Hosting.DistributedApplication",
            "label": "T:Aspire.Hosting.DistributedApplication",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/aspire.hosting.distributedapplication",
                "isCustom": false
              }
            ],
            "line": 4,
            "column": 0
          }
        },
        {
          "incidentId": "1f155f4d-c4f5-4270-b4e7-f5e1bd023276",
          "ruleId": "Api.0002",
          "description": "API is available in package Aspire.Hosting, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.AppHost\\Blazor.Tools.AppHost.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "IProjectMetadata",
              "protected": "T:Aspire.Hosting.IProjectMetadata"
            },
            "kind": "File",
            "path": "Blazor.Tools.AppHost\\obj\\Debug\\net8.0\\Aspire\\references\\Blazor_Tools.ProjectMetadata.g.cs",
            "snippet": "IProjectMetadata",
            "protectedSnippet": "T:Aspire.Hosting.IProjectMetadata",
            "label": "T:Aspire.Hosting.IProjectMetadata",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/aspire.hosting.iprojectmetadata",
                "isCustom": false
              }
            ],
            "line": 7,
            "column": 51
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
      "startingProject": true,
      "issues": 3,
      "storyPoints": 20,
      "ruleInstances": [
        {
          "incidentId": "f9952fd3-d5bc-4e39-a7fe-a5446ce84004",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2",
              "protected": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
            "snippet": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2",
            "protectedSnippet": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2",
            "label": "Microsoft.AspNetCore.Components 8.0.8"
          }
        },
        {
          "incidentId": "149be492-ec98-461f-96a0-c1666304eb7c",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "System.Data.OleDb, 8.0.0\n\nRecommendation:\n\nSystem.Data.OleDb 9.0.0-preview.7.24405.7",
              "protected": "System.Data.OleDb, 8.0.0\n\nRecommendation:\n\nSystem.Data.OleDb 9.0.0-preview.7.24405.7"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
            "snippet": "System.Data.OleDb, 8.0.0\n\nRecommendation:\n\nSystem.Data.OleDb 9.0.0-preview.7.24405.7",
            "protectedSnippet": "System.Data.OleDb, 8.0.0\n\nRecommendation:\n\nSystem.Data.OleDb 9.0.0-preview.7.24405.7",
            "label": "System.Data.OleDb 8.0.0"
          }
        },
        {
          "incidentId": "53a844d9-fbae-493e-b83d-44e233a6d304",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.Extensions.Configuration, 8.0.0\n\nRecommendation:\n\nMicrosoft.Extensions.Configuration 9.0.0-preview.7.24405.7",
              "protected": "Microsoft.Extensions.Configuration, 8.0.0\n\nRecommendation:\n\nMicrosoft.Extensions.Configuration 9.0.0-preview.7.24405.7"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
            "snippet": "Microsoft.Extensions.Configuration, 8.0.0\n\nRecommendation:\n\nMicrosoft.Extensions.Configuration 9.0.0-preview.7.24405.7",
            "protectedSnippet": "Microsoft.Extensions.Configuration, 8.0.0\n\nRecommendation:\n\nMicrosoft.Extensions.Configuration 9.0.0-preview.7.24405.7",
            "label": "Microsoft.Extensions.Configuration 8.0.0"
          }
        },
        {
          "incidentId": "f000527d-384f-420a-bd23-95c8b01415e2",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        },
        {
          "incidentId": "0c844afb-dcc7-41a6-bde2-cfbefcd030ef",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "ebf3d01c-e53f-4af9-ac2d-d6f92adef52b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var sentimentModel = mlContext.Model.Load(sentimentModelStream, out var sentimentSchema);",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "var sentimentModel = mlContext.Model.Load(sentimentModelStream, out var sentimentSchema);",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 16
          }
        },
        {
          "incidentId": "f7c76ba8-e246-4cd9-bed6-8e9d5f8ae2da",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "0b30b18c-a524-444e-9429-7723cda70c52",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var sentimentModel = mlContext.Model.Load(sentimentModelStream, out var sentimentSchema);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.IO.Stream,Microsoft.ML.DataViewSchema@)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "var sentimentModel = mlContext.Model.Load(sentimentModelStream, out var sentimentSchema);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.IO.Stream,Microsoft.ML.DataViewSchema@)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.IO.Stream,Microsoft.ML.DataViewSchema@)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.load",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 16
          }
        },
        {
          "incidentId": "2d7d69a1-47fa-4ced-bc49-02e5338c7755",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var sentimentModel = mlContext.Model.Load(sentimentModelStream, out var sentimentSchema);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "var sentimentModel = mlContext.Model.Load(sentimentModelStream, out var sentimentSchema);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 16
          }
        },
        {
          "incidentId": "58a7d271-5f76-44ae-a937-a6371ac8ae9f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_sentimentPredictionEngine = mlContext.Model.CreatePredictionEngine\u003CSentimentData, SentimentPrediction\u003E(sentimentModel);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "_sentimentPredictionEngine = mlContext.Model.CreatePredictionEngine\u003CSentimentData, SentimentPrediction\u003E(sentimentModel);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 16
          }
        },
        {
          "incidentId": "49fbd9ae-c243-4890-bc6c-39632260ab84",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var sentimentModel = mlContext.Model.Load(sentimentModelStream, out var sentimentSchema);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "var sentimentModel = mlContext.Model.Load(sentimentModelStream, out var sentimentSchema);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 16
          }
        },
        {
          "incidentId": "215214a0-3773-4952-9b68-7dfcac09a117",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_sentimentPredictionEngine = mlContext.Model.CreatePredictionEngine\u003CSentimentData, SentimentPrediction\u003E(sentimentModel);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "_sentimentPredictionEngine = mlContext.Model.CreatePredictionEngine\u003CSentimentData, SentimentPrediction\u003E(sentimentModel);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.createpredictionengine",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 16
          }
        },
        {
          "incidentId": "59e0884a-dd08-4261-b802-cea199c5ab00",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_languagePredictionEngine = mlContext.Model.CreatePredictionEngine\u003CLanguageData, LanguagePrediction\u003E(languageModel);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "_languagePredictionEngine = mlContext.Model.CreatePredictionEngine\u003CLanguageData, LanguagePrediction\u003E(languageModel);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.createpredictionengine",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 16
          }
        },
        {
          "incidentId": "1daa11c7-ae91-4c54-b4d4-7aa98cfa2cdf",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var languageModel = mlContext.Model.Load(languageModelStream, out var languageSchema);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "var languageModel = mlContext.Model.Load(languageModelStream, out var languageSchema);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 16
          }
        },
        {
          "incidentId": "3dc8ac7c-00e4-48e2-a5d3-2b0823a6ba04",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_sentimentPredictionEngine = mlContext.Model.CreatePredictionEngine\u003CSentimentData, SentimentPrediction\u003E(sentimentModel);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "_sentimentPredictionEngine = mlContext.Model.CreatePredictionEngine\u003CSentimentData, SentimentPrediction\u003E(sentimentModel);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 16
          }
        },
        {
          "incidentId": "c8f0a61d-d42b-4db4-aaf3-99da46d4c196",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var languageModel = mlContext.Model.Load(languageModelStream, out var languageSchema);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.IO.Stream,Microsoft.ML.DataViewSchema@)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "var languageModel = mlContext.Model.Load(languageModelStream, out var languageSchema);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.IO.Stream,Microsoft.ML.DataViewSchema@)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.IO.Stream,Microsoft.ML.DataViewSchema@)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.load",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 16
          }
        },
        {
          "incidentId": "ae5eaf6f-54be-4644-8e0f-070fd0b0b406",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var languageModel = mlContext.Model.Load(languageModelStream, out var languageSchema);",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "var languageModel = mlContext.Model.Load(languageModelStream, out var languageSchema);",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 16
          }
        },
        {
          "incidentId": "3f2b159c-6465-4eda-a886-b9f0f5ff3c08",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var languageModel = mlContext.Model.Load(languageModelStream, out var languageSchema);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "var languageModel = mlContext.Model.Load(languageModelStream, out var languageSchema);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 16
          }
        },
        {
          "incidentId": "555c6e32-33b0-4b76-88f2-cabe4370a458",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_languagePredictionEngine = mlContext.Model.CreatePredictionEngine\u003CLanguageData, LanguagePrediction\u003E(languageModel);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "_languagePredictionEngine = mlContext.Model.CreatePredictionEngine\u003CLanguageData, LanguagePrediction\u003E(languageModel);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 16
          }
        },
        {
          "incidentId": "de8e4bf1-bace-407b-8d85-56043ed61c1c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler\\Blazor.Tools.BlazorBundler.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_languagePredictionEngine = mlContext.Model.CreatePredictionEngine\u003CLanguageData, LanguagePrediction\u003E(languageModel);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler\\Components\\AI\\AIChatBot.razor.cs",
            "snippet": "_languagePredictionEngine = mlContext.Model.CreatePredictionEngine\u003CLanguageData, LanguagePrediction\u003E(languageModel);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 16
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
      "startingProject": true,
      "issues": 3,
      "storyPoints": 244,
      "ruleInstances": [
        {
          "incidentId": "b1875573-1520-47c9-852b-12a4f09f8e4f",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.AspNetCore.Components.Forms, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Forms 9.0.0-preview.7.24406.2",
              "protected": "Microsoft.AspNetCore.Components.Forms, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Forms 9.0.0-preview.7.24406.2"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
            "snippet": "Microsoft.AspNetCore.Components.Forms, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Forms 9.0.0-preview.7.24406.2",
            "protectedSnippet": "Microsoft.AspNetCore.Components.Forms, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Forms 9.0.0-preview.7.24406.2",
            "label": "Microsoft.AspNetCore.Components.Forms 8.0.8"
          }
        },
        {
          "incidentId": "58e32c64-c37b-4dd1-b2b9-a1224c522b4a",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "System.Data.OleDb, 8.0.0\n\nRecommendation:\n\nSystem.Data.OleDb 9.0.0-preview.7.24405.7",
              "protected": "System.Data.OleDb, 8.0.0\n\nRecommendation:\n\nSystem.Data.OleDb 9.0.0-preview.7.24405.7"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
            "snippet": "System.Data.OleDb, 8.0.0\n\nRecommendation:\n\nSystem.Data.OleDb 9.0.0-preview.7.24405.7",
            "protectedSnippet": "System.Data.OleDb, 8.0.0\n\nRecommendation:\n\nSystem.Data.OleDb 9.0.0-preview.7.24405.7",
            "label": "System.Data.OleDb 8.0.0"
          }
        },
        {
          "incidentId": "0a55f433-65e1-43ef-a9c6-b0892b572179",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.AspNetCore.Components.Web, 6.0.26\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Web 9.0.0-preview.7.24406.2",
              "protected": "Microsoft.AspNetCore.Components.Web, 6.0.26\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Web 9.0.0-preview.7.24406.2"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
            "snippet": "Microsoft.AspNetCore.Components.Web, 6.0.26\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Web 9.0.0-preview.7.24406.2",
            "protectedSnippet": "Microsoft.AspNetCore.Components.Web, 6.0.26\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Web 9.0.0-preview.7.24406.2",
            "label": "Microsoft.AspNetCore.Components.Web 6.0.26"
          }
        },
        {
          "incidentId": "980dc0f8-c2c5-4e7d-9522-cefa2668160f",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        },
        {
          "incidentId": "b60f49d4-933e-475c-824b-8f9d0ecc7bc5",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(_connectionString);",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\ExcelProcessor.cs",
            "snippet": "using var connection = new SqlConnection(_connectionString);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "d75a7368-446c-45b9-a66b-f4b03fb80025",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.OleDb, 9.0.0-preview.6.24302.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var dataAdapter = new OleDbDataAdapter(query, connection))\r\n                        {\r\n                            await Task.Run(() =\u003E dataAdapter.Fill(dataTable));\r\n                        }",
              "protected": "M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\ExcelProcessor.cs",
            "snippet": "using (var dataAdapter = new OleDbDataAdapter(query, connection))\r\n                        {\r\n                            await Task.Run(() =\u003E dataAdapter.Fill(dataTable));\r\n                        }",
            "protectedSnippet": "M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)",
            "label": "M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.oledb.oledbdataadapter.oledbdataadapter",
                "isCustom": false
              }
            ],
            "line": 43,
            "column": 24
          }
        },
        {
          "incidentId": "915f6f8a-e65a-48b8-b5dd-3df44c84b37f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "M:Microsoft.ML.StandardTrainersCatalog.SdcaLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "M:Microsoft.ML.StandardTrainersCatalog.SdcaLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.StandardTrainersCatalog.SdcaLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog.sdcalogisticregression",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 12
          }
        },
        {
          "incidentId": "42fac403-ff08-460a-8275-6394295ae832",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
              "protected": "P:Newtonsoft.Json.JsonReader.TokenType"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
            "protectedSnippet": "P:Newtonsoft.Json.JsonReader.TokenType",
            "label": "P:Newtonsoft.Json.JsonReader.TokenType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader.tokentype",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 12
          }
        },
        {
          "incidentId": "2a3435c0-8fdd-4822-98e7-3bad2cfc3e77",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
              "protected": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "label": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken.toobject",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 16
          }
        },
        {
          "incidentId": "dac6af45-cfe1-452b-ae01-08f75e6f7e52",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
              "protected": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "label": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.this[string]",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 16
          }
        },
        {
          "incidentId": "0df9ecbe-9c81-440e-badb-9edead167462",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (buildResult.OverallResult == BuildResultCode.Success)\r\n            {\r\n                var process = System.Diagnostics.Process.Start(projectFilePath);\r\n                process.WaitForExit();\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\u0022Build failed.\u0022);\r\n            }",
              "protected": "T:Microsoft.Build.Execution.BuildResultCode"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "if (buildResult.OverallResult == BuildResultCode.Success)\r\n            {\r\n                var process = System.Diagnostics.Process.Start(projectFilePath);\r\n                process.WaitForExit();\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\u0022Build failed.\u0022);\r\n            }",
            "protectedSnippet": "T:Microsoft.Build.Execution.BuildResultCode",
            "label": "T:Microsoft.Build.Execution.BuildResultCode",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildresultcode",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 12
          }
        },
        {
          "incidentId": "a2475f75-70c6-47b9-93ae-7f5bd45aa127",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var projectCollection = new ProjectCollection();",
              "protected": "M:Microsoft.Build.Evaluation.ProjectCollection.#ctor"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "var projectCollection = new ProjectCollection();",
            "protectedSnippet": "M:Microsoft.Build.Evaluation.ProjectCollection.#ctor",
            "label": "M:Microsoft.Build.Evaluation.ProjectCollection.#ctor",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.evaluation.projectcollection.projectcollection",
                "isCustom": false
              }
            ],
            "line": 8,
            "column": 12
          }
        },
        {
          "incidentId": "60fa44fb-060f-43ea-a233-db890d19972f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var projectCollection = new ProjectCollection();",
              "protected": "T:Microsoft.Build.Evaluation.ProjectCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "var projectCollection = new ProjectCollection();",
            "protectedSnippet": "T:Microsoft.Build.Evaluation.ProjectCollection",
            "label": "T:Microsoft.Build.Evaluation.ProjectCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.evaluation.projectcollection",
                "isCustom": false
              }
            ],
            "line": 8,
            "column": 12
          }
        },
        {
          "incidentId": "c5632bd5-00c9-4976-9005-88867effa823",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ColumnName(\u0022Response\u0022)",
              "protected": "T:Microsoft.ML.Data.ColumnNameAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\LanguagePrediction.cs",
            "snippet": "ColumnName(\u0022Response\u0022)",
            "protectedSnippet": "T:Microsoft.ML.Data.ColumnNameAttribute",
            "label": "T:Microsoft.ML.Data.ColumnNameAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.columnnameattribute",
                "isCustom": false
              }
            ],
            "line": 6,
            "column": 9
          }
        },
        {
          "incidentId": "2e456f91-09c3-43a0-b7d4-2ce101b1fea7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "P:Microsoft.ML.BinaryClassificationCatalog.Trainers"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "P:Microsoft.ML.BinaryClassificationCatalog.Trainers",
            "label": "P:Microsoft.ML.BinaryClassificationCatalog.Trainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.binaryclassificationcatalog.trainers",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 12
          }
        },
        {
          "incidentId": "05de8fa2-4aef-4350-b9e3-11dd0676a9a7",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Serialize(writer, value);",
              "protected": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "serializer.Serialize(writer, value);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "label": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer.serialize",
                "isCustom": false
              }
            ],
            "line": 25,
            "column": 12
          }
        },
        {
          "incidentId": "ad968c38-a4ea-4134-8d9f-3f9df2453385",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 67,
            "column": 17
          }
        },
        {
          "incidentId": "5cbaf93f-8180-42af-9500-d872e4102cfa",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "F:Newtonsoft.Json.JsonToken.StartObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "F:Newtonsoft.Json.JsonToken.StartObject",
            "label": "F:Newtonsoft.Json.JsonToken.StartObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken.startobject",
                "isCustom": false
              }
            ],
            "line": 67,
            "column": 17
          }
        },
        {
          "incidentId": "7334d0fd-1baa-4ee3-ba8d-58e3cf42a9ff",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "ff25d5a6-660c-492b-8460-4e4bc10d8a12",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var tempData = serializer.Deserialize(reader, tempObject.GetType());",
              "protected": "M:Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader,System.Type)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "var tempData = serializer.Deserialize(reader, tempObject.GetType());",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader,System.Type)",
            "label": "M:Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader,System.Type)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer.deserialize",
                "isCustom": false
              }
            ],
            "line": 11,
            "column": 12
          }
        },
        {
          "incidentId": "0db2ff4c-3dbd-4e32-9cca-92b5afb9cc1f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var buildParameters = new BuildParameters(projectCollection);",
              "protected": "M:Microsoft.Build.Execution.BuildParameters.#ctor(Microsoft.Build.Evaluation.ProjectCollection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "var buildParameters = new BuildParameters(projectCollection);",
            "protectedSnippet": "M:Microsoft.Build.Execution.BuildParameters.#ctor(Microsoft.Build.Evaluation.ProjectCollection)",
            "label": "M:Microsoft.Build.Execution.BuildParameters.#ctor(Microsoft.Build.Evaluation.ProjectCollection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildparameters.buildparameters",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 12
          }
        },
        {
          "incidentId": "04e45dc5-ef1a-433f-b119-13a04b5827bc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers",
            "label": "T:Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.binaryclassificationcatalog.binaryclassificationtrainers",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 12
          }
        },
        {
          "incidentId": "1a27ee84-37ca-4acc-9101-dd0b807d47a6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "P:Microsoft.ML.MLContext.Data"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Data",
            "label": "P:Microsoft.ML.MLContext.Data",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.data",
                "isCustom": false
              }
            ],
            "line": 16,
            "column": 12
          }
        },
        {
          "incidentId": "bde8c89f-6eec-4c00-8f48-4ff856f894ef",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override DataTable ReadJson(JsonReader reader, Type objectType, DataTable? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "public override DataTable ReadJson(JsonReader reader, Type objectType, DataTable? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonReader",
            "label": "T:Newtonsoft.Json.JsonReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 8
          }
        },
        {
          "incidentId": "1bd8691d-c727-40aa-88ec-a883569c43e6",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JObject jsonObject = JObject.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "JObject jsonObject = JObject.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JObject",
            "label": "T:Newtonsoft.Json.Linq.JObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject",
                "isCustom": false
              }
            ],
            "line": 69,
            "column": 16
          }
        },
        {
          "incidentId": "71545c74-4799-442d-83f6-dddc22c5c852",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();",
              "protected": "P:Newtonsoft.Json.Linq.JProperty.Name"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JProperty.Name",
            "label": "P:Newtonsoft.Json.Linq.JProperty.Name",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jproperty.name",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 20
          }
        },
        {
          "incidentId": "511237e1-fd42-4696-8686-08d7f3ad2369",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, DataTable? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, DataTable? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 8,
            "column": 8
          }
        },
        {
          "incidentId": "cd1729f0-a0f2-4981-8d87-1db84a0b450c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 350,
            "column": 12
          }
        },
        {
          "incidentId": "2df4c054-5c68-4c54-a1c2-aba2069e1d8a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.save",
                "isCustom": false
              }
            ],
            "line": 331,
            "column": 16
          }
        },
        {
          "incidentId": "8e31da6f-845f-409b-81d6-ce1166f241f1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.ConversionsExtensionsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "label": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 320,
            "column": 16
          }
        },
        {
          "incidentId": "2beb2b60-b96d-4407-89fd-e3c8a58ac043",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "T:Microsoft.ML.LearningPipelineExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "T:Microsoft.ML.LearningPipelineExtensions",
            "label": "T:Microsoft.ML.LearningPipelineExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.learningpipelineextensions",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "c5936f26-5005-4360-a887-449e5e67e949",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CLanguageData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "T:Microsoft.ML.DataOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CLanguageData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "T:Microsoft.ML.DataOperationsCatalog",
            "label": "T:Microsoft.ML.DataOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataoperationscatalog",
                "isCustom": false
              }
            ],
            "line": 311,
            "column": 16
          }
        },
        {
          "incidentId": "a429007c-5586-423c-a52b-81b1c451e320",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "15ff91fe-e828-4d32-977e-35042ed23dea",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "label": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog.loadfromtextfile",
                "isCustom": false
              }
            ],
            "line": 275,
            "column": 16
          }
        },
        {
          "incidentId": "bf42bb6a-53ec-46e9-857f-e5cac4c2ae5b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 47,
            "column": 16
          }
        },
        {
          "incidentId": "b42ccf12-1eb7-4cb0-810a-2026ad0147a2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 22,
            "column": 12
          }
        },
        {
          "incidentId": "896ce00f-a0f8-4b9f-84e4-9fc174c4b3d8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (buildResult.OverallResult == BuildResultCode.Success)\r\n            {\r\n                var process = System.Diagnostics.Process.Start(projectFilePath);\r\n                process.WaitForExit();\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\u0022Build failed.\u0022);\r\n            }",
              "protected": "T:Microsoft.Build.Execution.BuildResultCode"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "if (buildResult.OverallResult == BuildResultCode.Success)\r\n            {\r\n                var process = System.Diagnostics.Process.Start(projectFilePath);\r\n                process.WaitForExit();\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\u0022Build failed.\u0022);\r\n            }",
            "protectedSnippet": "T:Microsoft.Build.Execution.BuildResultCode",
            "label": "T:Microsoft.Build.Execution.BuildResultCode",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildresultcode",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 12
          }
        },
        {
          "incidentId": "9562ab78-25ac-42c7-9331-1db7f00b4df2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var buildResult = BuildManager.DefaultBuildManager.Build(buildParameters, buildRequestData);",
              "protected": "P:Microsoft.Build.Execution.BuildManager.DefaultBuildManager"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "var buildResult = BuildManager.DefaultBuildManager.Build(buildParameters, buildRequestData);",
            "protectedSnippet": "P:Microsoft.Build.Execution.BuildManager.DefaultBuildManager",
            "label": "P:Microsoft.Build.Execution.BuildManager.DefaultBuildManager",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildmanager.defaultbuildmanager",
                "isCustom": false
              }
            ],
            "line": 11,
            "column": 12
          }
        },
        {
          "incidentId": "77f85d7e-2d9e-4a5f-ad41-1bed81f975c1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var buildResult = BuildManager.DefaultBuildManager.Build(buildParameters, buildRequestData);",
              "protected": "T:Microsoft.Build.Execution.BuildResult"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "var buildResult = BuildManager.DefaultBuildManager.Build(buildParameters, buildRequestData);",
            "protectedSnippet": "T:Microsoft.Build.Execution.BuildResult",
            "label": "T:Microsoft.Build.Execution.BuildResult",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildresult",
                "isCustom": false
              }
            ],
            "line": 11,
            "column": 12
          }
        },
        {
          "incidentId": "bc810218-913d-4d91-b882-ae009dedf10c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var buildResult = BuildManager.DefaultBuildManager.Build(buildParameters, buildRequestData);",
              "protected": "M:Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters,Microsoft.Build.Execution.BuildRequestData)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "var buildResult = BuildManager.DefaultBuildManager.Build(buildParameters, buildRequestData);",
            "protectedSnippet": "M:Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters,Microsoft.Build.Execution.BuildRequestData)",
            "label": "M:Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters,Microsoft.Build.Execution.BuildRequestData)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildmanager.build",
                "isCustom": false
              }
            ],
            "line": 11,
            "column": 12
          }
        },
        {
          "incidentId": "95c176c6-32dc-4904-8d23-3ba40ef9359e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var buildParameters = new BuildParameters(projectCollection);",
              "protected": "T:Microsoft.Build.Execution.BuildParameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "var buildParameters = new BuildParameters(projectCollection);",
            "protectedSnippet": "T:Microsoft.Build.Execution.BuildParameters",
            "label": "T:Microsoft.Build.Execution.BuildParameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildparameters",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 12
          }
        },
        {
          "incidentId": "d1d262fa-e0a1-41db-8d2a-39318e81c871",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteValue(value?.Name);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteValue(value?.Name);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writevalue",
                "isCustom": false
              }
            ],
            "line": 36,
            "column": 12
          }
        },
        {
          "incidentId": "40bb98ae-6cb6-4b6f-b7e2-ded8d9d6035a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var buildRequestData = new BuildRequestData(projectFilePath, new Dictionary\u003Cstring, string\u003E(), null, new[] { \u0022Build\u0022 }, null);",
              "protected": "M:Microsoft.Build.Execution.BuildRequestData.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String[],Microsoft.Build.Execution.HostServices)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "var buildRequestData = new BuildRequestData(projectFilePath, new Dictionary\u003Cstring, string\u003E(), null, new[] { \u0022Build\u0022 }, null);",
            "protectedSnippet": "M:Microsoft.Build.Execution.BuildRequestData.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String[],Microsoft.Build.Execution.HostServices)",
            "label": "M:Microsoft.Build.Execution.BuildRequestData.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String[],Microsoft.Build.Execution.HostServices)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildrequestdata.buildrequestdata",
                "isCustom": false
              }
            ],
            "line": 10,
            "column": 12
          }
        },
        {
          "incidentId": "82d59859-c4ad-4452-a3c5-ebc495a20b5f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "4e3e87db-c217-46e9-944b-79d7f9508fb8",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonObject = JObject.Load(reader);",
              "protected": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "var jsonObject = JObject.Load(reader);",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)",
            "label": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.load",
                "isCustom": false
              }
            ],
            "line": 14,
            "column": 12
          }
        },
        {
          "incidentId": "4e8fed5e-7794-4b86-860e-133fd6521396",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers",
            "label": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog.multiclassclassificationtrainers",
                "isCustom": false
              }
            ],
            "line": 318,
            "column": 16
          }
        },
        {
          "incidentId": "216b592a-abb5-47a6-87aa-88d4bacca287",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CLanguageData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CLanguageData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "label": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog.loadfromtextfile",
                "isCustom": false
              }
            ],
            "line": 311,
            "column": 16
          }
        },
        {
          "incidentId": "bd7448da-0a0d-4266-92f0-2375103398e2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 308,
            "column": 16
          }
        },
        {
          "incidentId": "647bb222-7583-46b4-940d-c6d2fd581aae",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 308,
            "column": 16
          }
        },
        {
          "incidentId": "f258c4a0-1cc3-4e9f-9020-6ff51cfd48e3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 289,
            "column": 16
          }
        },
        {
          "incidentId": "811d8a42-806e-4bc4-8a52-12335c5a050b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "8dc94f05-58c5-4fed-b2f1-10f43bd65759",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "label": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "8884b1cf-98df-495c-8ba9-06ba6024a8f3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.LearningPipelineExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.LearningPipelineExtensions",
            "label": "T:Microsoft.ML.LearningPipelineExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.learningpipelineextensions",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "016937a2-caca-43fb-8302-74eb59deb95e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var buildRequestData = new BuildRequestData(projectFilePath, new Dictionary\u003Cstring, string\u003E(), null, new[] { \u0022Build\u0022 }, null);",
              "protected": "T:Microsoft.Build.Execution.BuildRequestData"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "var buildRequestData = new BuildRequestData(projectFilePath, new Dictionary\u003Cstring, string\u003E(), null, new[] { \u0022Build\u0022 }, null);",
            "protectedSnippet": "T:Microsoft.Build.Execution.BuildRequestData",
            "label": "T:Microsoft.Build.Execution.BuildRequestData",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildrequestdata",
                "isCustom": false
              }
            ],
            "line": 10,
            "column": 12
          }
        },
        {
          "incidentId": "b159d2e5-a01e-46c2-86b0-14a799aee68e",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteValue(value?.Size);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int64})"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteValue(value?.Size);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int64})",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int64})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writevalue",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "872542e9-0b60-4f68-94f8-5b1a3118f977",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var buildResult = BuildManager.DefaultBuildManager.Build(buildParameters, buildRequestData);",
              "protected": "T:Microsoft.Build.Execution.BuildManager"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "var buildResult = BuildManager.DefaultBuildManager.Build(buildParameters, buildRequestData);",
            "protectedSnippet": "T:Microsoft.Build.Execution.BuildManager",
            "label": "T:Microsoft.Build.Execution.BuildManager",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildmanager",
                "isCustom": false
              }
            ],
            "line": 11,
            "column": 12
          }
        },
        {
          "incidentId": "a4bae761-d73f-4f2e-b88f-0eae560ac18b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (buildResult.OverallResult == BuildResultCode.Success)\r\n            {\r\n                var process = System.Diagnostics.Process.Start(projectFilePath);\r\n                process.WaitForExit();\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\u0022Build failed.\u0022);\r\n            }",
              "protected": "P:Microsoft.Build.Execution.BuildResult.OverallResult"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "if (buildResult.OverallResult == BuildResultCode.Success)\r\n            {\r\n                var process = System.Diagnostics.Process.Start(projectFilePath);\r\n                process.WaitForExit();\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\u0022Build failed.\u0022);\r\n            }",
            "protectedSnippet": "P:Microsoft.Build.Execution.BuildResult.OverallResult",
            "label": "P:Microsoft.Build.Execution.BuildResult.OverallResult",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildresult.overallresult",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 12
          }
        },
        {
          "incidentId": "77fc618c-1d2b-4a5b-9c4a-d9abfda56260",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var buildResult = BuildManager.DefaultBuildManager.Build(buildParameters, buildRequestData);",
              "protected": "T:Microsoft.Build.Execution.BuildManager"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "var buildResult = BuildManager.DefaultBuildManager.Build(buildParameters, buildRequestData);",
            "protectedSnippet": "T:Microsoft.Build.Execution.BuildManager",
            "label": "T:Microsoft.Build.Execution.BuildManager",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildmanager",
                "isCustom": false
              }
            ],
            "line": 11,
            "column": 12
          }
        },
        {
          "incidentId": "e612a8fd-03d4-4afd-b4be-28da3af6cde7",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var createTableCmd = new SqlCommand(createTableCommand, connection);",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\ExcelProcessor.cs",
            "snippet": "using var createTableCmd = new SqlCommand(createTableCommand, connection);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 99,
            "column": 16
          }
        },
        {
          "incidentId": "81c20307-54d8-4914-bee1-d20b1684c102",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(1)",
              "protected": "T:Microsoft.ML.Data.LoadColumnAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\LanguageData.cs",
            "snippet": "LoadColumn(1)",
            "protectedSnippet": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "label": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 9
          }
        },
        {
          "incidentId": "53fec27f-e738-4856-98d9-2e9c0a9858f5",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();",
              "protected": "M:Newtonsoft.Json.Linq.JObject.Properties"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JObject.Properties",
            "label": "M:Newtonsoft.Json.Linq.JObject.Properties",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.properties",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 20
          }
        },
        {
          "incidentId": "2eaa4c4a-4fa4-44ec-9b46-a5173c07f80a",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
              "protected": "P:Newtonsoft.Json.Linq.JContainer.Count"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JContainer.Count",
            "label": "P:Newtonsoft.Json.Linq.JContainer.Count",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jcontainer.count",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 16
          }
        },
        {
          "incidentId": "5655c26a-11e3-4cfd-99cb-40f797f55107",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JArray jsonArray = JArray.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JArray"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "JArray jsonArray = JArray.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JArray",
            "label": "T:Newtonsoft.Json.Linq.JArray",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jarray",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 16
          }
        },
        {
          "incidentId": "c0625af4-8743-4d95-8d5c-c6e7d9495c90",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JArray jsonArray = JArray.Load(reader);",
              "protected": "M:Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "JArray jsonArray = JArray.Load(reader);",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)",
            "label": "M:Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jarray.load",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 16
          }
        },
        {
          "incidentId": "af0a4417-7d47-45d5-a4a6-593d2b306e13",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "P:Newtonsoft.Json.JsonReader.TokenType"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "P:Newtonsoft.Json.JsonReader.TokenType",
            "label": "P:Newtonsoft.Json.JsonReader.TokenType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader.tokentype",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "be63f20b-68eb-4204-8088-55e0c917f191",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 350,
            "column": 12
          }
        },
        {
          "incidentId": "ff870a63-f03d-4bc2-ada6-d4326755ed94",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator",
            "label": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.keytovaluemappingestimator",
                "isCustom": false
              }
            ],
            "line": 320,
            "column": 16
          }
        },
        {
          "incidentId": "30dda505-de06-4853-a70e-0a1db1632662",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "M:Microsoft.ML.StandardTrainersCatalog.SdcaMaximumEntropy(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "M:Microsoft.ML.StandardTrainersCatalog.SdcaMaximumEntropy(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.StandardTrainersCatalog.SdcaMaximumEntropy(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog.sdcamaximumentropy",
                "isCustom": false
              }
            ],
            "line": 318,
            "column": 16
          }
        },
        {
          "incidentId": "c515decb-ee9a-43f2-a41f-c4d23759eb72",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "633b067a-3706-4173-92f9-1466cdd2b4af",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.TransformExtensionsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.TransformExtensionsCatalog",
            "label": "T:Microsoft.ML.TransformExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "087e37c6-b55f-4bab-b318-7059c10c58ec",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 275,
            "column": 16
          }
        },
        {
          "incidentId": "6ade081d-ca91-4383-b99a-c880707266c4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 115,
            "column": 16
          }
        },
        {
          "incidentId": "9bc02765-812a-49c4-b695-529945d58eec",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WritePropertyName(\u0022LastModified\u0022);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WritePropertyName(\u0022LastModified\u0022);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writepropertyname",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 12
          }
        },
        {
          "incidentId": "adfdb3f3-8f74-439e-908c-421ba924ba42",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (buildResult.OverallResult == BuildResultCode.Success)\r\n            {\r\n                var process = System.Diagnostics.Process.Start(projectFilePath);\r\n                process.WaitForExit();\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\u0022Build failed.\u0022);\r\n            }",
              "protected": "T:Microsoft.Build.Execution.BuildResultCode"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "if (buildResult.OverallResult == BuildResultCode.Success)\r\n            {\r\n                var process = System.Diagnostics.Process.Start(projectFilePath);\r\n                process.WaitForExit();\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\u0022Build failed.\u0022);\r\n            }",
            "protectedSnippet": "T:Microsoft.Build.Execution.BuildResultCode",
            "label": "T:Microsoft.Build.Execution.BuildResultCode",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildresultcode",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 12
          }
        },
        {
          "incidentId": "02ae9daf-b9da-4265-97fb-e293c81eefb9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Build, 17.10.4.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (buildResult.OverallResult == BuildResultCode.Success)\r\n            {\r\n                var process = System.Diagnostics.Process.Start(projectFilePath);\r\n                process.WaitForExit();\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\u0022Build failed.\u0022);\r\n            }",
              "protected": "F:Microsoft.Build.Execution.BuildResultCode.Success"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\VisualStudioAutomation.cs",
            "snippet": "if (buildResult.OverallResult == BuildResultCode.Success)\r\n            {\r\n                var process = System.Diagnostics.Process.Start(projectFilePath);\r\n                process.WaitForExit();\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\u0022Build failed.\u0022);\r\n            }",
            "protectedSnippet": "F:Microsoft.Build.Execution.BuildResultCode.Success",
            "label": "F:Microsoft.Build.Execution.BuildResultCode.Success",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.build.execution.buildresultcode.success",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 12
          }
        },
        {
          "incidentId": "3383da54-38e2-403c-9192-7ed4763afddd",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WritePropertyName(\u0022ContentType\u0022);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WritePropertyName(\u0022ContentType\u0022);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writepropertyname",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "fab5a138-d8cc-4ad6-8fbb-7677bd3b61b4",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override BBBrowserFile ReadJson(JsonReader reader, Type objectType, BBBrowserFile? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "public override BBBrowserFile ReadJson(JsonReader reader, Type objectType, BBBrowserFile? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonReader",
            "label": "T:Newtonsoft.Json.JsonReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader",
                "isCustom": false
              }
            ],
            "line": 7,
            "column": 8
          }
        },
        {
          "incidentId": "a5d80cfb-ac7d-478c-a6d5-8f930a0b6c1d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, BBBrowserFile? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, BBBrowserFile? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 8
          }
        },
        {
          "incidentId": "99b02e21-46da-4b74-8e68-1fb9b11afb62",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteEndObject();",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteEndObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteEndObject();",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteEndObject",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteEndObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writeendobject",
                "isCustom": false
              }
            ],
            "line": 43,
            "column": 12
          }
        },
        {
          "incidentId": "c5ecf222-cd0f-4755-be8b-b2eb41e955f5",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteStartObject();",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteStartObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteStartObject();",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteStartObject",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteStartObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writestartobject",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "4de91b5b-6540-465d-804c-130bef6f866b",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override BBBrowserFile ReadJson(JsonReader reader, Type objectType, BBBrowserFile? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "public override BBBrowserFile ReadJson(JsonReader reader, Type objectType, BBBrowserFile? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 7,
            "column": 8
          }
        },
        {
          "incidentId": "fc10fb00-2fcd-46e0-bcf7-e76e0574ca0d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "T:Microsoft.ML.TextLoaderSaverCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "label": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog",
                "isCustom": false
              }
            ],
            "line": 16,
            "column": 12
          }
        },
        {
          "incidentId": "e6757c24-b224-4bef-b00a-9c23a099ef15",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
              "protected": "M:Newtonsoft.Json.Linq.JToken.ToString"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JToken.ToString",
            "label": "M:Newtonsoft.Json.Linq.JToken.ToString",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken.tostring",
                "isCustom": false
              }
            ],
            "line": 71,
            "column": 16
          }
        },
        {
          "incidentId": "27bb6205-19a2-470e-96fe-d0061c9099e9",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
              "protected": "T:Newtonsoft.Json.Linq.JToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JToken",
            "label": "T:Newtonsoft.Json.Linq.JToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken",
                "isCustom": false
              }
            ],
            "line": 71,
            "column": 16
          }
        },
        {
          "incidentId": "3c6af52a-e5d8-450a-80f2-bfc1f3cc669f",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 67,
            "column": 17
          }
        },
        {
          "incidentId": "7c70adde-4672-43bb-9915-e121c23a8017",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)",
            "label": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog.mapvaluetokey",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "da111418-2254-4b08-b667-3b29533d0300",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 187,
            "column": 12
          }
        },
        {
          "incidentId": "2f869367-a83d-4482-976e-2619cf2ec41f",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WritePropertyName(\u0022Name\u0022);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WritePropertyName(\u0022Name\u0022);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writepropertyname",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "6cdfcb12-3199-40a9-8c9a-c29e71761b66",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.OleDb, 9.0.0-preview.6.24302.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var dataAdapter = new OleDbDataAdapter(query, connection))\r\n                        {\r\n                            await Task.Run(() =\u003E dataAdapter.Fill(dataTable));\r\n                        }",
              "protected": "T:System.Data.OleDb.OleDbDataAdapter"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\ExcelProcessor.cs",
            "snippet": "using (var dataAdapter = new OleDbDataAdapter(query, connection))\r\n                        {\r\n                            await Task.Run(() =\u003E dataAdapter.Fill(dataTable));\r\n                        }",
            "protectedSnippet": "T:System.Data.OleDb.OleDbDataAdapter",
            "label": "T:System.Data.OleDb.OleDbDataAdapter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.oledb.oledbdataadapter",
                "isCustom": false
              }
            ],
            "line": 43,
            "column": 24
          }
        },
        {
          "incidentId": "712fd28e-d05e-422f-845b-f4d747d089f4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "label": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "774b85bc-1a99-4650-b380-a1a65ab6c630",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "label": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog.loadfromtextfile",
                "isCustom": false
              }
            ],
            "line": 16,
            "column": 12
          }
        },
        {
          "incidentId": "e7d80851-f9b4-4ebc-a017-71ff4c6c673d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonObject = JObject.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "var jsonObject = JObject.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JObject",
            "label": "T:Newtonsoft.Json.Linq.JObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject",
                "isCustom": false
              }
            ],
            "line": 14,
            "column": 12
          }
        },
        {
          "incidentId": "a2641068-2b69-4d1d-9d60-806a65a4cef3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ColumnName(\u0022Prediction\u0022)",
              "protected": "T:Microsoft.ML.Data.ColumnNameAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentPrediction.cs",
            "snippet": "ColumnName(\u0022Prediction\u0022)",
            "protectedSnippet": "T:Microsoft.ML.Data.ColumnNameAttribute",
            "label": "T:Microsoft.ML.Data.ColumnNameAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.columnnameattribute",
                "isCustom": false
              }
            ],
            "line": 6,
            "column": 9
          }
        },
        {
          "incidentId": "8bc4ee0d-da10-44dd-ba46-1451b21195db",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "015b9154-7a8b-41fe-b994-b1a50953e726",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "P:Microsoft.ML.MLContext.Data"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Data",
            "label": "P:Microsoft.ML.MLContext.Data",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.data",
                "isCustom": false
              }
            ],
            "line": 275,
            "column": 16
          }
        },
        {
          "incidentId": "36a8d45d-cf91-4fbc-b48f-6c7d3f28619d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteValue(value?.LastModified);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.DateTimeOffset})"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteValue(value?.LastModified);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.DateTimeOffset})",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.DateTimeOffset})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writevalue",
                "isCustom": false
              }
            ],
            "line": 38,
            "column": 12
          }
        },
        {
          "incidentId": "997be2e8-61fc-47ed-8472-f8cc2f85d1c8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, modelPath);",
              "protected": "P:Microsoft.ML.IDataView.Schema"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, modelPath);",
            "protectedSnippet": "P:Microsoft.ML.IDataView.Schema",
            "label": "P:Microsoft.ML.IDataView.Schema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview.schema",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 12
          }
        },
        {
          "incidentId": "b6bee928-0d3d-4964-969c-805e6c75edf9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "T:Microsoft.ML.DataOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "T:Microsoft.ML.DataOperationsCatalog",
            "label": "T:Microsoft.ML.DataOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataoperationscatalog",
                "isCustom": false
              }
            ],
            "line": 16,
            "column": 12
          }
        },
        {
          "incidentId": "713051f3-3e37-48eb-9836-2ae73a6ade76",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
              "protected": "T:Newtonsoft.Json.Linq.JToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JToken",
            "label": "T:Newtonsoft.Json.Linq.JToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 16
          }
        },
        {
          "incidentId": "b3893dfc-949a-4191-8303-7bb8775467e7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator",
            "label": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.valuetokeymappingestimator",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "5c1558e3-fc07-4347-a4be-e97e8f348895",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "P:Microsoft.ML.MLContext.BinaryClassification"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.BinaryClassification",
            "label": "P:Microsoft.ML.MLContext.BinaryClassification",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.binaryclassification",
                "isCustom": false
              }
            ],
            "line": 279,
            "column": 16
          }
        },
        {
          "incidentId": "44e6b430-1414-4487-a57c-f87cdf89b5be",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 187,
            "column": 12
          }
        },
        {
          "incidentId": "b6de0deb-729b-45a4-a604-aa4f0b0c2ac1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 86,
            "column": 16
          }
        },
        {
          "incidentId": "f41a949d-56b4-4f3c-af73-6e0ef28dc621",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 71,
            "column": 16
          }
        },
        {
          "incidentId": "4997c2b1-77b3-4133-9ed9-57d8bcf5c532",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteValue(value?.ContentType);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteValue(value?.ContentType);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writevalue",
                "isCustom": false
              }
            ],
            "line": 42,
            "column": 12
          }
        },
        {
          "incidentId": "88763c42-8838-46e4-a18b-092fc9beb106",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WritePropertyName(\u0022Size\u0022);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WritePropertyName(\u0022Size\u0022);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writepropertyname",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 12
          }
        },
        {
          "incidentId": "45b1ea26-5c0d-4f09-905d-9a98f8e8e963",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, modelPath);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, modelPath);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 12
          }
        },
        {
          "incidentId": "25b8eb3e-0f7a-4c6c-8d94-fb7bc26472d4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "d1193095-d4a1-4b83-883f-9f467ecc394c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "T:Microsoft.ML.TextCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "T:Microsoft.ML.TextCatalog",
            "label": "T:Microsoft.ML.TextCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "ad3f5419-ca4c-4724-9d41-db5d5c27b34a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 289,
            "column": 16
          }
        },
        {
          "incidentId": "f0570c90-ee82-4066-849a-84c2caa83630",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "P:Microsoft.ML.BinaryClassificationCatalog.Trainers"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "P:Microsoft.ML.BinaryClassificationCatalog.Trainers",
            "label": "P:Microsoft.ML.BinaryClassificationCatalog.Trainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.binaryclassificationcatalog.trainers",
                "isCustom": false
              }
            ],
            "line": 279,
            "column": 16
          }
        },
        {
          "incidentId": "ec76ba62-f268-47a4-9f42-2984821b46c5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 274,
            "column": 16
          }
        },
        {
          "incidentId": "1c11f2b8-d7c7-4225-a8b6-5b41310d0f22",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 240,
            "column": 16
          }
        },
        {
          "incidentId": "111a2dc2-276c-47e6-a48c-cd9d35d25224",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var scoreJson = JsonConvert.SerializeObject(prediction.Score);",
              "protected": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var scoreJson = JsonConvert.SerializeObject(prediction.Score);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)",
            "label": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert.serializeobject",
                "isCustom": false
              }
            ],
            "line": 90,
            "column": 16
          }
        },
        {
          "incidentId": "01dd010b-ad84-4ded-81be-ef5f2053345a",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, BBBrowserFile? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonWriter"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\BBBrowserFileJsonConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, BBBrowserFile? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonWriter",
            "label": "T:Newtonsoft.Json.JsonWriter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 8
          }
        },
        {
          "incidentId": "b1264179-ed88-49a0-9c8b-da07c71e5379",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var insertCmd = new SqlCommand(insertCommand, connection);",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\ExcelProcessor.cs",
            "snippet": "using var insertCmd = new SqlCommand(insertCommand, connection);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 20
          }
        },
        {
          "incidentId": "a0647024-9179-4a7e-acdf-b65f5ddc52a3",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var insertCmd = new SqlCommand(insertCommand, connection);",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\ExcelProcessor.cs",
            "snippet": "using var insertCmd = new SqlCommand(insertCommand, connection);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 20
          }
        },
        {
          "incidentId": "c37d2c6d-47cc-4837-a503-24234f9616d7",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.OleDb, 9.0.0-preview.6.24302.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var connection = new OleDbConnection(excelConnectionString))\r\n                {\r\n                    await connection.OpenAsync();\r\n\r\n                    foreach (var sheetName in sheetNames)\r\n                    {\r\n                        var targetSheetName = \u0022S_\u0022 \u002B await SanitizeSheetNameAsync(sheetName);\r\n\r\n                        Console.WriteLine(\u0022targetSheetName: {0} sheetName: {1}\u0022, targetSheetName, sheetName);\r\n\r\n                        var dataTable = new DataTable(targetSheetName);\r\n                        var query = $\u0022SELECT * FROM [{sheetName}$]\u0022;\r\n                        using (var dataAdapter = new OleDbDataAdapter(query, connection))\r\n                        {\r\n                            await Task.Run(() =\u003E dataAdapter.Fill(dataTable));\r\n                        }\r\n\r\n                        dataSet.Tables.Add(dataTable);\r\n                    }\r\n                }",
              "protected": "M:System.Data.OleDb.OleDbConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\ExcelProcessor.cs",
            "snippet": "using (var connection = new OleDbConnection(excelConnectionString))\r\n                {\r\n                    await connection.OpenAsync();\r\n\r\n                    foreach (var sheetName in sheetNames)\r\n                    {\r\n                        var targetSheetName = \u0022S_\u0022 \u002B await SanitizeSheetNameAsync(sheetName);\r\n\r\n                        Console.WriteLine(\u0022targetSheetName: {0} sheetName: {1}\u0022, targetSheetName, sheetName);\r\n\r\n                        var dataTable = new DataTable(targetSheetName);\r\n                        var query = $\u0022SELECT * FROM [{sheetName}$]\u0022;\r\n                        using (var dataAdapter = new OleDbDataAdapter(query, connection))\r\n                        {\r\n                            await Task.Run(() =\u003E dataAdapter.Fill(dataTable));\r\n                        }\r\n\r\n                        dataSet.Tables.Add(dataTable);\r\n                    }\r\n                }",
            "protectedSnippet": "M:System.Data.OleDb.OleDbConnection.#ctor(System.String)",
            "label": "M:System.Data.OleDb.OleDbConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.oledb.oledbconnection.oledbconnection",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 16
          }
        },
        {
          "incidentId": "bcbab8e1-7014-4c61-a207-8a05d6a39d81",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, modelPath);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, modelPath);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 12
          }
        },
        {
          "incidentId": "9ca44737-ded1-424f-bc9b-eb0b560d330d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "P:Microsoft.ML.MLContext.BinaryClassification"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.BinaryClassification",
            "label": "P:Microsoft.ML.MLContext.BinaryClassification",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.binaryclassification",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 12
          }
        },
        {
          "incidentId": "f45ba00e-2d60-4492-8ae6-4638c0ae17da",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.StandardTrainersCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.StandardTrainersCatalog",
            "label": "T:Microsoft.ML.StandardTrainersCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 12
          }
        },
        {
          "incidentId": "c382d107-4c98-4066-a79e-c98b69cc2e8e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Text"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Text",
            "label": "P:Microsoft.ML.TransformsCatalog.Text",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.text",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "067a5eed-8f94-4524-abd0-467073461162",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.TextCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.TextCatalog",
            "label": "T:Microsoft.ML.TextCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "9cc3feb4-a281-4fd8-9603-fc04a83dc1ed",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonObject = JObject.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "var jsonObject = JObject.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JObject",
            "label": "T:Newtonsoft.Json.Linq.JObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject",
                "isCustom": false
              }
            ],
            "line": 14,
            "column": 12
          }
        },
        {
          "incidentId": "0eaeb64e-4487-4d38-9e6d-6619f7ff7bef",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 12
          }
        },
        {
          "incidentId": "fbb8b0d8-a008-4aad-b0d4-e2c3d7161428",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 12
          }
        },
        {
          "incidentId": "aa530ead-22c8-4365-84e5-3ac4de4c8ae5",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override DataTable ReadJson(JsonReader reader, Type objectType, DataTable? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "public override DataTable ReadJson(JsonReader reader, Type objectType, DataTable? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 8
          }
        },
        {
          "incidentId": "2cc6aee5-9caf-41fb-be49-f4645749704f",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
              "protected": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "label": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken.toobject",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 16
          }
        },
        {
          "incidentId": "74501ed7-3669-44b3-95f6-bf098727fbe2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CLanguageData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "P:Microsoft.ML.MLContext.Data"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CLanguageData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Data",
            "label": "P:Microsoft.ML.MLContext.Data",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.data",
                "isCustom": false
              }
            ],
            "line": 311,
            "column": 16
          }
        },
        {
          "incidentId": "bbe2f696-a54d-4ea2-bfd4-d6de2181b7da",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer",
            "label": "T:Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.sdcalogisticregressionbinarytrainer",
                "isCustom": false
              }
            ],
            "line": 279,
            "column": 16
          }
        },
        {
          "incidentId": "b3332db8-032a-425a-9d8e-a80019e27303",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "M:Microsoft.ML.StandardTrainersCatalog.SdcaLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "M:Microsoft.ML.StandardTrainersCatalog.SdcaLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.StandardTrainersCatalog.SdcaLogisticRegression(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog.sdcalogisticregression",
                "isCustom": false
              }
            ],
            "line": 279,
            "column": 16
          }
        },
        {
          "incidentId": "077ee156-7610-4c14-978c-0e5c8bb5961d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "f44ce06b-79c0-45f1-b9ed-5c0f8a3042d2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Text"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Text",
            "label": "P:Microsoft.ML.TransformsCatalog.Text",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.text",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "6f50312c-eb97-4a78-8fa8-e6224c98b865",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 22,
            "column": 12
          }
        },
        {
          "incidentId": "b46ef2d3-b8c2-4dff-ab46-fcdd3bd1eac0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ColumnName(\u0022Response\u0022)",
              "protected": "M:Microsoft.ML.Data.ColumnNameAttribute.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\LanguagePrediction.cs",
            "snippet": "ColumnName(\u0022Response\u0022)",
            "protectedSnippet": "M:Microsoft.ML.Data.ColumnNameAttribute.#ctor(System.String)",
            "label": "M:Microsoft.ML.Data.ColumnNameAttribute.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.columnnameattribute.columnnameattribute",
                "isCustom": false
              }
            ],
            "line": 6,
            "column": 9
          }
        },
        {
          "incidentId": "ce9a9006-820c-4e9f-9520-7fe127f35f12",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "4d625266-7de8-41b1-b331-94e239650604",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.TransformsCatalog.TextTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.texttransforms",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "33dc730f-e9c5-4b21-94c3-6040239a73f0",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
              "protected": "T:Newtonsoft.Json.JsonReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonReader",
            "label": "T:Newtonsoft.Json.JsonReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader",
                "isCustom": false
              }
            ],
            "line": 18,
            "column": 12
          }
        },
        {
          "incidentId": "c66d567c-403f-45ae-8e80-44c459516388",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JObject jsonObject = JObject.Load(reader);",
              "protected": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "JObject jsonObject = JObject.Load(reader);",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)",
            "label": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.load",
                "isCustom": false
              }
            ],
            "line": 69,
            "column": 16
          }
        },
        {
          "incidentId": "44325185-3e81-41b9-bcd7-4e0da9a89a3e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "P:Microsoft.ML.MLContext.MulticlassClassification"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "label": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.multiclassclassification",
                "isCustom": false
              }
            ],
            "line": 318,
            "column": 16
          }
        },
        {
          "incidentId": "b24f9b4c-32a6-4d65-9a52-5194b3a72b91",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers",
            "label": "T:Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.binaryclassificationcatalog.binaryclassificationtrainers",
                "isCustom": false
              }
            ],
            "line": 279,
            "column": 16
          }
        },
        {
          "incidentId": "0d225b58-684d-42e6-a4ac-31b542ed887e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.TransformsCatalog.TextTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.texttransforms",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "5c30e9ae-d1a6-4ae9-95c3-4a106e24a681",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 16
          }
        },
        {
          "incidentId": "078be2c3-9db8-4064-8dcf-55c9d7243e16",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.featurizetext",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "5f5e105d-fad3-45ac-9e37-6e450bf3c704",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext(seed: 0);",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var mlContext = new MLContext(seed: 0);",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 12
          }
        },
        {
          "incidentId": "ad99aaa3-e260-496e-9f6f-3676bf61b746",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(1)",
              "protected": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\LanguageData.cs",
            "snippet": "LoadColumn(1)",
            "protectedSnippet": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "label": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 9
          }
        },
        {
          "incidentId": "130e8e16-8f73-45a9-8ed4-637334198fe5",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 67,
            "column": 17
          }
        },
        {
          "incidentId": "172e7914-9d23-491a-b627-b7981f42acf8",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "978364a8-cfde-4536-b769-dcae8284c15c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
              "protected": "T:Microsoft.ML.DataViewSchema"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema",
            "label": "T:Microsoft.ML.DataViewSchema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema",
                "isCustom": false
              }
            ],
            "line": 331,
            "column": 16
          }
        },
        {
          "incidentId": "53516bae-1833-4d32-84ea-1d771bd4023c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers",
            "label": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog.trainers",
                "isCustom": false
              }
            ],
            "line": 318,
            "column": 16
          }
        },
        {
          "incidentId": "74207cdd-91a6-4370-846a-9064799dce7f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "label": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "f27a109c-9c94-4126-91e6-7448ec3b2a71",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator",
            "label": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.columncopyingestimator",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "19b47f1e-85e1-45ff-965f-b4971ea751f2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 274,
            "column": 16
          }
        },
        {
          "incidentId": "ec15e3ec-179b-4db4-9b38-2b3e28b572c1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 240,
            "column": 16
          }
        },
        {
          "incidentId": "3312fb83-81c7-49f1-bb84-368eb3a84541",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 115,
            "column": 16
          }
        },
        {
          "incidentId": "f3dd01fa-aa41-489b-b311-8b8ee4cea886",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 16
          }
        },
        {
          "incidentId": "4d65db4a-bc02-4f8a-88e1-faf77073af29",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(0)",
              "protected": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentData.cs",
            "snippet": "LoadColumn(0)",
            "protectedSnippet": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "label": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 6,
            "column": 9
          }
        },
        {
          "incidentId": "eb7e77fe-ca7e-403c-8da8-6eacd7f4cf69",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var createTableCmd = new SqlCommand(createTableCommand, connection);",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\ExcelProcessor.cs",
            "snippet": "using var createTableCmd = new SqlCommand(createTableCommand, connection);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 99,
            "column": 16
          }
        },
        {
          "incidentId": "98d1a419-f30d-4a4f-9149-4edfc6bd10cd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.BinaryClassificationCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.BinaryClassificationCatalog",
            "label": "T:Microsoft.ML.BinaryClassificationCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.binaryclassificationcatalog",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 12
          }
        },
        {
          "incidentId": "34f18ea3-e006-48d4-891f-6dac0269dfec",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "51a25ba5-3e51-4b98-a928-b30495e5a5f2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(0)",
              "protected": "T:Microsoft.ML.Data.LoadColumnAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\LanguageData.cs",
            "snippet": "LoadColumn(0)",
            "protectedSnippet": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "label": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 6,
            "column": 9
          }
        },
        {
          "incidentId": "528d2e5f-d6b6-46e3-b9b0-046690a53aa1",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 12
          }
        },
        {
          "incidentId": "8bb72b87-f60a-4e9c-960c-3a6c38b132d5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "T:Microsoft.ML.ConversionsExtensionsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "label": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "ebe32be0-b3d5-49db-8fda-37575d408cda",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CLanguageData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "T:Microsoft.ML.TextLoaderSaverCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CLanguageData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "label": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog",
                "isCustom": false
              }
            ],
            "line": 311,
            "column": 16
          }
        },
        {
          "incidentId": "79d2e4d0-8ab3-410c-b6bc-66f2ca826710",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 197,
            "column": 16
          }
        },
        {
          "incidentId": "4c5f5064-e9c7-4433-9462-3829ab0473cd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 71,
            "column": 16
          }
        },
        {
          "incidentId": "1f849675-c1d1-4efc-8761-784c1f930a03",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 47,
            "column": 16
          }
        },
        {
          "incidentId": "3adfeccc-493d-42ac-b7a2-4b084b46c6bb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(0)",
              "protected": "T:Microsoft.ML.Data.LoadColumnAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentData.cs",
            "snippet": "LoadColumn(0)",
            "protectedSnippet": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "label": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 6,
            "column": 9
          }
        },
        {
          "incidentId": "a8d654f8-906e-4307-93e4-642770ede070",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext(seed: 0);",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var mlContext = new MLContext(seed: 0);",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 12
          }
        },
        {
          "incidentId": "4b5ca26f-bdea-46c0-9218-a2b30eda572b",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
              "protected": "M:Newtonsoft.Json.Linq.JToken.CreateReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JToken.CreateReader",
            "label": "M:Newtonsoft.Json.Linq.JToken.CreateReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken.createreader",
                "isCustom": false
              }
            ],
            "line": 18,
            "column": 12
          }
        },
        {
          "incidentId": "52042046-ee96-4e5a-bba9-5ebb81e82006",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
              "protected": "F:Newtonsoft.Json.JsonToken.Null"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
            "protectedSnippet": "F:Newtonsoft.Json.JsonToken.Null",
            "label": "F:Newtonsoft.Json.JsonToken.Null",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken.null",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 12
          }
        },
        {
          "incidentId": "7bd87d1a-6af1-4a35-b9e4-227a27c78792",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
              "protected": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "label": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.this[string]",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 16
          }
        },
        {
          "incidentId": "8596debf-3591-498d-98d8-2a004f6156a3",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }",
              "protected": "M:Newtonsoft.Json.Linq.JObject.TryGetValue(System.String,Newtonsoft.Json.Linq.JToken@)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JObject.TryGetValue(System.String,Newtonsoft.Json.Linq.JToken@)",
            "label": "M:Newtonsoft.Json.Linq.JObject.TryGetValue(System.String,Newtonsoft.Json.Linq.JToken@)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.trygetvalue",
                "isCustom": false
              }
            ],
            "line": 58,
            "column": 28
          }
        },
        {
          "incidentId": "a51adb31-481c-411d-a352-26841da279af",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Conversion"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "label": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversion",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "a7ed391e-c875-41fe-83a7-aafb1d75a534",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "T:Microsoft.ML.TransformsCatalog.TextTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.texttransforms",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "1b49eb97-ac45-4f4b-b943-2655d5291efe",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CLanguageData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CLanguageData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 311,
            "column": 16
          }
        },
        {
          "incidentId": "b8f493a3-821b-4362-a37e-76b8b611ab16",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
              "protected": "T:Microsoft.ML.DataViewSchema"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema",
            "label": "T:Microsoft.ML.DataViewSchema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema",
                "isCustom": false
              }
            ],
            "line": 289,
            "column": 16
          }
        },
        {
          "incidentId": "1aa6ec3d-e1f3-4c9f-96a4-92d224a3a553",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 12
          }
        },
        {
          "incidentId": "fe49bb7b-ffe5-4322-b54f-dc092badccf8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(1)",
              "protected": "T:Microsoft.ML.Data.LoadColumnAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentData.cs",
            "snippet": "LoadColumn(1)",
            "protectedSnippet": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "label": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 9
          }
        },
        {
          "incidentId": "b700636e-f630-4341-931d-35edf58d69f7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, modelPath);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, modelPath);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.String)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.save",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 12
          }
        },
        {
          "incidentId": "2a58dc3a-79af-4555-a44a-88857677ca62",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator",
            "label": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.columncopyingestimator",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "d6ba0b31-6dd5-4560-a641-20e6c5fa0cef",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)",
            "label": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog.copycolumns",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "f29bc246-6eec-4a95-9109-b25428ca99fc",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, TargetTableColumn? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonWriter"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, TargetTableColumn? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonWriter",
            "label": "T:Newtonsoft.Json.JsonWriter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 8
          }
        },
        {
          "incidentId": "46439d9d-5e4e-4543-9caf-41933d7b196e",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
              "protected": "M:Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader,System.Object)",
            "label": "M:Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer.populate",
                "isCustom": false
              }
            ],
            "line": 18,
            "column": 12
          }
        },
        {
          "incidentId": "9804f11e-3c2f-40a5-b072-0bfb1a86a2a3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ColumnName(\u0022Prediction\u0022)",
              "protected": "M:Microsoft.ML.Data.ColumnNameAttribute.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentPrediction.cs",
            "snippet": "ColumnName(\u0022Prediction\u0022)",
            "protectedSnippet": "M:Microsoft.ML.Data.ColumnNameAttribute.#ctor(System.String)",
            "label": "M:Microsoft.ML.Data.ColumnNameAttribute.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.columnnameattribute.columnnameattribute",
                "isCustom": false
              }
            ],
            "line": 6,
            "column": 9
          }
        },
        {
          "incidentId": "548004f6-6c93-4e63-acbd-b96982d15d7a",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JObject jsonObject = JObject.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "JObject jsonObject = JObject.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JObject",
            "label": "T:Newtonsoft.Json.Linq.JObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject",
                "isCustom": false
              }
            ],
            "line": 69,
            "column": 16
          }
        },
        {
          "incidentId": "918effcd-0591-4db1-bb46-ed9e34780618",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "F:Newtonsoft.Json.JsonToken.StartArray"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "F:Newtonsoft.Json.JsonToken.StartArray",
            "label": "F:Newtonsoft.Json.JsonToken.StartArray",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken.startarray",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "8c5f41c8-1c72-4f18-b446-71d735d85dc9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "4142de8b-3c22-437a-9602-263cff352537",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.StandardTrainersCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.StandardTrainersCatalog",
            "label": "T:Microsoft.ML.StandardTrainersCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog",
                "isCustom": false
              }
            ],
            "line": 279,
            "column": 16
          }
        },
        {
          "incidentId": "b4098632-897d-4949-acaa-0a7aced1c418",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 229,
            "column": 12
          }
        },
        {
          "incidentId": "30a2ff3c-26d3-4ac8-ac15-220a3e64fe14",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 12
          }
        },
        {
          "incidentId": "161e862d-ff4f-46e4-8459-fdabb6fb7f68",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(_connectionString);",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\ExcelProcessor.cs",
            "snippet": "using var connection = new SqlConnection(_connectionString);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "aee1617d-0a82-4b57-a09e-5ca193ef5b4a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.LearningPipelineExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.LearningPipelineExtensions",
            "label": "T:Microsoft.ML.LearningPipelineExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.learningpipelineextensions",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "3f77e764-4fd0-4504-a339-381563dc73b1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(0)",
              "protected": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\LanguageData.cs",
            "snippet": "LoadColumn(0)",
            "protectedSnippet": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "label": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 6,
            "column": 9
          }
        },
        {
          "incidentId": "049b8824-b86f-435a-b84d-6925f2352f80",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override TargetTableColumn? ReadJson(JsonReader reader, Type objectType, TargetTableColumn? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "public override TargetTableColumn? ReadJson(JsonReader reader, Type objectType, TargetTableColumn? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonReader",
            "label": "T:Newtonsoft.Json.JsonReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader",
                "isCustom": false
              }
            ],
            "line": 7,
            "column": 8
          }
        },
        {
          "incidentId": "ec1500ff-cbc9-427d-b65b-5dc1cda18054",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "dataRow[columnName] = value.ToObject\u003Cobject\u003E();",
              "protected": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "dataRow[columnName] = value.ToObject\u003Cobject\u003E();",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "label": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken.toobject",
                "isCustom": false
              }
            ],
            "line": 60,
            "column": 32
          }
        },
        {
          "incidentId": "c2d80376-4fa0-4b20-b128-98e99c5781a1",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, DataTable? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonWriter"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, DataTable? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonWriter",
            "label": "T:Newtonsoft.Json.JsonWriter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter",
                "isCustom": false
              }
            ],
            "line": 8,
            "column": 8
          }
        },
        {
          "incidentId": "f07cc84d-1ddf-4e1f-8edb-c4ec35dcf277",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 331,
            "column": 16
          }
        },
        {
          "incidentId": "385f241d-9e0e-419d-a671-546304722199",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversiontransforms",
                "isCustom": false
              }
            ],
            "line": 320,
            "column": 16
          }
        },
        {
          "incidentId": "f6dad413-4f3a-40cb-8761-63cc550d702e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog.mapkeytovalue",
                "isCustom": false
              }
            ],
            "line": 320,
            "column": 16
          }
        },
        {
          "incidentId": "b3df26d1-b569-4acd-b14c-085fc6bfc707",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.MulticlassClassificationCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "label": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog",
                "isCustom": false
              }
            ],
            "line": 318,
            "column": 16
          }
        },
        {
          "incidentId": "3c75f9ac-33bb-4b08-8813-77a3b353cf67",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.StandardTrainersCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.StandardTrainersCatalog",
            "label": "T:Microsoft.ML.StandardTrainersCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog",
                "isCustom": false
              }
            ],
            "line": 318,
            "column": 16
          }
        },
        {
          "incidentId": "3b548a13-0ad9-439c-b1dc-237bdad2bf38",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "T:Microsoft.ML.TextLoaderSaverCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "label": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog",
                "isCustom": false
              }
            ],
            "line": 275,
            "column": 16
          }
        },
        {
          "incidentId": "54bd6512-07a7-411f-a9e9-63718ad29f25",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 12
          }
        },
        {
          "incidentId": "39d85ca3-bd60-4ba2-a823-3b2970b78503",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 86,
            "column": 16
          }
        },
        {
          "incidentId": "bf57df0a-f634-42a5-b33b-6da85e6644c2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
              "protected": "P:Microsoft.ML.IDataView.Schema"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
            "protectedSnippet": "P:Microsoft.ML.IDataView.Schema",
            "label": "P:Microsoft.ML.IDataView.Schema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview.schema",
                "isCustom": false
              }
            ],
            "line": 331,
            "column": 16
          }
        },
        {
          "incidentId": "4087145b-1c2c-4508-8414-e62c48770070",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 331,
            "column": 16
          }
        },
        {
          "incidentId": "42af5e5e-4175-4a01-8ce1-6129afbdfd66",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 320,
            "column": 16
          }
        },
        {
          "incidentId": "e659541c-2129-461f-a3b7-65e25469e437",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.MulticlassClassification.Trainers.SdcaMaximumEntropy(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer",
            "label": "T:Microsoft.ML.Trainers.SdcaMaximumEntropyMulticlassTrainer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.sdcamaximumentropymulticlasstrainer",
                "isCustom": false
              }
            ],
            "line": 318,
            "column": 16
          }
        },
        {
          "incidentId": "b7094d0f-4bd9-4def-9cd9-12cc8aa9e885",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.TextCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.TextCatalog",
            "label": "T:Microsoft.ML.TextCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "4349cdd2-5b48-4e24-8c72-4c6597d51018",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 229,
            "column": 12
          }
        },
        {
          "incidentId": "3638ac6e-5883-414a-bff9-291fa35a288c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "T:Microsoft.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "T:Microsoft.Data.SqlClient.SqlConnection",
            "label": "T:Microsoft.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 197,
            "column": 16
          }
        },
        {
          "incidentId": "4acf5d28-bf8f-48ee-ba54-ea12e9789b9a",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var scoreJson = JsonConvert.SerializeObject(prediction.Score);",
              "protected": "T:Newtonsoft.Json.JsonConvert"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var scoreJson = JsonConvert.SerializeObject(prediction.Score);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonConvert",
            "label": "T:Newtonsoft.Json.JsonConvert",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert",
                "isCustom": false
              }
            ],
            "line": 90,
            "column": 16
          }
        },
        {
          "incidentId": "80e9a810-ba2f-48ca-a1ad-a6bff8d227dd",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JArray jsonArray = JArray.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JArray"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "JArray jsonArray = JArray.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JArray",
            "label": "T:Newtonsoft.Json.Linq.JArray",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jarray",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 16
          }
        },
        {
          "incidentId": "bc634c12-4d0e-4920-baa5-e20d726bfa90",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "c56e8de2-75c5-4398-b8fd-bd3b01b8a1bd",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Serialize(writer, new { TableName = string.Empty, Columns = new List\u003Cstring\u003E(), Rows = rows });",
              "protected": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "serializer.Serialize(writer, new { TableName = string.Empty, Columns = new List\u003Cstring\u003E(), Rows = rows });",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "label": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer.serialize",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 16
          }
        },
        {
          "incidentId": "f295d861-8da6-4140-b4b4-e0f14aa47898",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Conversion"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "label": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversion",
                "isCustom": false
              }
            ],
            "line": 320,
            "column": 16
          }
        },
        {
          "incidentId": "b0dfab23-f829-444e-9059-a56d05327a5b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "a86b95bb-17a6-40af-93e4-cc6935553865",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
              "protected": "P:Microsoft.ML.IDataView.Schema"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
            "protectedSnippet": "P:Microsoft.ML.IDataView.Schema",
            "label": "P:Microsoft.ML.IDataView.Schema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview.schema",
                "isCustom": false
              }
            ],
            "line": 289,
            "column": 16
          }
        },
        {
          "incidentId": "354e4f47-2ed0-4383-91a9-944be1e51488",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.featurizetext",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "1016003a-dd2f-47fa-91f2-568a56d6a6f0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Data.SqlClient, 5.2.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using var connection = new SqlConnection(connectionString);",
              "protected": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "using var connection = new SqlConnection(connectionString);",
            "protectedSnippet": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:Microsoft.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 12
          }
        },
        {
          "incidentId": "349edb48-86bb-4fff-bf2d-55efaa735fed",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, modelPath);",
              "protected": "T:Microsoft.ML.DataViewSchema"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, modelPath);",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema",
            "label": "T:Microsoft.ML.DataViewSchema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 12
          }
        },
        {
          "incidentId": "2aee8a7f-1778-4554-bf07-d545ca0e5df4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer",
            "label": "T:Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.sdcalogisticregressionbinarytrainer",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 12
          }
        },
        {
          "incidentId": "528568bc-8827-45d0-a0c9-ee969732715f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 16,
            "column": 12
          }
        },
        {
          "incidentId": "ec7665a4-c3a4-4ade-acd7-f86f7e5e9c74",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "P:Newtonsoft.Json.JsonReader.TokenType"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "P:Newtonsoft.Json.JsonReader.TokenType",
            "label": "P:Newtonsoft.Json.JsonReader.TokenType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader.tokentype",
                "isCustom": false
              }
            ],
            "line": 67,
            "column": 17
          }
        },
        {
          "incidentId": "42fbc4fd-1219-4566-a0b8-7dd76b53a466",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
              "protected": "T:Newtonsoft.Json.Linq.JToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JToken",
            "label": "T:Newtonsoft.Json.Linq.JToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 16
          }
        },
        {
          "incidentId": "0ecb5e21-fabf-4e29-8186-a1bf77515db7",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
              "protected": "P:Newtonsoft.Json.Linq.JArray.Item(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JArray.Item(System.Int32)",
            "label": "P:Newtonsoft.Json.Linq.JArray.Item(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jarray.this[int32]",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 16
          }
        },
        {
          "incidentId": "4c1e20b8-320f-46de-9dcf-0cabaa1271e0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainingPipeline = dataProcessPipeline.Append(trainer)\r\n                                                           .Append(mlContext.Transforms.Conversion.MapKeyToValue(\u0022PredictedLabel\u0022, \u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 320,
            "column": 16
          }
        },
        {
          "incidentId": "206d9734-e2d3-45c9-9d9f-c1e5fb0c4a9e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.featurizetext",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "40c17b05-56dc-4d07-8601-6b4cf5346199",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "mlContext.Model.Save(trainedModel, data.Schema, memoryStream);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.save",
                "isCustom": false
              }
            ],
            "line": 289,
            "column": 16
          }
        },
        {
          "incidentId": "ce0eb961-a84e-4c82-8621-4503be56aeda",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
              "protected": "T:Microsoft.ML.DataOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CSentimentData\u003E(dataPath, separatorChar: \u0027,\u0027, hasHeader: true);",
            "protectedSnippet": "T:Microsoft.ML.DataOperationsCatalog",
            "label": "T:Microsoft.ML.DataOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataoperationscatalog",
                "isCustom": false
              }
            ],
            "line": 275,
            "column": 16
          }
        },
        {
          "incidentId": "1a356e53-46c1-46e0-8dea-76a7a03ea74a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.OleDb, 9.0.0-preview.6.24302.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var connection = new OleDbConnection(excelConnectionString))\r\n                {\r\n                    await connection.OpenAsync();\r\n\r\n                    foreach (var sheetName in sheetNames)\r\n                    {\r\n                        var targetSheetName = \u0022S_\u0022 \u002B await SanitizeSheetNameAsync(sheetName);\r\n\r\n                        Console.WriteLine(\u0022targetSheetName: {0} sheetName: {1}\u0022, targetSheetName, sheetName);\r\n\r\n                        var dataTable = new DataTable(targetSheetName);\r\n                        var query = $\u0022SELECT * FROM [{sheetName}$]\u0022;\r\n                        using (var dataAdapter = new OleDbDataAdapter(query, connection))\r\n                        {\r\n                            await Task.Run(() =\u003E dataAdapter.Fill(dataTable));\r\n                        }\r\n\r\n                        dataSet.Tables.Add(dataTable);\r\n                    }\r\n                }",
              "protected": "T:System.Data.OleDb.OleDbConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\ExcelProcessor.cs",
            "snippet": "using (var connection = new OleDbConnection(excelConnectionString))\r\n                {\r\n                    await connection.OpenAsync();\r\n\r\n                    foreach (var sheetName in sheetNames)\r\n                    {\r\n                        var targetSheetName = \u0022S_\u0022 \u002B await SanitizeSheetNameAsync(sheetName);\r\n\r\n                        Console.WriteLine(\u0022targetSheetName: {0} sheetName: {1}\u0022, targetSheetName, sheetName);\r\n\r\n                        var dataTable = new DataTable(targetSheetName);\r\n                        var query = $\u0022SELECT * FROM [{sheetName}$]\u0022;\r\n                        using (var dataAdapter = new OleDbDataAdapter(query, connection))\r\n                        {\r\n                            await Task.Run(() =\u003E dataAdapter.Fill(dataTable));\r\n                        }\r\n\r\n                        dataSet.Tables.Add(dataTable);\r\n                    }\r\n                }",
            "protectedSnippet": "T:System.Data.OleDb.OleDbConnection",
            "label": "T:System.Data.OleDb.OleDbConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.oledb.oledbconnection",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 16
          }
        },
        {
          "incidentId": "423467fe-8189-417c-8461-ba8f7436ca4a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "T:Microsoft.ML.TransformExtensionsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "T:Microsoft.ML.TransformExtensionsCatalog",
            "label": "T:Microsoft.ML.TransformExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "26656fc7-258d-49d2-8532-6431ff41cbc8",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, TargetTableColumn? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, TargetTableColumn? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 8
          }
        },
        {
          "incidentId": "216fe1b0-4e0f-4264-b5af-b4bce29b6f2b",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override TargetTableColumn? ReadJson(JsonReader reader, Type objectType, TargetTableColumn? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\TargetTableColumnConverter.cs",
            "snippet": "public override TargetTableColumn? ReadJson(JsonReader reader, Type objectType, TargetTableColumn? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 7,
            "column": 8
          }
        },
        {
          "incidentId": "894124c6-7f53-4758-896f-c5c0aafa8912",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
              "protected": "T:Newtonsoft.Json.Linq.JToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JToken",
            "label": "T:Newtonsoft.Json.Linq.JToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 16
          }
        },
        {
          "incidentId": "3b641d96-747d-4331-beaf-30a6b43027c5",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Serialize(writer, new { value.TableName, Columns = value.Columns.Cast\u003CDataColumn\u003E().Select(c =\u003E c.ColumnName).ToList(), Rows = rows });",
              "protected": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "serializer.Serialize(writer, new { value.TableName, Columns = value.Columns.Cast\u003CDataColumn\u003E().Select(c =\u003E c.ColumnName).ToList(), Rows = rows });",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "label": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer.serialize",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 16
          }
        },
        {
          "incidentId": "47cec68d-69bd-4295-820b-1cf6c0f470b3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Text"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Text",
            "label": "P:Microsoft.ML.TransformsCatalog.Text",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.text",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "18ae4f05-00ac-46ef-8918-8233660e8dda",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                                            .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)",
            "label": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog.copycolumns",
                "isCustom": false
              }
            ],
            "line": 276,
            "column": 16
          }
        },
        {
          "incidentId": "0d723b33-08a6-4c9a-9402-ebb0cc91c5fc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(1)",
              "protected": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentData.cs",
            "snippet": "LoadColumn(1)",
            "protectedSnippet": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "label": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 9
          }
        },
        {
          "incidentId": "a81a9495-473d-4732-a936-4bc4f08d8a21",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\SentimentAnalysisBuilder.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(SentimentData.SentimentText))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(SentimentData.Sentiment)));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "7fd7bb90-00e8-4aba-98cc-82a1f40f55a7",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
              "protected": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\DataTableJsonConverter.cs",
            "snippet": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "label": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.this[string]",
                "isCustom": false
              }
            ],
            "line": 71,
            "column": 16
          }
        },
        {
          "incidentId": "f1de26e1-143d-40c8-a953-073bf9cfec90",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
              "protected": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \u0022Features\u0022, nameof(LanguageData.Question))\r\n                                            .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \u0022Label\u0022, inputColumnName: nameof(LanguageData.Response)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversiontransforms",
                "isCustom": false
              }
            ],
            "line": 314,
            "column": 16
          }
        },
        {
          "incidentId": "47a40b1b-b728-4a78-bf10-363ed4e19323",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities\\Blazor.Tools.BlazorBundler.Entities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
              "protected": "T:Microsoft.ML.BinaryClassificationCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities\\AIDataAccess.cs",
            "snippet": "var trainer = mlContext.BinaryClassification.Trainers.SdcaLogisticRegression(labelColumnName: \u0022Label\u0022, featureColumnName: \u0022Features\u0022);",
            "protectedSnippet": "T:Microsoft.ML.BinaryClassificationCatalog",
            "label": "T:Microsoft.ML.BinaryClassificationCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.binaryclassificationcatalog",
                "isCustom": false
              }
            ],
            "line": 279,
            "column": 16
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.Data\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.Data.csproj",
      "startingProject": true,
      "issues": 1,
      "storyPoints": 1,
      "ruleInstances": [
        {
          "incidentId": "030f7f2a-c7ce-4bac-a0e4-d59158778dca",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.Data\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.Data.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.Data\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.Data.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models.csproj",
      "startingProject": true,
      "issues": 2,
      "storyPoints": 3,
      "ruleInstances": [
        {
          "incidentId": "d3ca3dd3-c537-43dd-9ce5-8842cb47d94b",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2",
              "protected": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models.csproj",
            "snippet": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2",
            "protectedSnippet": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2",
            "label": "Microsoft.AspNetCore.Components 8.0.8"
          }
        },
        {
          "incidentId": "018ac7b8-7b3f-4b7d-b048-af459b8c087e",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.JSInterop, 8.0.8\n\nRecommendation:\n\nMicrosoft.JSInterop 9.0.0-preview.7.24406.2",
              "protected": "Microsoft.JSInterop, 8.0.8\n\nRecommendation:\n\nMicrosoft.JSInterop 9.0.0-preview.7.24406.2"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models.csproj",
            "snippet": "Microsoft.JSInterop, 8.0.8\n\nRecommendation:\n\nMicrosoft.JSInterop 9.0.0-preview.7.24406.2",
            "protectedSnippet": "Microsoft.JSInterop, 8.0.8\n\nRecommendation:\n\nMicrosoft.JSInterop 9.0.0-preview.7.24406.2",
            "label": "Microsoft.JSInterop 8.0.8"
          }
        },
        {
          "incidentId": "16218dad-4e6d-4c73-a1fa-4fac554d7762",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.Models.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.ViewModels\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.ViewModels.csproj",
      "startingProject": true,
      "issues": 1,
      "storyPoints": 1,
      "ruleInstances": [
        {
          "incidentId": "0770fe14-4806-4f65-ac8f-772fd5ade810",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.ViewModels\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.ViewModels.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Entities.SampleObjects.ViewModels\\Blazor.Tools.BlazorBundler.Entities.SampleObjects.ViewModels.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
      "startingProject": true,
      "issues": 3,
      "storyPoints": 28,
      "ruleInstances": [
        {
          "incidentId": "298afa06-7372-42e6-9bef-8f8ef90ca911",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "System.Management, 8.0.0\n\nRecommendation:\n\nSystem.Management 9.0.0-preview.7.24405.7",
              "protected": "System.Management, 8.0.0\n\nRecommendation:\n\nSystem.Management 9.0.0-preview.7.24405.7"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
            "snippet": "System.Management, 8.0.0\n\nRecommendation:\n\nSystem.Management 9.0.0-preview.7.24405.7",
            "protectedSnippet": "System.Management, 8.0.0\n\nRecommendation:\n\nSystem.Management 9.0.0-preview.7.24405.7",
            "label": "System.Management 8.0.0"
          }
        },
        {
          "incidentId": "c1c45e9d-a03c-4f9f-b1e4-c00852903e60",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.AspNetCore.Components.Web, 6.0.26\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Web 9.0.0-preview.7.24406.2",
              "protected": "Microsoft.AspNetCore.Components.Web, 6.0.26\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Web 9.0.0-preview.7.24406.2"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
            "snippet": "Microsoft.AspNetCore.Components.Web, 6.0.26\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Web 9.0.0-preview.7.24406.2",
            "protectedSnippet": "Microsoft.AspNetCore.Components.Web, 6.0.26\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Web 9.0.0-preview.7.24406.2",
            "label": "Microsoft.AspNetCore.Components.Web 6.0.26"
          }
        },
        {
          "incidentId": "38cfa547-ec62-473a-8f90-d85331fd8f35",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        },
        {
          "incidentId": "df6626d4-88ac-4899-8cca-5ee354009c17",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "settings.Converters.Add(new TargetTableColumnConverter());",
              "protected": "P:Newtonsoft.Json.JsonSerializerSettings.Converters"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "settings.Converters.Add(new TargetTableColumnConverter());",
            "protectedSnippet": "P:Newtonsoft.Json.JsonSerializerSettings.Converters",
            "label": "P:Newtonsoft.Json.JsonSerializerSettings.Converters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings.converters",
                "isCustom": false
              }
            ],
            "line": 92,
            "column": 24
          }
        },
        {
          "incidentId": "b550113f-83fc-4aea-ae62-db2b45a8ff52",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
              "protected": "M:Newtonsoft.Json.JsonSerializerSettings.#ctor"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializerSettings.#ctor",
            "label": "M:Newtonsoft.Json.JsonSerializerSettings.#ctor",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings.jsonserializersettings",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 16
          }
        },
        {
          "incidentId": "e2761e89-1739-422f-b930-3de652cb1e7d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
              "protected": "T:Newtonsoft.Json.JsonSerializerSettings"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializerSettings",
            "label": "T:Newtonsoft.Json.JsonSerializerSettings",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 16
          }
        },
        {
          "incidentId": "cfdb2208-a13a-4b2b-bce3-a084699c94e7",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
              "protected": "P:Newtonsoft.Json.JsonSerializerSettings.ReferenceLoopHandling"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
            "protectedSnippet": "P:Newtonsoft.Json.JsonSerializerSettings.ReferenceLoopHandling",
            "label": "P:Newtonsoft.Json.JsonSerializerSettings.ReferenceLoopHandling",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings.referenceloophandling",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 16
          }
        },
        {
          "incidentId": "3839a1bb-ad1d-4cc0-a9eb-7f1f50ca3da7",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return JsonConvert.SerializeObject(rowsAsDictionaries);",
              "protected": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "return JsonConvert.SerializeObject(rowsAsDictionaries);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)",
            "label": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert.serializeobject",
                "isCustom": false
              }
            ],
            "line": 121,
            "column": 12
          }
        },
        {
          "incidentId": "f7bc4e2c-8b61-4edf-b9e1-0f59e2a866c7",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
              "protected": "T:Newtonsoft.Json.ReferenceLoopHandling"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
            "protectedSnippet": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "label": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.referenceloophandling",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 16
          }
        },
        {
          "incidentId": "3b7f6d2c-a863-4879-90e4-15e4e825e29b",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
              "protected": "F:Newtonsoft.Json.ReferenceLoopHandling.Ignore"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
            "protectedSnippet": "F:Newtonsoft.Json.ReferenceLoopHandling.Ignore",
            "label": "F:Newtonsoft.Json.ReferenceLoopHandling.Ignore",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.referenceloophandling.ignore",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 16
          }
        },
        {
          "incidentId": "e61e4166-22c7-4656-afda-5123b30bc87d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
              "protected": "T:Newtonsoft.Json.ReferenceLoopHandling"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
            "protectedSnippet": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "label": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.referenceloophandling",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 16
          }
        },
        {
          "incidentId": "0f5523ef-f5af-463f-ba76-abd3289fadeb",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
              "protected": "T:Newtonsoft.Json.ReferenceLoopHandling"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n                };",
            "protectedSnippet": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "label": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.referenceloophandling",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 16
          }
        },
        {
          "incidentId": "b4934197-0632-418a-b6a0-16726b2ecdb2",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var rowsAsDictionaries = JsonConvert.DeserializeObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E(serializedData);",
              "protected": "T:Newtonsoft.Json.JsonConvert"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var rowsAsDictionaries = JsonConvert.DeserializeObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E(serializedData);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonConvert",
            "label": "T:Newtonsoft.Json.JsonConvert",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert",
                "isCustom": false
              }
            ],
            "line": 132,
            "column": 12
          }
        },
        {
          "incidentId": "fe03f193-3288-441f-bcaf-977156efb50c",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "deserializedData = JsonConvert.DeserializeObject\u003CT\u003E(serializedData, settings);",
              "protected": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String,Newtonsoft.Json.JsonSerializerSettings)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "deserializedData = JsonConvert.DeserializeObject\u003CT\u003E(serializedData, settings);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String,Newtonsoft.Json.JsonSerializerSettings)",
            "label": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String,Newtonsoft.Json.JsonSerializerSettings)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert.deserializeobject",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 16
          }
        },
        {
          "incidentId": "be38408e-6f80-4ece-9e74-3e9fbe84e9bb",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializedObject = JsonConvert.SerializeObject(value, settings);",
              "protected": "T:Newtonsoft.Json.JsonConvert"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "serializedObject = JsonConvert.SerializeObject(value, settings);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonConvert",
            "label": "T:Newtonsoft.Json.JsonConvert",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 16
          }
        },
        {
          "incidentId": "4cf2ce83-a466-411b-b279-b5e34d920708",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "settings.Converters.Add(new DataTableJsonConverter());",
              "protected": "P:Newtonsoft.Json.JsonSerializerSettings.Converters"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "settings.Converters.Add(new DataTableJsonConverter());",
            "protectedSnippet": "P:Newtonsoft.Json.JsonSerializerSettings.Converters",
            "label": "P:Newtonsoft.Json.JsonSerializerSettings.Converters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings.converters",
                "isCustom": false
              }
            ],
            "line": 43,
            "column": 24
          }
        },
        {
          "incidentId": "695946f9-f13b-47b9-8552-921ae4c0b2fa",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializedObject = JsonConvert.SerializeObject(value, settings);",
              "protected": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,Newtonsoft.Json.JsonSerializerSettings)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "serializedObject = JsonConvert.SerializeObject(value, settings);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,Newtonsoft.Json.JsonSerializerSettings)",
            "label": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,Newtonsoft.Json.JsonSerializerSettings)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert.serializeobject",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 16
          }
        },
        {
          "incidentId": "74e28764-b3c8-458d-8e10-3ca31fb0eb6b",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings();",
              "protected": "T:Newtonsoft.Json.JsonSerializerSettings"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var settings = new JsonSerializerSettings();",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializerSettings",
            "label": "T:Newtonsoft.Json.JsonSerializerSettings",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 16
          }
        },
        {
          "incidentId": "78bc1f43-f6c2-409a-a29b-5ef0fa2d865d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings();",
              "protected": "M:Newtonsoft.Json.JsonSerializerSettings.#ctor"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var settings = new JsonSerializerSettings();",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializerSettings.#ctor",
            "label": "M:Newtonsoft.Json.JsonSerializerSettings.#ctor",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings.jsonserializersettings",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 16
          }
        },
        {
          "incidentId": "f609c8b8-ab38-480f-bd80-27272d63a43f",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return JsonConvert.SerializeObject(rowsAsDictionaries);",
              "protected": "T:Newtonsoft.Json.JsonConvert"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "return JsonConvert.SerializeObject(rowsAsDictionaries);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonConvert",
            "label": "T:Newtonsoft.Json.JsonConvert",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert",
                "isCustom": false
              }
            ],
            "line": 121,
            "column": 12
          }
        },
        {
          "incidentId": "c41894c1-765f-461a-835c-c6b7f2237705",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "settings.Converters.Add(new DataTableJsonConverter());",
              "protected": "P:Newtonsoft.Json.JsonSerializerSettings.Converters"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "settings.Converters.Add(new DataTableJsonConverter());",
            "protectedSnippet": "P:Newtonsoft.Json.JsonSerializerSettings.Converters",
            "label": "P:Newtonsoft.Json.JsonSerializerSettings.Converters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings.converters",
                "isCustom": false
              }
            ],
            "line": 97,
            "column": 20
          }
        },
        {
          "incidentId": "a081cc5d-f87a-41b0-bf42-9b74391ed801",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "settings.Converters.Add(new BBBrowserFileJsonConverter());",
              "protected": "P:Newtonsoft.Json.JsonSerializerSettings.Converters"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "settings.Converters.Add(new BBBrowserFileJsonConverter());",
            "protectedSnippet": "P:Newtonsoft.Json.JsonSerializerSettings.Converters",
            "label": "P:Newtonsoft.Json.JsonSerializerSettings.Converters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings.converters",
                "isCustom": false
              }
            ],
            "line": 101,
            "column": 20
          }
        },
        {
          "incidentId": "87b753b4-7bdb-442c-a6c9-832014b58a33",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "deserializedData = JsonConvert.DeserializeObject\u003CT\u003E(serializedData, settings);",
              "protected": "T:Newtonsoft.Json.JsonConvert"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "deserializedData = JsonConvert.DeserializeObject\u003CT\u003E(serializedData, settings);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonConvert",
            "label": "T:Newtonsoft.Json.JsonConvert",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 16
          }
        },
        {
          "incidentId": "f6ef5f9f-99ca-4af5-819e-0415519b614e",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var rowsAsDictionaries = JsonConvert.DeserializeObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E(serializedData);",
              "protected": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var rowsAsDictionaries = JsonConvert.DeserializeObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E(serializedData);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)",
            "label": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert.deserializeobject",
                "isCustom": false
              }
            ],
            "line": 132,
            "column": 12
          }
        },
        {
          "incidentId": "40caf3f0-70f8-4539-88d4-d669ac00ea69",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var rows = JsonConvert.DeserializeObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E(serializedData);",
              "protected": "T:Newtonsoft.Json.JsonConvert"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var rows = JsonConvert.DeserializeObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E(serializedData);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonConvert",
            "label": "T:Newtonsoft.Json.JsonConvert",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert",
                "isCustom": false
              }
            ],
            "line": 177,
            "column": 12
          }
        },
        {
          "incidentId": "2c852bd5-c097-431c-8757-a290e62f0d0d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return JsonConvert.SerializeObject(rows);",
              "protected": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "return JsonConvert.SerializeObject(rows);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)",
            "label": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert.serializeobject",
                "isCustom": false
              }
            ],
            "line": 172,
            "column": 12
          }
        },
        {
          "incidentId": "e3a1a5fa-265c-4ee3-890a-2f3d3ccb1045",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return JsonConvert.SerializeObject(rows);",
              "protected": "T:Newtonsoft.Json.JsonConvert"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "return JsonConvert.SerializeObject(rows);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonConvert",
            "label": "T:Newtonsoft.Json.JsonConvert",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert",
                "isCustom": false
              }
            ],
            "line": 172,
            "column": 12
          }
        },
        {
          "incidentId": "8c092ad0-4dcc-4aab-9107-dc5636f852e4",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Extensions\\Blazor.Tools.BlazorBundler.Extensions.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var rows = JsonConvert.DeserializeObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E(serializedData);",
              "protected": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Extensions\\SerializationExtensions.cs",
            "snippet": "var rows = JsonConvert.DeserializeObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E(serializedData);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)",
            "label": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert.deserializeobject",
                "isCustom": false
              }
            ],
            "line": 177,
            "column": 12
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.BlazorBundler.Factories\\Blazor.Tools.BlazorBundler.Factories.csproj",
      "startingProject": true,
      "issues": 1,
      "storyPoints": 1,
      "ruleInstances": [
        {
          "incidentId": "2fb5c70c-421f-4260-a09b-f4be47b0a7f0",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Factories\\Blazor.Tools.BlazorBundler.Factories.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Factories\\Blazor.Tools.BlazorBundler.Factories.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.BlazorBundler.Interfaces\\Blazor.Tools.BlazorBundler.Interfaces.csproj",
      "startingProject": true,
      "issues": 2,
      "storyPoints": 2,
      "ruleInstances": [
        {
          "incidentId": "4f70ba95-b8ce-4903-8506-f11d766f52d1",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Interfaces\\Blazor.Tools.BlazorBundler.Interfaces.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2",
              "protected": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Interfaces\\Blazor.Tools.BlazorBundler.Interfaces.csproj",
            "snippet": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2",
            "protectedSnippet": "Microsoft.AspNetCore.Components, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components 9.0.0-preview.7.24406.2",
            "label": "Microsoft.AspNetCore.Components 8.0.8"
          }
        },
        {
          "incidentId": "72e3794f-709d-4744-9a10-ae52037ee519",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Interfaces\\Blazor.Tools.BlazorBundler.Interfaces.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Interfaces\\Blazor.Tools.BlazorBundler.Interfaces.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.BlazorBundler.Models\\Blazor.Tools.BlazorBundler.Models.csproj",
      "startingProject": true,
      "issues": 1,
      "storyPoints": 1,
      "ruleInstances": [
        {
          "incidentId": "e04a441e-bb42-4134-bf5d-c97ab42718b1",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Models\\Blazor.Tools.BlazorBundler.Models.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Models\\Blazor.Tools.BlazorBundler.Models.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
      "startingProject": true,
      "issues": 2,
      "storyPoints": 11,
      "ruleInstances": [
        {
          "incidentId": "5e04c84d-12ae-4318-bbc8-dfb953744a09",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        },
        {
          "incidentId": "f703cb2c-2911-4822-9475-dce1f214432d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
              "protected": "M:Newtonsoft.Json.JsonSerializerSettings.#ctor"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.SessionManagement\\SessionTableService.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializerSettings.#ctor",
            "label": "M:Newtonsoft.Json.JsonSerializerSettings.#ctor",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings.jsonserializersettings",
                "isCustom": false
              }
            ],
            "line": 123,
            "column": 16
          }
        },
        {
          "incidentId": "e9bf1e6d-897d-4a33-92e8-7a1800344fc1",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
              "protected": "T:Newtonsoft.Json.JsonSerializerSettings"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.SessionManagement\\SessionTableService.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializerSettings",
            "label": "T:Newtonsoft.Json.JsonSerializerSettings",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings",
                "isCustom": false
              }
            ],
            "line": 123,
            "column": 16
          }
        },
        {
          "incidentId": "2e08e615-eaec-462f-81fb-e518f187ef9d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
              "protected": "T:Newtonsoft.Json.ReferenceLoopHandling"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.SessionManagement\\SessionTableService.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
            "protectedSnippet": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "label": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.referenceloophandling",
                "isCustom": false
              }
            ],
            "line": 123,
            "column": 16
          }
        },
        {
          "incidentId": "7f021584-05ed-484e-b42c-19d8c6991cf0",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
              "protected": "P:Newtonsoft.Json.JsonSerializerSettings.ReferenceLoopHandling"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.SessionManagement\\SessionTableService.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
            "protectedSnippet": "P:Newtonsoft.Json.JsonSerializerSettings.ReferenceLoopHandling",
            "label": "P:Newtonsoft.Json.JsonSerializerSettings.ReferenceLoopHandling",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings.referenceloophandling",
                "isCustom": false
              }
            ],
            "line": 123,
            "column": 16
          }
        },
        {
          "incidentId": "03e153d4-0bb9-418e-a3e6-a6cdb7d8a5b0",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonContent = JsonConvert.SerializeObject(model, settings);",
              "protected": "T:Newtonsoft.Json.JsonConvert"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.SessionManagement\\SessionTableService.cs",
            "snippet": "var jsonContent = JsonConvert.SerializeObject(model, settings);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonConvert",
            "label": "T:Newtonsoft.Json.JsonConvert",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert",
                "isCustom": false
              }
            ],
            "line": 129,
            "column": 16
          }
        },
        {
          "incidentId": "59d9e66b-50ba-4988-ad2e-eb313edd23eb",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
              "protected": "T:Newtonsoft.Json.ReferenceLoopHandling"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.SessionManagement\\SessionTableService.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
            "protectedSnippet": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "label": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.referenceloophandling",
                "isCustom": false
              }
            ],
            "line": 123,
            "column": 16
          }
        },
        {
          "incidentId": "fc7c849e-e099-41b4-865d-0127fe041b95",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
              "protected": "F:Newtonsoft.Json.ReferenceLoopHandling.Ignore"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.SessionManagement\\SessionTableService.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
            "protectedSnippet": "F:Newtonsoft.Json.ReferenceLoopHandling.Ignore",
            "label": "F:Newtonsoft.Json.ReferenceLoopHandling.Ignore",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.referenceloophandling.ignore",
                "isCustom": false
              }
            ],
            "line": 123,
            "column": 16
          }
        },
        {
          "incidentId": "6427fb53-f49a-4e8a-9f2f-c55015e89a65",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
              "protected": "T:Newtonsoft.Json.ReferenceLoopHandling"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.SessionManagement\\SessionTableService.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
            "protectedSnippet": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "label": "T:Newtonsoft.Json.ReferenceLoopHandling",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.referenceloophandling",
                "isCustom": false
              }
            ],
            "line": 123,
            "column": 16
          }
        },
        {
          "incidentId": "205be94d-4a87-426b-8602-3681ffa09583",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
              "protected": "P:Newtonsoft.Json.JsonSerializerSettings.Converters"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.SessionManagement\\SessionTableService.cs",
            "snippet": "var settings = new JsonSerializerSettings\r\n                {\r\n                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                    Converters = new List\u003CJsonConverter\u003E { new DataTableJsonConverter(), new TargetTableColumnConverter() }\r\n                };",
            "protectedSnippet": "P:Newtonsoft.Json.JsonSerializerSettings.Converters",
            "label": "P:Newtonsoft.Json.JsonSerializerSettings.Converters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializersettings.converters",
                "isCustom": false
              }
            ],
            "line": 123,
            "column": 16
          }
        },
        {
          "incidentId": "a0b38197-eb48-4cfe-a6df-a708c4d69eba",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.SessionManagement\\Blazor.Tools.BlazorBundler.SessionManagement.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonContent = JsonConvert.SerializeObject(model, settings);",
              "protected": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,Newtonsoft.Json.JsonSerializerSettings)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.SessionManagement\\SessionTableService.cs",
            "snippet": "var jsonContent = JsonConvert.SerializeObject(model, settings);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,Newtonsoft.Json.JsonSerializerSettings)",
            "label": "M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,Newtonsoft.Json.JsonSerializerSettings)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert.serializeobject",
                "isCustom": false
              }
            ],
            "line": 129,
            "column": 16
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
      "startingProject": true,
      "issues": 3,
      "storyPoints": 163,
      "ruleInstances": [
        {
          "incidentId": "455f4ec8-81cf-4f5d-bfa0-bd057141b724",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.AspNetCore.Components.Forms, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Forms 9.0.0-preview.7.24406.2",
              "protected": "Microsoft.AspNetCore.Components.Forms, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Forms 9.0.0-preview.7.24406.2"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
            "snippet": "Microsoft.AspNetCore.Components.Forms, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Forms 9.0.0-preview.7.24406.2",
            "protectedSnippet": "Microsoft.AspNetCore.Components.Forms, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Components.Forms 9.0.0-preview.7.24406.2",
            "label": "Microsoft.AspNetCore.Components.Forms 8.0.8"
          }
        },
        {
          "incidentId": "42ed543a-b81c-42bc-bd65-30cc2c112404",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        },
        {
          "incidentId": "e09ca10d-9b7d-4753-9c49-443a16be5c5a",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteValue(value?.ContentType);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteValue(value?.ContentType);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writevalue",
                "isCustom": false
              }
            ],
            "line": 43,
            "column": 12
          }
        },
        {
          "incidentId": "2e690011-3896-4d07-81f7-ef378743ed4d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteValue(value?.Size);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int64})"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteValue(value?.Size);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int64})",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int64})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writevalue",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "0fa2e54c-2e46-42be-8e20-a4c7fdee6425",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteValue(value?.LastModified);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.DateTimeOffset})"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteValue(value?.LastModified);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.DateTimeOffset})",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.DateTimeOffset})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writevalue",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 12
          }
        },
        {
          "incidentId": "61723190-efcb-4aac-9332-3cbc941047b6",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WritePropertyName(\u0022LastModified\u0022);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WritePropertyName(\u0022LastModified\u0022);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writepropertyname",
                "isCustom": false
              }
            ],
            "line": 38,
            "column": 12
          }
        },
        {
          "incidentId": "990d6537-691c-4e08-bdfb-cc3927bc4090",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddSyntaxTrees(syntaxTree);",
              "protected": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddSyntaxTrees(Microsoft.CodeAnalysis.SyntaxTree[])"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddSyntaxTrees(syntaxTree);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddSyntaxTrees(Microsoft.CodeAnalysis.SyntaxTree[])",
            "label": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddSyntaxTrees(Microsoft.CodeAnalysis.SyntaxTree[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation.addsyntaxtrees",
                "isCustom": false
              }
            ],
            "line": 70,
            "column": 12
          }
        },
        {
          "incidentId": "f775b191-bfe8-4de8-995a-7c6b24741890",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var syntaxTree = CSharpSyntaxTree.ParseText(classCode);",
              "protected": "T:Microsoft.CodeAnalysis.SyntaxTree"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var syntaxTree = CSharpSyntaxTree.ParseText(classCode);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.SyntaxTree",
            "label": "T:Microsoft.CodeAnalysis.SyntaxTree",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.syntaxtree",
                "isCustom": false
              }
            ],
            "line": 68,
            "column": 12
          }
        },
        {
          "incidentId": "edc1754d-4766-40c7-9ebc-e8ea5d1a4da9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "87ccb329-2693-4915-8e48-a2b1dc7613b2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
              "protected": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)",
            "label": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation.create",
                "isCustom": false
              }
            ],
            "line": 50,
            "column": 12
          }
        },
        {
          "incidentId": "ed0be3ae-d0d7-492a-a790-310273b04138",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
              "protected": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])",
            "label": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation.addreferences",
                "isCustom": false
              }
            ],
            "line": 50,
            "column": 12
          }
        },
        {
          "incidentId": "590917c0-de07-41a3-8e83-ea8528667976",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider,System.Boolean,Microsoft.CodeAnalysis.MetadataImportOptions,Microsoft.CodeAnalysis.NullableContextOptions)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider,System.Boolean,Microsoft.CodeAnalysis.MetadataImportOptions,Microsoft.CodeAnalysis.NullableContextOptions)",
            "label": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider,System.Boolean,Microsoft.CodeAnalysis.MetadataImportOptions,Microsoft.CodeAnalysis.NullableContextOptions)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilationoptions.csharpcompilationoptions",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "ebbbbe86-5827-4f7a-8bb1-0412d63da9da",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)",
            "label": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation.create",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "f37bd0d8-f15e-470a-8a7d-fb8f88e72af9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)",
            "label": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation.create",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "2678d87b-ebf7-45e1-b87a-1fb95efbfb7d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 12
          }
        },
        {
          "incidentId": "66acce04-7164-4989-bca0-e0c302c0a277",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
              "protected": "P:Newtonsoft.Json.Linq.JContainer.Count"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JContainer.Count",
            "label": "P:Newtonsoft.Json.Linq.JContainer.Count",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jcontainer.count",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 16
          }
        },
        {
          "incidentId": "a9b4038e-6fd1-4599-ab55-d3802ad1424c",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Serialize(writer, new { TableName = string.Empty, Columns = new List\u003Cstring\u003E(), Rows = rows });",
              "protected": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "serializer.Serialize(writer, new { TableName = string.Empty, Columns = new List\u003Cstring\u003E(), Rows = rows });",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "label": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer.serialize",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 16
          }
        },
        {
          "incidentId": "5d808475-cf6b-48f3-8318-196493f4e020",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var result = _compilation.Emit(ms);",
              "protected": "T:Microsoft.CodeAnalysis.Emit.EmitResult"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var result = _compilation.Emit(ms);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.Emit.EmitResult",
            "label": "T:Microsoft.CodeAnalysis.Emit.EmitResult",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.emit.emitresult",
                "isCustom": false
              }
            ],
            "line": 110,
            "column": 12
          }
        },
        {
          "incidentId": "6ec3340a-675b-4831-8958-397f7489a564",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 50,
            "column": 12
          }
        },
        {
          "incidentId": "ea05e6be-0938-46f0-afb1-01067ddf1f04",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
              "protected": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])",
            "label": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation.addreferences",
                "isCustom": false
              }
            ],
            "line": 50,
            "column": 12
          }
        },
        {
          "incidentId": "26c8b608-b546-4f24-9e55-be4f4a46cb0e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var reference = MetadataReference.CreateFromFile(assemblyPath);",
              "protected": "T:Microsoft.CodeAnalysis.PortableExecutableReference"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var reference = MetadataReference.CreateFromFile(assemblyPath);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.PortableExecutableReference",
            "label": "T:Microsoft.CodeAnalysis.PortableExecutableReference",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.portableexecutablereference",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 12
          }
        },
        {
          "incidentId": "6032c778-d314-4fc0-a640-cfff4bbf5004",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return _outputKind;",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "return _outputKind;",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 18
          }
        },
        {
          "incidentId": "e1391688-1b3f-4381-b60d-3c51ad21e329",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
              "protected": "F:Microsoft.CodeAnalysis.OutputKind.DynamicallyLinkedLibrary"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
            "protectedSnippet": "F:Microsoft.CodeAnalysis.OutputKind.DynamicallyLinkedLibrary",
            "label": "F:Microsoft.CodeAnalysis.OutputKind.DynamicallyLinkedLibrary",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind.dynamicallylinkedlibrary",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 12
          }
        },
        {
          "incidentId": "6b21c775-5905-4e30-a5e9-85f4cd7b7a42",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "P:Newtonsoft.Json.JsonReader.TokenType"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "P:Newtonsoft.Json.JsonReader.TokenType",
            "label": "P:Newtonsoft.Json.JsonReader.TokenType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader.tokentype",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "9c4219f6-4400-4cc0-a881-d35172bec792",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
              "protected": "M:Newtonsoft.Json.Linq.JToken.CreateReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JToken.CreateReader",
            "label": "M:Newtonsoft.Json.Linq.JToken.CreateReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken.createreader",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "140c95b9-e923-4d66-b0de-2b4d7618e752",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddSyntaxTrees(syntaxTree);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddSyntaxTrees(syntaxTree);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 70,
            "column": 12
          }
        },
        {
          "incidentId": "604ba52a-0ad8-4878-9418-8ab6118b15d5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var syntaxTree = CSharpSyntaxTree.ParseText(classCode);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var syntaxTree = CSharpSyntaxTree.ParseText(classCode);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpsyntaxtree",
                "isCustom": false
              }
            ],
            "line": 68,
            "column": 12
          }
        },
        {
          "incidentId": "85620c64-0f99-4435-983e-f11d2965ffdf",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddReferences(reference);",
              "protected": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddReferences(reference);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])",
            "label": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation.addreferences",
                "isCustom": false
              }
            ],
            "line": 56,
            "column": 12
          }
        },
        {
          "incidentId": "f966662a-639e-41e7-81ad-5a367938f2bf",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 34
          }
        },
        {
          "incidentId": "409ee932-0fe0-49c6-ae5b-0c3879c4b1e8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider,System.Boolean,Microsoft.CodeAnalysis.MetadataImportOptions,Microsoft.CodeAnalysis.NullableContextOptions)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider,System.Boolean,Microsoft.CodeAnalysis.MetadataImportOptions,Microsoft.CodeAnalysis.NullableContextOptions)",
            "label": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider,System.Boolean,Microsoft.CodeAnalysis.MetadataImportOptions,Microsoft.CodeAnalysis.NullableContextOptions)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilationoptions.csharpcompilationoptions",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "d7f67e70-0349-46d0-8520-5bf8906f67e3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 12
          }
        },
        {
          "incidentId": "31448111-a105-44a8-8428-5718c53e7460",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }",
              "protected": "M:Newtonsoft.Json.Linq.JObject.TryGetValue(System.String,Newtonsoft.Json.Linq.JToken@)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JObject.TryGetValue(System.String,Newtonsoft.Json.Linq.JToken@)",
            "label": "M:Newtonsoft.Json.Linq.JObject.TryGetValue(System.String,Newtonsoft.Json.Linq.JToken@)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.trygetvalue",
                "isCustom": false
              }
            ],
            "line": 58,
            "column": 28
          }
        },
        {
          "incidentId": "6befe0c1-d9dd-45a1-8f0e-13804de0991a",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override BBBrowserFile ReadJson(JsonReader reader, Type objectType, BBBrowserFile? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "public override BBBrowserFile ReadJson(JsonReader reader, Type objectType, BBBrowserFile? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 8,
            "column": 8
          }
        },
        {
          "incidentId": "e1253857-69a3-4a7a-ad52-3009e3cfaebc",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
              "protected": "M:Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader,System.Object)",
            "label": "M:Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer.populate",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "c94a2940-decf-4577-b92a-51996cf2f87d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "P:Microsoft.CodeAnalysis.Diagnostic.Severity"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "P:Microsoft.CodeAnalysis.Diagnostic.Severity",
            "label": "P:Microsoft.CodeAnalysis.Diagnostic.Severity",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnostic.severity",
                "isCustom": false
              }
            ],
            "line": 114,
            "column": 16
          }
        },
        {
          "incidentId": "4f6e94e5-3aa5-4c7a-bbc5-8e3aecd5f4dd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var reference = MetadataReference.CreateFromImage(assemblyBytes);",
              "protected": "T:Microsoft.CodeAnalysis.PortableExecutableReference"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var reference = MetadataReference.CreateFromImage(assemblyBytes);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.PortableExecutableReference",
            "label": "T:Microsoft.CodeAnalysis.PortableExecutableReference",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.portableexecutablereference",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 12
          }
        },
        {
          "incidentId": "699e9df2-4859-437a-80aa-ae0cb7891d52",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 50,
            "column": 12
          }
        },
        {
          "incidentId": "9f4f959b-c97c-4ee9-a940-98e9c2c5e0f9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 50,
            "column": 12
          }
        },
        {
          "incidentId": "3b4a9cf1-ae6d-4ca7-b4d1-ca059a053c7f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "0eb6c07f-2066-45ca-9e21-93d58630a092",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 12
          }
        },
        {
          "incidentId": "205990df-8f96-4e1a-b74d-d655c42786d2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 12
          }
        },
        {
          "incidentId": "d1fd4db4-6d7e-489d-a391-3793f7884317",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "P:Newtonsoft.Json.JsonReader.TokenType"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "P:Newtonsoft.Json.JsonReader.TokenType",
            "label": "P:Newtonsoft.Json.JsonReader.TokenType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader.tokentype",
                "isCustom": false
              }
            ],
            "line": 67,
            "column": 17
          }
        },
        {
          "incidentId": "e95ae97b-acbd-4a6d-883f-6cc02340603e",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "a4498f1d-c434-4e3a-b0fa-8df418845798",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
              "protected": "F:Newtonsoft.Json.JsonToken.Null"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
            "protectedSnippet": "F:Newtonsoft.Json.JsonToken.Null",
            "label": "F:Newtonsoft.Json.JsonToken.Null",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken.null",
                "isCustom": false
              }
            ],
            "line": 10,
            "column": 12
          }
        },
        {
          "incidentId": "a267e692-5a48-432d-b396-c5c472066e29",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 10,
            "column": 12
          }
        },
        {
          "incidentId": "0431c5fe-bd44-4f07-9636-20b4486162f5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Diagnostics"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Diagnostics",
            "label": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Diagnostics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.emit.emitresult.diagnostics",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 16
          }
        },
        {
          "incidentId": "075adffd-c2b2-46c5-b444-caf48b7da0e3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var result = _compilation.Emit(ms);",
              "protected": "M:Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.IMethodSymbol,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.EmbeddedText},System.IO.Stream,System.Threading.CancellationToken)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var result = _compilation.Emit(ms);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.IMethodSymbol,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.EmbeddedText},System.IO.Stream,System.Threading.CancellationToken)",
            "label": "M:Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.IMethodSymbol,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.EmbeddedText},System.IO.Stream,System.Threading.CancellationToken)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.compilation.emit",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 12
          }
        },
        {
          "incidentId": "ea8fa03f-6ad3-418d-a607-949b96a36102",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 56,
            "column": 12
          }
        },
        {
          "incidentId": "77495e52-0b30-4629-8dcc-c1f9b82a2b20",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 50,
            "column": 12
          }
        },
        {
          "incidentId": "faa20223-77cf-49dc-b3dd-079c709afe8f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var reference = MetadataReference.CreateFromFile(assemblyPath);",
              "protected": "M:Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(System.String,Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var reference = MetadataReference.CreateFromFile(assemblyPath);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(System.String,Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider)",
            "label": "M:Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(System.String,Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.metadatareference.createfromfile",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 12
          }
        },
        {
          "incidentId": "3a7b1af4-522e-4936-95ae-cc7df6048810",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public OutputKind OutputKind",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "public OutputKind OutputKind",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 8
          }
        },
        {
          "incidentId": "f4c1c936-34b2-4612-ae55-f5d9e71eb958",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_outputKind",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_outputKind",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 21,
            "column": 27
          }
        },
        {
          "incidentId": "47c2cbcf-aae9-4a59-a76a-4379f3e64d6f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "cde74c4c-bbd3-45a9-818a-64d9089849d9",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
              "protected": "T:Newtonsoft.Json.Linq.JToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JToken",
            "label": "T:Newtonsoft.Json.Linq.JToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 16
          }
        },
        {
          "incidentId": "642900ac-0e2b-4a06-a702-73efb7e8aca0",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WritePropertyName(\u0022ContentType\u0022);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WritePropertyName(\u0022ContentType\u0022);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writepropertyname",
                "isCustom": false
              }
            ],
            "line": 42,
            "column": 12
          }
        },
        {
          "incidentId": "53d236ef-f7de-48db-9c6f-d668a9935971",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteStartObject();",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteStartObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteStartObject();",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteStartObject",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteStartObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writestartobject",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "40f8554f-37e2-4e3c-abc2-53bb267e86a6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "T:Microsoft.CodeAnalysis.DiagnosticSeverity"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "label": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnosticseverity",
                "isCustom": false
              }
            ],
            "line": 114,
            "column": 16
          }
        },
        {
          "incidentId": "188fcdda-41ee-4170-a31e-731c3ab11ad1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "F:Microsoft.CodeAnalysis.DiagnosticSeverity.Error"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "F:Microsoft.CodeAnalysis.DiagnosticSeverity.Error",
            "label": "F:Microsoft.CodeAnalysis.DiagnosticSeverity.Error",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnosticseverity.error",
                "isCustom": false
              }
            ],
            "line": 114,
            "column": 16
          }
        },
        {
          "incidentId": "3f3385d8-ad76-47d9-9eca-c3c723769a31",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (!result.Success)\r\n            {\r\n                var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);\r\n                foreach (var diagnostic in failures)\r\n                {\r\n                    Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);\r\n                }\r\n\r\n                throw new InvalidOperationException(\u0022Compilation failed.\u0022);\r\n            }",
              "protected": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Success"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "if (!result.Success)\r\n            {\r\n                var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);\r\n                foreach (var diagnostic in failures)\r\n                {\r\n                    Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);\r\n                }\r\n\r\n                throw new InvalidOperationException(\u0022Compilation failed.\u0022);\r\n            }",
            "protectedSnippet": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Success",
            "label": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Success",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.emit.emitresult.success",
                "isCustom": false
              }
            ],
            "line": 112,
            "column": 12
          }
        },
        {
          "incidentId": "49100103-1b02-4026-ba29-d4ef58da342c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "a1674966-00f7-41fa-91b3-1c3fbe5c623b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = value;",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = value;",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 18
          }
        },
        {
          "incidentId": "eedddcd6-5dbe-4f7b-a1c7-a22a4138274e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "398be310-e5cd-4902-9a31-9a5b4c3d376f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "e9143a51-225a-40fb-bdc4-cc2321fdf00d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
              "protected": "P:Newtonsoft.Json.Linq.JArray.Item(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JArray.Item(System.Int32)",
            "label": "P:Newtonsoft.Json.Linq.JArray.Item(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jarray.this[int32]",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 16
          }
        },
        {
          "incidentId": "dee9e8b6-0e28-4c60-a8ef-f7109d6e5249",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override TargetTableColumn? ReadJson(JsonReader reader, Type objectType, TargetTableColumn? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "public override TargetTableColumn? ReadJson(JsonReader reader, Type objectType, TargetTableColumn? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonReader",
            "label": "T:Newtonsoft.Json.JsonReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader",
                "isCustom": false
              }
            ],
            "line": 8,
            "column": 8
          }
        },
        {
          "incidentId": "af27d40f-cdd7-41e7-957d-72b458fd3ac5",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonObject = JObject.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "var jsonObject = JObject.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JObject",
            "label": "T:Newtonsoft.Json.Linq.JObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject",
                "isCustom": false
              }
            ],
            "line": 15,
            "column": 12
          }
        },
        {
          "incidentId": "eff9fc24-ebec-468f-b865-7955df6f6fdc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "P:Microsoft.CodeAnalysis.Diagnostic.Severity"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "P:Microsoft.CodeAnalysis.Diagnostic.Severity",
            "label": "P:Microsoft.CodeAnalysis.Diagnostic.Severity",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnostic.severity",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 16
          }
        },
        {
          "incidentId": "bd26a1b8-f923-416a-a0ef-cce9203e5530",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 56,
            "column": 12
          }
        },
        {
          "incidentId": "6d49eae0-73d4-49a4-a532-c022418c2b2e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var reference = MetadataReference.CreateFromStream(assemblyStream);",
              "protected": "T:Microsoft.CodeAnalysis.PortableExecutableReference"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var reference = MetadataReference.CreateFromStream(assemblyStream);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.PortableExecutableReference",
            "label": "T:Microsoft.CodeAnalysis.PortableExecutableReference",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.portableexecutablereference",
                "isCustom": false
              }
            ],
            "line": 55,
            "column": 12
          }
        },
        {
          "incidentId": "bd433049-779a-4606-8fb0-f8af1c798e94",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "772b41a0-b5b9-4093-8231-185e61985866",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "get { return _outputKind; }",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "get { return _outputKind; }",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 12
          }
        },
        {
          "incidentId": "b98dbc87-c9f1-4734-8754-9263ef167fa1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilationoptions",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "eb688a3a-fe81-443d-9440-e73ce5c5ab2b",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JObject jsonObject = JObject.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "JObject jsonObject = JObject.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JObject",
            "label": "T:Newtonsoft.Json.Linq.JObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject",
                "isCustom": false
              }
            ],
            "line": 69,
            "column": 16
          }
        },
        {
          "incidentId": "9fc1843b-5672-458d-be7a-ae1860c3d33d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();",
              "protected": "P:Newtonsoft.Json.Linq.JProperty.Name"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JProperty.Name",
            "label": "P:Newtonsoft.Json.Linq.JProperty.Name",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jproperty.name",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 20
          }
        },
        {
          "incidentId": "2cdc56bc-4cfe-4d75-97b4-769324d71394",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "89b95bdb-82f3-4d08-be13-033b5260a559",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override BBBrowserFile ReadJson(JsonReader reader, Type objectType, BBBrowserFile? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "public override BBBrowserFile ReadJson(JsonReader reader, Type objectType, BBBrowserFile? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonReader",
            "label": "T:Newtonsoft.Json.JsonReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader",
                "isCustom": false
              }
            ],
            "line": 8,
            "column": 8
          }
        },
        {
          "incidentId": "be464d73-667e-4386-b984-729ec801bd3a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);",
              "protected": "M:Microsoft.CodeAnalysis.Diagnostic.GetMessage(System.IFormatProvider)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.Diagnostic.GetMessage(System.IFormatProvider)",
            "label": "M:Microsoft.CodeAnalysis.Diagnostic.GetMessage(System.IFormatProvider)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnostic.getmessage",
                "isCustom": false
              }
            ],
            "line": 117,
            "column": 20
          }
        },
        {
          "incidentId": "4327a705-f5a0-44dc-b2ba-1f58f1721d87",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Diagnostics"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Diagnostics",
            "label": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Diagnostics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.emit.emitresult.diagnostics",
                "isCustom": false
              }
            ],
            "line": 114,
            "column": 16
          }
        },
        {
          "incidentId": "be15aa95-d1a1-44c1-9f09-8649ae3efc41",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var result = _compilation.Emit(ms);",
              "protected": "M:Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.IMethodSymbol,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.EmbeddedText},System.IO.Stream,System.Threading.CancellationToken)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var result = _compilation.Emit(ms);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.IMethodSymbol,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.EmbeddedText},System.IO.Stream,System.Threading.CancellationToken)",
            "label": "M:Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.IMethodSymbol,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.EmbeddedText},System.IO.Stream,System.Threading.CancellationToken)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.compilation.emit",
                "isCustom": false
              }
            ],
            "line": 110,
            "column": 12
          }
        },
        {
          "incidentId": "1dc9f97c-cb0f-4c80-90fb-032ad2616fec",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "T:Microsoft.CodeAnalysis.DiagnosticSeverity"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "label": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnosticseverity",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 16
          }
        },
        {
          "incidentId": "8bab63da-81a7-4e3a-82dd-e7df3283b9a8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "F:Microsoft.CodeAnalysis.DiagnosticSeverity.Error"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "F:Microsoft.CodeAnalysis.DiagnosticSeverity.Error",
            "label": "F:Microsoft.CodeAnalysis.DiagnosticSeverity.Error",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnosticseverity.error",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 16
          }
        },
        {
          "incidentId": "dc5609e4-91a9-4946-8f6a-20b0c6cfc22a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var syntaxTree = CSharpSyntaxTree.ParseText(classCode);",
              "protected": "M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.ParseText(System.String,Microsoft.CodeAnalysis.CSharp.CSharpParseOptions,System.String,System.Text.Encoding,System.Threading.CancellationToken)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var syntaxTree = CSharpSyntaxTree.ParseText(classCode);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.ParseText(System.String,Microsoft.CodeAnalysis.CSharp.CSharpParseOptions,System.String,System.Text.Encoding,System.Threading.CancellationToken)",
            "label": "M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.ParseText(System.String,Microsoft.CodeAnalysis.CSharp.CSharpParseOptions,System.String,System.Text.Encoding,System.Threading.CancellationToken)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpsyntaxtree.parsetext",
                "isCustom": false
              }
            ],
            "line": 68,
            "column": 12
          }
        },
        {
          "incidentId": "8c20801a-bcbd-403b-8494-57ec618cef54",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 12
          }
        },
        {
          "incidentId": "b9a58bbc-33dc-465e-b2a3-57af7ef6b5da",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "104425f3-b410-4d14-a900-7ecfd729bcfb",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
              "protected": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "label": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken.toobject",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 16
          }
        },
        {
          "incidentId": "01c00edb-54ae-4463-938a-0c179f56397b",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, BBBrowserFile? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, BBBrowserFile? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 8
          }
        },
        {
          "incidentId": "26578f78-1f7d-4667-b328-3fe4772b4178",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 10,
            "column": 12
          }
        },
        {
          "incidentId": "19cfb7ec-c97c-44fd-b880-6e16a612b00c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddReferences(reference);",
              "protected": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddReferences(reference);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])",
            "label": "M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation.addreferences",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "db3b395b-d2cf-4aee-8a5c-996227de0bed",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var reference = MetadataReference.CreateFromImage(assemblyBytes);",
              "protected": "M:Microsoft.CodeAnalysis.MetadataReference.CreateFromImage(System.Collections.Generic.IEnumerable{System.Byte},Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var reference = MetadataReference.CreateFromImage(assemblyBytes);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.MetadataReference.CreateFromImage(System.Collections.Generic.IEnumerable{System.Byte},Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider,System.String)",
            "label": "M:Microsoft.CodeAnalysis.MetadataReference.CreateFromImage(System.Collections.Generic.IEnumerable{System.Byte},Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.metadatareference.createfromimage",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 12
          }
        },
        {
          "incidentId": "8e3def75-4e44-43bc-a2f5-7980d01ffa05",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public CSharpCompilation Compilation",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "public CSharpCompilation Compilation",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 24,
            "column": 8
          }
        },
        {
          "incidentId": "03606a40-0af5-4cbe-ae08-f773b5f81fe6",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
              "protected": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "label": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.this[string]",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 16
          }
        },
        {
          "incidentId": "fe9dec02-56e7-4578-9ef8-85071b1d2f41",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 67,
            "column": 17
          }
        },
        {
          "incidentId": "c7fa0a98-1abd-413a-bbf3-ae638e93ce56",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "F:Newtonsoft.Json.JsonToken.StartArray"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "F:Newtonsoft.Json.JsonToken.StartArray",
            "label": "F:Newtonsoft.Json.JsonToken.StartArray",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken.startarray",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "85369fe7-c1d8-46ef-808e-b7efbc90f84b",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var tempData = serializer.Deserialize(reader, tempObject.GetType());",
              "protected": "M:Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader,System.Type)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "var tempData = serializer.Deserialize(reader, tempObject.GetType());",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader,System.Type)",
            "label": "M:Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader,System.Type)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer.deserialize",
                "isCustom": false
              }
            ],
            "line": 12,
            "column": 12
          }
        },
        {
          "incidentId": "556f1431-0826-48d2-87f7-e03223dd2bc5",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override TargetTableColumn? ReadJson(JsonReader reader, Type objectType, TargetTableColumn? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "public override TargetTableColumn? ReadJson(JsonReader reader, Type objectType, TargetTableColumn? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 8,
            "column": 8
          }
        },
        {
          "incidentId": "3a593471-d16f-4e62-8772-c658d6ccf03f",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonObject = JObject.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "var jsonObject = JObject.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JObject",
            "label": "T:Newtonsoft.Json.Linq.JObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject",
                "isCustom": false
              }
            ],
            "line": 15,
            "column": 12
          }
        },
        {
          "incidentId": "f2491263-b81e-4deb-9ec1-6194f557d49c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "T:Microsoft.CodeAnalysis.DiagnosticSeverity"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "label": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnosticseverity",
                "isCustom": false
              }
            ],
            "line": 114,
            "column": 16
          }
        },
        {
          "incidentId": "8ca0c88c-ea5f-43bd-a907-bcf8acc9aa68",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 50,
            "column": 12
          }
        },
        {
          "incidentId": "35a01b69-ef9b-4dad-aaa5-83bb4de0a1bb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return _compilation;",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "return _compilation;",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 26,
            "column": 18
          }
        },
        {
          "incidentId": "42e905fb-3e0a-42c9-910b-310b6ab31760",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();",
              "protected": "M:Newtonsoft.Json.Linq.JObject.Properties"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JObject.Properties",
            "label": "M:Newtonsoft.Json.Linq.JObject.Properties",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.properties",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 20
          }
        },
        {
          "incidentId": "76370c36-b0c3-4e69-8862-5f196702bdec",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Serialize(writer, new { value.TableName, Columns = value.Columns.Cast\u003CDataColumn\u003E().Select(c =\u003E c.ColumnName).ToList(), Rows = rows });",
              "protected": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "serializer.Serialize(writer, new { value.TableName, Columns = value.Columns.Cast\u003CDataColumn\u003E().Select(c =\u003E c.ColumnName).ToList(), Rows = rows });",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "label": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer.serialize",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 16
          }
        },
        {
          "incidentId": "2aec396e-f229-4975-955b-aeee1b064cfa",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "T:Microsoft.CodeAnalysis.DiagnosticSeverity"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "label": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnosticseverity",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 16
          }
        },
        {
          "incidentId": "eb5cbe5c-6582-4f55-9bde-0d96f5ca0d65",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var reference = MetadataReference.CreateFromImage(assemblyBytes);",
              "protected": "T:Microsoft.CodeAnalysis.MetadataReference"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var reference = MetadataReference.CreateFromImage(assemblyBytes);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.MetadataReference",
            "label": "T:Microsoft.CodeAnalysis.MetadataReference",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.metadatareference",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 12
          }
        },
        {
          "incidentId": "8d7c7c1b-d01b-476b-8732-6020cea6e10b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "bdcde6e7-550e-490e-84af-1553467863b9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "get { return _compilation; }",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "get { return _compilation; }",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 26,
            "column": 12
          }
        },
        {
          "incidentId": "67e105ca-b75c-495e-a9c7-5905721d5635",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JArray jsonArray = JArray.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JArray"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "JArray jsonArray = JArray.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JArray",
            "label": "T:Newtonsoft.Json.Linq.JArray",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jarray",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 16
          }
        },
        {
          "incidentId": "07362528-649c-4de4-ab65-37acd1dfc961",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartArray)\r\n            {\r\n                JArray jsonArray = JArray.Load(reader);\r\n\r\n                if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }\r\n            else if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "7719cbab-1216-484c-ae00-bdbdbf4cfbe2",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, DataTable? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, DataTable? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 8,
            "column": 8
          }
        },
        {
          "incidentId": "0901e553-0d27-4f2b-8dc9-8723385f7f04",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, DataTable? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonWriter"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, DataTable? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonWriter",
            "label": "T:Newtonsoft.Json.JsonWriter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter",
                "isCustom": false
              }
            ],
            "line": 8,
            "column": 8
          }
        },
        {
          "incidentId": "d2e4c20a-0ad6-40d5-a032-900ee91e7e7c",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, BBBrowserFile? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonWriter"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, BBBrowserFile? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonWriter",
            "label": "T:Newtonsoft.Json.JsonWriter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 8
          }
        },
        {
          "incidentId": "c69cb0e9-db4e-466c-a304-ed3d5b8ff44e",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Serialize(writer, value);",
              "protected": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "serializer.Serialize(writer, value);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "label": "M:Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer.serialize",
                "isCustom": false
              }
            ],
            "line": 26,
            "column": 12
          }
        },
        {
          "incidentId": "8e992b9a-c4d0-40a8-baf8-bf6d051620a4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);",
              "protected": "P:Microsoft.CodeAnalysis.Diagnostic.Id"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);",
            "protectedSnippet": "P:Microsoft.CodeAnalysis.Diagnostic.Id",
            "label": "P:Microsoft.CodeAnalysis.Diagnostic.Id",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnostic.id",
                "isCustom": false
              }
            ],
            "line": 80,
            "column": 20
          }
        },
        {
          "incidentId": "eb35942b-07a3-4152-83b2-31f6b419466d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "set { _compilation = value; }",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "set { _compilation = value; }",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "0f46f1fd-52de-4c70-a8e6-5b4d8b049ebb",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
              "protected": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "label": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.this[string]",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 16
          }
        },
        {
          "incidentId": "da3872fe-7277-4df7-b68e-8f80e3d444b5",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "dataRow[columnName] = value.ToObject\u003Cobject\u003E();",
              "protected": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "dataRow[columnName] = value.ToObject\u003Cobject\u003E();",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "label": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken.toobject",
                "isCustom": false
              }
            ],
            "line": 60,
            "column": 32
          }
        },
        {
          "incidentId": "3e52c2cf-8302-4e82-9057-eb42f1b1e945",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JArray jsonArray = JArray.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JArray"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "JArray jsonArray = JArray.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JArray",
            "label": "T:Newtonsoft.Json.Linq.JArray",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jarray",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 16
          }
        },
        {
          "incidentId": "d9d5eb27-c51a-4c40-a5cc-27e06ea2de0e",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WritePropertyName(\u0022Size\u0022);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WritePropertyName(\u0022Size\u0022);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writepropertyname",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "6be56772-bde1-4512-9da5-c31c1e1f0f57",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteValue(value?.Name);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteValue(value?.Name);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteValue(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writevalue",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 12
          }
        },
        {
          "incidentId": "a8447f7c-b8eb-4c15-a8d7-1e4ddedb1eb3",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WritePropertyName(\u0022Name\u0022);",
              "protected": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WritePropertyName(\u0022Name\u0022);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "label": "M:Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writepropertyname",
                "isCustom": false
              }
            ],
            "line": 36,
            "column": 12
          }
        },
        {
          "incidentId": "af923529-22da-4eb9-9990-457318a2688e",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 10,
            "column": 12
          }
        },
        {
          "incidentId": "777f8c5f-439f-4b29-8e2e-29e4f9bbb78b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "T:Microsoft.CodeAnalysis.DiagnosticSeverity"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "label": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnosticseverity",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 16
          }
        },
        {
          "incidentId": "cf265f8c-b8c7-41c5-8a64-2bfdf74cab03",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var result = _compilation.Emit(ms);",
              "protected": "T:Microsoft.CodeAnalysis.Emit.EmitResult"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var result = _compilation.Emit(ms);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.Emit.EmitResult",
            "label": "T:Microsoft.CodeAnalysis.Emit.EmitResult",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.emit.emitresult",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 12
          }
        },
        {
          "incidentId": "a3047a7a-0838-4696-adb1-eed3bf60b407",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var reference = MetadataReference.CreateFromStream(assemblyStream);",
              "protected": "T:Microsoft.CodeAnalysis.MetadataReference"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var reference = MetadataReference.CreateFromStream(assemblyStream);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.MetadataReference",
            "label": "T:Microsoft.CodeAnalysis.MetadataReference",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.metadatareference",
                "isCustom": false
              }
            ],
            "line": 55,
            "column": 12
          }
        },
        {
          "incidentId": "b90e05b1-320b-43f4-b5d4-d507ef61bf1c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "f7351228-a091-40e1-ad32-4428da352b82",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_outputKind = value;",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_outputKind = value;",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 18
          }
        },
        {
          "incidentId": "b4930d1d-2f69-4d1c-8086-b11f80d7c004",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override DataTable ReadJson(JsonReader reader, Type objectType, DataTable? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "public override DataTable ReadJson(JsonReader reader, Type objectType, DataTable? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonReader",
            "label": "T:Newtonsoft.Json.JsonReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 8
          }
        },
        {
          "incidentId": "5cda2084-c291-4484-b8a8-778e78c8498c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
              "protected": "T:Microsoft.CodeAnalysis.DiagnosticSeverity"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "label": "T:Microsoft.CodeAnalysis.DiagnosticSeverity",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnosticseverity",
                "isCustom": false
              }
            ],
            "line": 114,
            "column": 16
          }
        },
        {
          "incidentId": "1cacb7b8-d51c-4522-b8be-811907187c7c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var result = _compilation.Emit(ms);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var result = _compilation.Emit(ms);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 110,
            "column": 12
          }
        },
        {
          "incidentId": "41320159-6545-474f-afbe-05a6666877ea",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);",
              "protected": "M:Microsoft.CodeAnalysis.Diagnostic.GetMessage(System.IFormatProvider)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.Diagnostic.GetMessage(System.IFormatProvider)",
            "label": "M:Microsoft.CodeAnalysis.Diagnostic.GetMessage(System.IFormatProvider)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnostic.getmessage",
                "isCustom": false
              }
            ],
            "line": 80,
            "column": 20
          }
        },
        {
          "incidentId": "646b3e0e-daa0-41bb-9625-6d44700519b3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddSyntaxTrees(syntaxTree);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddSyntaxTrees(syntaxTree);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 70,
            "column": 12
          }
        },
        {
          "incidentId": "3a33c57c-0d1d-4f21-90e1-ba1869480d9d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 56,
            "column": 12
          }
        },
        {
          "incidentId": "f28f0cac-934b-4720-a6ed-0e0fd7689a0c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation?.AddReferences(reference) ?? CSharpCompilation.Create(_assemblyName).AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 50,
            "column": 12
          }
        },
        {
          "incidentId": "fef914eb-9eeb-47fe-87b8-c24ee2e2291d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "set { _outputKind = value; }",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "set { _outputKind = value; }",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 12
          }
        },
        {
          "incidentId": "9131ce0e-28db-43dc-a37b-270d2d22dd27",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
              "protected": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "label": "M:Newtonsoft.Json.Linq.JToken.ToObject\u0060\u00601",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken.toobject",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 16
          }
        },
        {
          "incidentId": "1d7ec613-1fc0-428e-8be9-a2e40d1cdcae",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
              "protected": "T:Newtonsoft.Json.Linq.JToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JToken",
            "label": "T:Newtonsoft.Json.Linq.JToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken",
                "isCustom": false
              }
            ],
            "line": 71,
            "column": 16
          }
        },
        {
          "incidentId": "5e0aed45-dcca-44ef-8a1e-bc470e73a115",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "F:Newtonsoft.Json.JsonToken.StartObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "F:Newtonsoft.Json.JsonToken.StartObject",
            "label": "F:Newtonsoft.Json.JsonToken.StartObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken.startobject",
                "isCustom": false
              }
            ],
            "line": 67,
            "column": 17
          }
        },
        {
          "incidentId": "ecc6a675-dec9-46d2-95b7-efd98b19af14",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (!result.Success)\r\n            {\r\n                var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);\r\n                foreach (var diagnostic in failures)\r\n                {\r\n                    Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);\r\n                }\r\n\r\n                throw new InvalidOperationException(\u0022Compilation failed.\u0022);\r\n            }",
              "protected": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Success"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "if (!result.Success)\r\n            {\r\n                var failures = result.Diagnostics.Where(d =\u003E d.Severity == DiagnosticSeverity.Error);\r\n                foreach (var diagnostic in failures)\r\n                {\r\n                    Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);\r\n                }\r\n\r\n                throw new InvalidOperationException(\u0022Compilation failed.\u0022);\r\n            }",
            "protectedSnippet": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Success",
            "label": "P:Microsoft.CodeAnalysis.Emit.EmitResult.Success",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.emit.emitresult.success",
                "isCustom": false
              }
            ],
            "line": 75,
            "column": 12
          }
        },
        {
          "incidentId": "f48fb0e1-8fc6-4f80-ae5b-04a310cd71c1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = CSharpCompilation.Create(assemblyName,\r\n                options: new CSharpCompilationOptions(_outputKind));",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilationoptions",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 12
          }
        },
        {
          "incidentId": "7c841fc0-5bcb-409b-84a8-6560e8b3b448",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
              "protected": "F:Microsoft.CodeAnalysis.OutputKind.DynamicallyLinkedLibrary"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
            "protectedSnippet": "F:Microsoft.CodeAnalysis.OutputKind.DynamicallyLinkedLibrary",
            "label": "F:Microsoft.CodeAnalysis.OutputKind.DynamicallyLinkedLibrary",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind.dynamicallylinkedlibrary",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 12
          }
        },
        {
          "incidentId": "f9ed40e9-f2df-4026-9bac-f0338f096ca5",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JObject jsonObject = JObject.Load(reader);",
              "protected": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "JObject jsonObject = JObject.Load(reader);",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)",
            "label": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.load",
                "isCustom": false
              }
            ],
            "line": 69,
            "column": 16
          }
        },
        {
          "incidentId": "55795b29-508b-4b14-aa40-b79e6a51973a",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "writer.WriteEndObject();",
              "protected": "M:Newtonsoft.Json.JsonWriter.WriteEndObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\BBBrowserFileJsonConverter.cs",
            "snippet": "writer.WriteEndObject();",
            "protectedSnippet": "M:Newtonsoft.Json.JsonWriter.WriteEndObject",
            "label": "M:Newtonsoft.Json.JsonWriter.WriteEndObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter.writeendobject",
                "isCustom": false
              }
            ],
            "line": 44,
            "column": 12
          }
        },
        {
          "incidentId": "a4e07d87-84cb-49b2-861c-a3db19b58184",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
              "protected": "T:Microsoft.CodeAnalysis.OutputKind"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_outputKind = OutputKind.DynamicallyLinkedLibrary;",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.OutputKind",
            "label": "T:Microsoft.CodeAnalysis.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.outputkind",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 12
          }
        },
        {
          "incidentId": "720eb3e2-5440-4b5b-9301-2524d408a9c2",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override DataTable ReadJson(JsonReader reader, Type objectType, DataTable? existingValue, bool hasExistingValue, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "public override DataTable ReadJson(JsonReader reader, Type objectType, DataTable? existingValue, bool hasExistingValue, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 8
          }
        },
        {
          "incidentId": "7db18b8b-8789-4576-a106-5481f3ddcb2e",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
              "protected": "M:Newtonsoft.Json.Linq.JToken.ToString"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JToken.ToString",
            "label": "M:Newtonsoft.Json.Linq.JToken.ToString",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken.tostring",
                "isCustom": false
              }
            ],
            "line": 71,
            "column": 16
          }
        },
        {
          "incidentId": "1509c117-f050-4e96-a80e-db0fb417658d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JObject jsonObject = JObject.Load(reader);",
              "protected": "T:Newtonsoft.Json.Linq.JObject"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "JObject jsonObject = JObject.Load(reader);",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JObject",
            "label": "T:Newtonsoft.Json.Linq.JObject",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject",
                "isCustom": false
              }
            ],
            "line": 69,
            "column": 16
          }
        },
        {
          "incidentId": "fca57c0c-be78-4c34-86f5-71bf4035dfd5",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "JArray jsonArray = JArray.Load(reader);",
              "protected": "M:Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "JArray jsonArray = JArray.Load(reader);",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)",
            "label": "M:Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jarray.load",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 16
          }
        },
        {
          "incidentId": "c5733ebb-09e1-455b-88ec-3bfdd304e7b5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var result = _compilation.Emit(ms);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var result = _compilation.Emit(ms);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 12
          }
        },
        {
          "incidentId": "ca2f33c0-f717-4d15-8cbc-0ccfbaeab0b6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var reference = MetadataReference.CreateFromFile(assemblyPath);",
              "protected": "T:Microsoft.CodeAnalysis.MetadataReference"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var reference = MetadataReference.CreateFromFile(assemblyPath);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.MetadataReference",
            "label": "T:Microsoft.CodeAnalysis.MetadataReference",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.metadatareference",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 12
          }
        },
        {
          "incidentId": "18ee8290-a6e7-4c08-b9aa-f9a49c8e605f",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
              "protected": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;",
            "protectedSnippet": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "label": "P:Newtonsoft.Json.Linq.JObject.Item(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.this[string]",
                "isCustom": false
              }
            ],
            "line": 71,
            "column": 16
          }
        },
        {
          "incidentId": "75c8c425-686f-430c-850c-737d942a4a7f",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 67,
            "column": 17
          }
        },
        {
          "incidentId": "a1186d44-e717-4ea1-bc35-63f476554a3b",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:Newtonsoft.Json.JsonToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.StartObject)\r\n            {\r\n                JObject jsonObject = JObject.Load(reader);\r\n\r\n                string tableName = jsonObject[\u0022TableName\u0022]?.ToString() ?? string.Empty;\r\n                var columnNames = jsonObject[\u0022Columns\u0022]?.ToObject\u003CList\u003Cstring\u003E\u003E();\r\n                var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();\r\n\r\n                table.TableName = tableName;\r\n\r\n                // Ensure columns exist in the DataTable\r\n                if (columnNames != null)\r\n                {\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add rows to DataTable\r\n                if (rows != null \u0026\u0026 columnNames != null)\r\n                {\r\n                    foreach (var row in rows)\r\n                    {\r\n                        var dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (row.ContainsKey(columnName))\r\n                            {\r\n                                dataRow[columnName] = row[columnName];\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:Newtonsoft.Json.JsonToken",
            "label": "T:Newtonsoft.Json.JsonToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsontoken",
                "isCustom": false
              }
            ],
            "line": 67,
            "column": 17
          }
        },
        {
          "incidentId": "d1aa78ad-6336-4cf3-bbe8-c01f5bd518c9",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, TargetTableColumn? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonSerializer"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, TargetTableColumn? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonSerializer",
            "label": "T:Newtonsoft.Json.JsonSerializer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonserializer",
                "isCustom": false
              }
            ],
            "line": 24,
            "column": 8
          }
        },
        {
          "incidentId": "16fecb3f-a50e-4d3a-ae8f-753b09a7ae2d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public override void WriteJson(JsonWriter writer, TargetTableColumn? value, JsonSerializer serializer)",
              "protected": "T:Newtonsoft.Json.JsonWriter"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "public override void WriteJson(JsonWriter writer, TargetTableColumn? value, JsonSerializer serializer)",
            "protectedSnippet": "T:Newtonsoft.Json.JsonWriter",
            "label": "T:Newtonsoft.Json.JsonWriter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonwriter",
                "isCustom": false
              }
            ],
            "line": 24,
            "column": 8
          }
        },
        {
          "incidentId": "a264fbea-4137-4302-bf33-d10334a0bb85",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
              "protected": "T:Newtonsoft.Json.JsonReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "serializer.Populate(jsonObject.CreateReader(), targetTableColumn);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonReader",
            "label": "T:Newtonsoft.Json.JsonReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader",
                "isCustom": false
              }
            ],
            "line": 19,
            "column": 12
          }
        },
        {
          "incidentId": "27e96db7-62f8-4bc4-b419-70a90b03dbfa",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = null;",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = null;",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 180,
            "column": 20
          }
        },
        {
          "incidentId": "847213ea-4f75-4f93-98bc-1b7e38f275a5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddReferences(reference);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddReferences(reference);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "d3c040f0-a774-499c-bf47-f7b53bd7d69a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var reference = MetadataReference.CreateFromStream(assemblyStream);",
              "protected": "M:Microsoft.CodeAnalysis.MetadataReference.CreateFromStream(System.IO.Stream,Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "var reference = MetadataReference.CreateFromStream(assemblyStream);",
            "protectedSnippet": "M:Microsoft.CodeAnalysis.MetadataReference.CreateFromStream(System.IO.Stream,Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider,System.String)",
            "label": "M:Microsoft.CodeAnalysis.MetadataReference.CreateFromStream(System.IO.Stream,Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.metadatareference.createfromstream",
                "isCustom": false
              }
            ],
            "line": 55,
            "column": 12
          }
        },
        {
          "incidentId": "2adf07a0-81fe-4d86-9331-cb1151a4ee99",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
              "protected": "T:Newtonsoft.Json.Linq.JToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "var rows = jsonObject[\u0022Rows\u0022]?.ToObject\u003CList\u003CDictionary\u003Cstring, object\u003E\u003E\u003E();",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JToken",
            "label": "T:Newtonsoft.Json.Linq.JToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 16
          }
        },
        {
          "incidentId": "5cba58ff-0019-470a-8109-07e8c1713859",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
              "protected": "T:Newtonsoft.Json.Linq.JToken"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\DataTableJsonConverter.cs",
            "snippet": "if (jsonArray.Count \u003E 0 \u0026\u0026 jsonArray[0] is JObject firstObject)\r\n                {\r\n                    var columnNames = firstObject.Properties().Select(p =\u003E p.Name).ToList();\r\n\r\n                    // Ensure columns exist in the DataTable\r\n                    foreach (var columnName in columnNames)\r\n                    {\r\n                        if (!table.Columns.Contains(columnName))\r\n                        {\r\n                            table.Columns.Add(columnName);\r\n                        }\r\n                    }\r\n\r\n                    // Add rows to DataTable\r\n                    foreach (JObject jsonRow in jsonArray)\r\n                    {\r\n                        DataRow dataRow = table.NewRow();\r\n                        foreach (var columnName in columnNames)\r\n                        {\r\n                            if (jsonRow.TryGetValue(columnName, out JToken? value))\r\n                            {\r\n                                dataRow[columnName] = value.ToObject\u003Cobject\u003E();\r\n                            }\r\n                        }\r\n                        table.Rows.Add(dataRow);\r\n                    }\r\n                }",
            "protectedSnippet": "T:Newtonsoft.Json.Linq.JToken",
            "label": "T:Newtonsoft.Json.Linq.JToken",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jtoken",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 16
          }
        },
        {
          "incidentId": "2ce90b1c-7105-4dc2-992b-901207e4dbb2",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonObject = JObject.Load(reader);",
              "protected": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "var jsonObject = JObject.Load(reader);",
            "protectedSnippet": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)",
            "label": "M:Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.linq.jobject.load",
                "isCustom": false
              }
            ],
            "line": 15,
            "column": 12
          }
        },
        {
          "incidentId": "b7f2b5c1-2245-43f8-ae31-3def0ab70394",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
              "protected": "P:Newtonsoft.Json.JsonReader.TokenType"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Converters\\TargetTableColumnConverter.cs",
            "snippet": "if (reader.TokenType == JsonToken.Null)\r\n            {\r\n                return null;\r\n            }",
            "protectedSnippet": "P:Newtonsoft.Json.JsonReader.TokenType",
            "label": "P:Newtonsoft.Json.JsonReader.TokenType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonreader.tokentype",
                "isCustom": false
              }
            ],
            "line": 10,
            "column": 12
          }
        },
        {
          "incidentId": "2458d3d2-3e95-44b3-b872-97c3607f501e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.Common, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);",
              "protected": "P:Microsoft.CodeAnalysis.Diagnostic.Id"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "Console.WriteLine($\u0022{diagnostic.Id}: {diagnostic.GetMessage()}\u0022);",
            "protectedSnippet": "P:Microsoft.CodeAnalysis.Diagnostic.Id",
            "label": "P:Microsoft.CodeAnalysis.Diagnostic.Id",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.diagnostic.id",
                "isCustom": false
              }
            ],
            "line": 117,
            "column": 20
          }
        },
        {
          "incidentId": "c1adc7a4-10f1-4fee-a2b7-05c0991223f4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.CodeAnalysis.CSharp, 4.10.0-3.final.",
          "projectPath": "Blazor.Tools.BlazorBundler.Utilities\\Blazor.Tools.BlazorBundler.Utilities.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "_compilation = _compilation.AddSyntaxTrees(syntaxTree);",
              "protected": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"
            },
            "kind": "File",
            "path": "Blazor.Tools.BlazorBundler.Utilities\\Assemblies\\ClassGenerator.cs",
            "snippet": "_compilation = _compilation.AddSyntaxTrees(syntaxTree);",
            "protectedSnippet": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "label": "T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.csharpcompilation",
                "isCustom": false
              }
            ],
            "line": 70,
            "column": 12
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
      "startingProject": true,
      "issues": 2,
      "storyPoints": 423,
      "ruleInstances": [
        {
          "incidentId": "d85afa4b-9de0-41f7-b1b2-246d760f15d6",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        },
        {
          "incidentId": "4e71c5d3-6630-431f-9121-8b4f01d37a9c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getint32",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 28
          }
        },
        {
          "incidentId": "a2e04839-ba59-4cfe-aaf0-b4006e5a851a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 92,
            "column": 20
          }
        },
        {
          "incidentId": "b3f521c4-7a0a-4567-89ae-261a9ae91261",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022DELETE FROM QuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022DELETE FROM QuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 86,
            "column": 12
          }
        },
        {
          "incidentId": "84736b4a-e326-49fb-a50c-b390ef86f395",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 20
          }
        },
        {
          "incidentId": "383d24ee-b5cf-4a77-bf5f-8fe26d0c29be",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 74,
            "column": 20
          }
        },
        {
          "incidentId": "8fd04f89-06c7-4027-bf59-1db1f0b4f1b1",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 20
          }
        },
        {
          "incidentId": "ca54bf1b-62a1-4c44-b9ed-12dcd18293ec",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 20
          }
        },
        {
          "incidentId": "fdd8d85a-4d42-4b57-a6f5-578ab57211ea",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 22,
            "column": 20
          }
        },
        {
          "incidentId": "a33374bc-2b9c-41d4-be9f-b6fea900a889",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "2dc40936-9ce8-4e62-b0bd-33e2373d8fa9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "P:Microsoft.ML.Data.TextDataViewType.Instance"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "P:Microsoft.ML.Data.TextDataViewType.Instance",
            "label": "P:Microsoft.ML.Data.TextDataViewType.Instance",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.textdataviewtype.instance",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 16
          }
        },
        {
          "incidentId": "4c26b501-5286-4ad3-b87c-d4b2364503b8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType",
            "label": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.column.columntype",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 16
          }
        },
        {
          "incidentId": "a77d8930-d12f-4b48-b297-7ff4beac3ae3",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "350a9850-b8c8-4841-abeb-1d5254e6befa",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    connection.Open();\r\n                    return (int)command.ExecuteScalar();\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    connection.Open();\r\n                    return (int)command.ExecuteScalar();\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 16
          }
        },
        {
          "incidentId": "a04900a6-535e-4ad1-96e3-546659d53c28",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 278,
            "column": 12
          }
        },
        {
          "incidentId": "a275efbc-65bc-4216-9577-01bd6a6dea9d",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonData = JsonConvert.DeserializeObject\u003CDictionary\u003Cstring, object\u003E\u003E(line);",
              "protected": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\JsonParser.cs",
            "snippet": "var jsonData = JsonConvert.DeserializeObject\u003CDictionary\u003Cstring, object\u003E\u003E(line);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)",
            "label": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert.deserializeobject",
                "isCustom": false
              }
            ],
            "line": 135,
            "column": 24
          }
        },
        {
          "incidentId": "ba929c5b-7731-47de-8a40-ad2c6ae6e210",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 74,
            "column": 20
          }
        },
        {
          "incidentId": "77edbe95-b35c-44df-a985-386eb483e41f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 20
          }
        },
        {
          "incidentId": "0c513671-b2b7-499b-865b-a8b4aa2e6691",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 22,
            "column": 20
          }
        },
        {
          "incidentId": "1e1841a6-c051-423e-aedf-24f3471dce8c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
              "protected": "T:Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
            "protectedSnippet": "T:Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer",
            "label": "T:Microsoft.ML.Trainers.LbfgsPoissonRegressionTrainer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lbfgspoissonregressiontrainer",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 16
          }
        },
        {
          "incidentId": "f80d8eb8-f165-43f4-8973-9f31d86d3f80",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType",
            "label": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.column.columntype",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 16
          }
        },
        {
          "incidentId": "bd128701-9629-48b3-b7ac-eb65bbaa843f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "9fda4808-07db-42ed-b07d-870fa3f8a24f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);\r\n                    command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);\r\n\r\n                    connection.Open();\r\n\r\n                    using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);\r\n                    command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);\r\n\r\n                    connection.Open();\r\n\r\n                    using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 181,
            "column": 16
          }
        },
        {
          "incidentId": "66c3d647-0863-4088-b560-7430044d4e64",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "29a137a8-6a3a-44a3-92c2-1b19ecce2d80",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "87198ef0-8de9-433e-9b5f-171d8708e223",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022DELETE FROM OriginalQuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022DELETE FROM OriginalQuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 115,
            "column": 12
          }
        },
        {
          "incidentId": "c78416c9-f4e7-4a02-a56d-321707e02310",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 103,
            "column": 20
          }
        },
        {
          "incidentId": "2fa23c12-9385-49d8-854c-9fbdc5b4fbdd",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "206d9930-e3bc-4c25-a267-eccf38f33d58",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "f01ec80b-44b2-49cb-8f5d-30ecaf923ed3",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "61b08333-a3ff-4bc8-802f-afe3495d237c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 56,
            "column": 20
          }
        },
        {
          "incidentId": "dc11500c-1b93-4962-9f17-c13768ef9f08",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 20
          }
        },
        {
          "incidentId": "ad90bfc1-37cc-42a3-8250-144fe386d0a3",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 20
          }
        },
        {
          "incidentId": "19cbf205-d3cf-4002-8352-190800388a75",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 16
          }
        },
        {
          "incidentId": "6aea240a-2ba0-4ae3-8176-c8556ed01447",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.RegressionCatalog.RegressionTrainers"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.RegressionCatalog.RegressionTrainers",
            "label": "T:Microsoft.ML.RegressionCatalog.RegressionTrainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.regressioncatalog.regressiontrainers",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "7f3d39ec-1801-4c84-8405-b10a45c767f9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CQuestionAnswer\u003E(dataFile, hasHeader: true, separatorChar: \u0027\\t\u0027);",
              "protected": "P:Microsoft.ML.MLContext.Data"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CQuestionAnswer\u003E(dataFile, hasHeader: true, separatorChar: \u0027\\t\u0027);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Data",
            "label": "P:Microsoft.ML.MLContext.Data",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.data",
                "isCustom": false
              }
            ],
            "line": 282,
            "column": 12
          }
        },
        {
          "incidentId": "a39f0352-4d54-41e4-94f1-2022999c5bf3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 278,
            "column": 12
          }
        },
        {
          "incidentId": "e669180e-98ca-47af-be20-258f24401410",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonData = JsonConvert.DeserializeObject\u003CDictionary\u003Cstring, object\u003E\u003E(line);",
              "protected": "T:Newtonsoft.Json.JsonConvert"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\JsonParser.cs",
            "snippet": "var jsonData = JsonConvert.DeserializeObject\u003CDictionary\u003Cstring, object\u003E\u003E(line);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonConvert",
            "label": "T:Newtonsoft.Json.JsonConvert",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert",
                "isCustom": false
              }
            ],
            "line": 135,
            "column": 24
          }
        },
        {
          "incidentId": "c143ba56-deee-4386-ad1c-65f7733d3e79",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 109,
            "column": 16
          }
        },
        {
          "incidentId": "d0695bf6-5355-401e-9308-5fde5320b37e",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 20
          }
        },
        {
          "incidentId": "1e7dc3f6-4f42-4593-9724-56a2e1b0c1d0",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 28
          }
        },
        {
          "incidentId": "bb3eb254-d00c-4788-bf0a-3c42da1ba726",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteReader",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executereader",
                "isCustom": false
              }
            ],
            "line": 44,
            "column": 20
          }
        },
        {
          "incidentId": "dd7617fe-61c4-4300-a429-e59bbcb13d5d",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 16
          }
        },
        {
          "incidentId": "dca9d716-118b-45e5-9d5e-050b8a4031b4",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 16
          }
        },
        {
          "incidentId": "29ad19cd-d98d-4306-ac9d-44dc96a36cdf",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 20
          }
        },
        {
          "incidentId": "f304b2ba-8fff-4066-9af7-7b4d39fb60b4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.featurizetext",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "e495ecce-d2d7-4942-9258-01a1f10af61a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataView = mlContext.Data.LoadFromEnumerable(qaDataList, schemaDefinition);",
              "protected": "P:Microsoft.ML.MLContext.Data"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var dataView = mlContext.Data.LoadFromEnumerable(qaDataList, schemaDefinition);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Data",
            "label": "P:Microsoft.ML.MLContext.Data",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.data",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 16
          }
        },
        {
          "incidentId": "d4703b62-a53e-4fdd-b4be-318123d3cab8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.TextDataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.TextDataViewType",
            "label": "T:Microsoft.ML.Data.TextDataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.textdataviewtype",
                "isCustom": false
              }
            ],
            "line": 223,
            "column": 16
          }
        },
        {
          "incidentId": "fbf36ee2-1934-49c2-9030-9cfcef6dec77",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.DataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.DataViewType",
            "label": "T:Microsoft.ML.Data.DataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.dataviewtype",
                "isCustom": false
              }
            ],
            "line": 223,
            "column": 16
          }
        },
        {
          "incidentId": "623c32cb-7eef-4332-adcd-d1d874829b4d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType",
            "label": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.column.columntype",
                "isCustom": false
              }
            ],
            "line": 223,
            "column": 16
          }
        },
        {
          "incidentId": "c3bf83bd-a3bc-4692-9918-767f69ac576b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "2f46037b-730b-42ec-9e3d-1db047702048",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedData = mlContext.Data.CreateEnumerable\u003CQuestionAnswer\u003E(data, reuseRowObject: false)\r\n                .Select(row =\u003E\r\n                {\r\n                    row.Context = PreprocessHtml(row.Context);\r\n                    return row;\r\n                });",
              "protected": "T:Microsoft.ML.DataOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var preprocessedData = mlContext.Data.CreateEnumerable\u003CQuestionAnswer\u003E(data, reuseRowObject: false)\r\n                .Select(row =\u003E\r\n                {\r\n                    row.Context = PreprocessHtml(row.Context);\r\n                    return row;\r\n                });",
            "protectedSnippet": "T:Microsoft.ML.DataOperationsCatalog",
            "label": "T:Microsoft.ML.DataOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataoperationscatalog",
                "isCustom": false
              }
            ],
            "line": 285,
            "column": 12
          }
        },
        {
          "incidentId": "9204dbfd-9f1d-4404-a2ef-575ded7b9090",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CQuestionAnswer\u003E(dataFile, hasHeader: true, separatorChar: \u0027\\t\u0027);",
              "protected": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CQuestionAnswer\u003E(dataFile, hasHeader: true, separatorChar: \u0027\\t\u0027);",
            "protectedSnippet": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "label": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog.loadfromtextfile",
                "isCustom": false
              }
            ],
            "line": 282,
            "column": 12
          }
        },
        {
          "incidentId": "1e5f7446-f931-41a6-996e-79eedfba65d5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.RegressionCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.RegressionCatalog",
            "label": "T:Microsoft.ML.RegressionCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.regressioncatalog",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "8f5403be-772d-401b-ab56-5ea9aa0dc96f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "P:Microsoft.ML.MLContext.Regression"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Regression",
            "label": "P:Microsoft.ML.MLContext.Regression",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.regression",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "f6fe6d1e-8b47-4b2f-8997-a21a5bdaabab",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator",
            "label": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.columnconcatenatingestimator",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "72b60de7-5bb3-4242-b249-64b317318228",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CQuestionAnswer\u003E(dataFile, hasHeader: true, separatorChar: \u0027\\t\u0027);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CQuestionAnswer\u003E(dataFile, hasHeader: true, separatorChar: \u0027\\t\u0027);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 282,
            "column": 12
          }
        },
        {
          "incidentId": "d7b91f56-a0a7-41d7-bc10-ceaedb5ed79d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataView.Schema, modelSavePath);",
              "protected": "P:Microsoft.ML.IDataView.Schema"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "mlContext.Model.Save(model, dataView.Schema, modelSavePath);",
            "protectedSnippet": "P:Microsoft.ML.IDataView.Schema",
            "label": "P:Microsoft.ML.IDataView.Schema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview.schema",
                "isCustom": false
              }
            ],
            "line": 244,
            "column": 16
          }
        },
        {
          "incidentId": "3e57004b-4a6f-4b11-85c4-3bc9f347821a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)",
            "label": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog.copycolumns",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "d9630ff1-ab6c-4238-a0de-2053e57b0fe7",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "3284a12d-c587-4563-80ac-00cc1571453b",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "aa84b3fc-c375-4deb-8787-37cf9e666d30",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 184,
            "column": 20
          }
        },
        {
          "incidentId": "5c103522-2211-4a59-80eb-1bd3b1784ead",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 183,
            "column": 20
          }
        },
        {
          "incidentId": "98c14531-1146-41cf-882e-341a00b48f98",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "2f4c86e3-a8df-4a66-927f-b57973711b8a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "75f4812e-708a-42cc-b613-4d996e3d652f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "7dc45b1f-772e-4676-9c85-3121b7a50d45",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 100,
            "column": 20
          }
        },
        {
          "incidentId": "9c329cd5-170f-4f29-8bd2-6ae22c63b4c7",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 20
          }
        },
        {
          "incidentId": "0531d30d-df10-4c66-ab64-fddc6553489b",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022UPDATE OriginalQuestionAnsweringData SET Question = @Question, Context = @Context, Answer = @Answer WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022UPDATE OriginalQuestionAnsweringData SET Question = @Question, Context = @Context, Answer = @Answer WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 88,
            "column": 12
          }
        },
        {
          "incidentId": "5e0c7ef1-c42e-4ad9-96bb-7fac8d0dfca3",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 20
          }
        },
        {
          "incidentId": "487ac095-362e-4dd5-9101-678055f141e0",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 36,
            "column": 20
          }
        },
        {
          "incidentId": "4c5e639c-7903-4756-a0b1-773f899bf2bb",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 20
          }
        },
        {
          "incidentId": "354a9604-c4c1-406d-bf6c-db3b5eb79f5d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "5adcc2c3-99d4-4891-8ac6-1ef432d0527c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "label": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "fefbd957-441c-4267-bc2e-908ac71822d2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CQuestionAnswer\u003E(dataFile, hasHeader: true, separatorChar: \u0027\\t\u0027);",
              "protected": "T:Microsoft.ML.DataOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CQuestionAnswer\u003E(dataFile, hasHeader: true, separatorChar: \u0027\\t\u0027);",
            "protectedSnippet": "T:Microsoft.ML.DataOperationsCatalog",
            "label": "T:Microsoft.ML.DataOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataoperationscatalog",
                "isCustom": false
              }
            ],
            "line": 282,
            "column": 12
          }
        },
        {
          "incidentId": "9f5a7bd4-fa38-4de6-948e-03540e1f5c3f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = mlContext.Data.LoadFromTextFile\u003CQuestionAnswer\u003E(dataFile, hasHeader: true, separatorChar: \u0027\\t\u0027);",
              "protected": "T:Microsoft.ML.TextLoaderSaverCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var data = mlContext.Data.LoadFromTextFile\u003CQuestionAnswer\u003E(dataFile, hasHeader: true, separatorChar: \u0027\\t\u0027);",
            "protectedSnippet": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "label": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog",
                "isCustom": false
              }
            ],
            "line": 282,
            "column": 12
          }
        },
        {
          "incidentId": "894dfe3a-3cc5-42e9-a914-2cbd43a82d2f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 28
          }
        },
        {
          "incidentId": "6667cfdb-59ee-4de6-a2c2-5e636a88e499",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 92,
            "column": 20
          }
        },
        {
          "incidentId": "bd92ad0b-30f9-4514-9e9d-b6d01363d5ea",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 75,
            "column": 20
          }
        },
        {
          "incidentId": "df044ad9-0776-4b17-8012-7de84af6ad06",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 74,
            "column": 20
          }
        },
        {
          "incidentId": "3c463dfa-ae26-42ab-99b2-0b2359e6600c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 20
          }
        },
        {
          "incidentId": "983c2dea-fc19-44c5-be53-d3b5ec85c9a5",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 70,
            "column": 16
          }
        },
        {
          "incidentId": "205ac456-c823-4e0f-a26a-7136b343f048",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 24,
            "column": 20
          }
        },
        {
          "incidentId": "52f9f080-f1ba-46fe-884c-25f1327f1a14",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 22,
            "column": 20
          }
        },
        {
          "incidentId": "128445d6-0519-4452-a2c6-859c4fb8af18",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022INSERT INTO QuestionAnsweringData (Question, Context, Answer) VALUES (@Question, @Context, @Answer)\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022INSERT INTO QuestionAnsweringData (Question, Context, Answer) VALUES (@Question, @Context, @Answer)\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 16,
            "column": 12
          }
        },
        {
          "incidentId": "25620cf8-a51a-4ebd-8df8-43d9c7461243",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022INSERT INTO QuestionAnsweringData (Question, Context, Answer) VALUES (@Question, @Context, @Answer)\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022INSERT INTO QuestionAnsweringData (Question, Context, Answer) VALUES (@Question, @Context, @Answer)\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 16,
            "column": 12
          }
        },
        {
          "incidentId": "938f5d35-7cc7-4acc-a6eb-5f45320d31e8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
              "protected": "T:Microsoft.ML.RegressionCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
            "protectedSnippet": "T:Microsoft.ML.RegressionCatalog",
            "label": "T:Microsoft.ML.RegressionCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.regressioncatalog",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 16
          }
        },
        {
          "incidentId": "4dd88076-ddcb-4486-9deb-586908a97279",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
              "protected": "M:Microsoft.ML.StandardTrainersCatalog.LbfgsPoissonRegression(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
            "protectedSnippet": "M:Microsoft.ML.StandardTrainersCatalog.LbfgsPoissonRegression(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)",
            "label": "M:Microsoft.ML.StandardTrainersCatalog.LbfgsPoissonRegression(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog.lbfgspoissonregression",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 16
          }
        },
        {
          "incidentId": "5171c2ca-ede8-4196-9ddf-02143a8a76fc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.TransformExtensionsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.TransformExtensionsCatalog",
            "label": "T:Microsoft.ML.TransformExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "526eb5fe-eaec-4a37-bb71-3e3f0f4e2ed5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Text"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Text",
            "label": "P:Microsoft.ML.TransformsCatalog.Text",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.text",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "e2fbae44-f0e3-4dbe-9543-3493d7c7ab94",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.TextDataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.TextDataViewType",
            "label": "T:Microsoft.ML.Data.TextDataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.textdataviewtype",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 16
          }
        },
        {
          "incidentId": "6eb1af20-726b-4796-8ac8-65ea24f1164f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
              "protected": "T:Microsoft.ML.Data.NumberDataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
            "protectedSnippet": "T:Microsoft.ML.Data.NumberDataViewType",
            "label": "T:Microsoft.ML.Data.NumberDataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.numberdataviewtype",
                "isCustom": false
              }
            ],
            "line": 221,
            "column": 16
          }
        },
        {
          "incidentId": "845d334b-345a-43db-97b2-4433aa56199f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 217,
            "column": 16
          }
        },
        {
          "incidentId": "25ed5212-19c9-4ea6-8de6-89878cbf2cd3",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var commandText = \u0022SELECT COUNT(*) FROM OriginalQuestionAnsweringData\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    connection.Open();\r\n                    return (int)command.ExecuteScalar();\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var commandText = \u0022SELECT COUNT(*) FROM OriginalQuestionAnsweringData\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    connection.Open();\r\n                    return (int)command.ExecuteScalar();\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 218,
            "column": 12
          }
        },
        {
          "incidentId": "80add06d-62e3-4192-ae77-d443a2cb15fb",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "c6649c94-1869-441e-9d11-ffcdb0685748",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var reader = command.ExecuteReader())\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                        var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };\r\n\r\n                        dataList.Add(data);\r\n                    }\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlDataReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var reader = command.ExecuteReader())\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                        var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };\r\n\r\n                        dataList.Add(data);\r\n                    }\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlDataReader",
            "label": "T:System.Data.SqlClient.SqlDataReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader",
                "isCustom": false
              }
            ],
            "line": 139,
            "column": 16
          }
        },
        {
          "incidentId": "ca4e5055-4191-4570-b3a7-3c9ea3da08b9",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 97,
            "column": 20
          }
        },
        {
          "incidentId": "76ddd026-d6a5-4137-8b84-2f3c2a319f7a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 36,
            "column": 20
          }
        },
        {
          "incidentId": "fbd5a30d-ad76-4a0b-9ad4-063f89d5b800",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 20
          }
        },
        {
          "incidentId": "de30fda7-bf09-4c26-ad39-d7ba185c37c6",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 20
          }
        },
        {
          "incidentId": "cbe7e709-7ec9-4683-b155-4f60cf525e10",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(3)",
              "protected": "T:Microsoft.ML.Data.LoadColumnAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnswer.cs",
            "snippet": "LoadColumn(3)",
            "protectedSnippet": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "label": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 15,
            "column": 9
          }
        },
        {
          "incidentId": "e86c7ec6-745d-4cd3-b82d-5608cc0e5bc5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedData = mlContext.Data.CreateEnumerable\u003CQuestionAnswer\u003E(data, reuseRowObject: false)\r\n                .Select(row =\u003E\r\n                {\r\n                    row.Context = PreprocessHtml(row.Context);\r\n                    return row;\r\n                });",
              "protected": "M:Microsoft.ML.DataOperationsCatalog.CreateEnumerable\u0060\u00601(Microsoft.ML.IDataView,System.Boolean,System.Boolean,Microsoft.ML.Data.SchemaDefinition)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var preprocessedData = mlContext.Data.CreateEnumerable\u003CQuestionAnswer\u003E(data, reuseRowObject: false)\r\n                .Select(row =\u003E\r\n                {\r\n                    row.Context = PreprocessHtml(row.Context);\r\n                    return row;\r\n                });",
            "protectedSnippet": "M:Microsoft.ML.DataOperationsCatalog.CreateEnumerable\u0060\u00601(Microsoft.ML.IDataView,System.Boolean,System.Boolean,Microsoft.ML.Data.SchemaDefinition)",
            "label": "M:Microsoft.ML.DataOperationsCatalog.CreateEnumerable\u0060\u00601(Microsoft.ML.IDataView,System.Boolean,System.Boolean,Microsoft.ML.Data.SchemaDefinition)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataoperationscatalog.createenumerable",
                "isCustom": false
              }
            ],
            "line": 285,
            "column": 12
          }
        },
        {
          "incidentId": "97543e4f-01a7-4818-a1d7-dd4d7ba10543",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])",
            "label": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog.concatenate",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "4faa22af-7fcc-4798-9c3a-19f4de112592",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Text"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Text",
            "label": "P:Microsoft.ML.TransformsCatalog.Text",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.text",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "8224318b-b153-4913-a5dd-7ead1a4c1dcb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedData = mlContext.Data.CreateEnumerable\u003CQuestionAnswer\u003E(data, reuseRowObject: false)\r\n                .Select(row =\u003E\r\n                {\r\n                    row.Context = PreprocessHtml(row.Context);\r\n                    return row;\r\n                });",
              "protected": "P:Microsoft.ML.MLContext.Data"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var preprocessedData = mlContext.Data.CreateEnumerable\u003CQuestionAnswer\u003E(data, reuseRowObject: false)\r\n                .Select(row =\u003E\r\n                {\r\n                    row.Context = PreprocessHtml(row.Context);\r\n                    return row;\r\n                });",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Data",
            "label": "P:Microsoft.ML.MLContext.Data",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.data",
                "isCustom": false
              }
            ],
            "line": 285,
            "column": 12
          }
        },
        {
          "incidentId": "36501155-1874-49e6-a79c-09e578212dbc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.TextCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.TextCatalog",
            "label": "T:Microsoft.ML.TextCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "6a18ad3a-24ce-4970-88f3-e12af4c9cc0b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.TextCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.TextCatalog",
            "label": "T:Microsoft.ML.TextCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "3b63931b-7cbe-4b19-89cf-6a42aaf5cfd9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedDataView = mlContext.Data.LoadFromEnumerable(preprocessedData);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var preprocessedDataView = mlContext.Data.LoadFromEnumerable(preprocessedData);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 292,
            "column": 12
          }
        },
        {
          "incidentId": "c9c8cd68-c1a2-47f4-ae50-fa9517523a18",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }",
              "protected": "T:System.Data.SqlClient.SqlDataReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlDataReader",
            "label": "T:System.Data.SqlClient.SqlDataReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader",
                "isCustom": false
              }
            ],
            "line": 112,
            "column": 20
          }
        },
        {
          "incidentId": "4521a240-2141-4ab3-9e2f-e43de03cd607",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.ExecuteNonQuery();",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.ExecuteNonQuery();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executenonquery",
                "isCustom": false
              }
            ],
            "line": 95,
            "column": 20
          }
        },
        {
          "incidentId": "2ec4ced9-c62e-46bf-9f6b-52a8d2be5c97",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 75,
            "column": 20
          }
        },
        {
          "incidentId": "4d5a442d-886a-4dfa-a7b3-d496a308f387",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 74,
            "column": 20
          }
        },
        {
          "incidentId": "d2f27f0c-1d48-4780-b9bb-8b704f8ae722",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 20
          }
        },
        {
          "incidentId": "68d1e002-4b22-4817-bdae-90915d25e820",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.TextCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.TextCatalog",
            "label": "T:Microsoft.ML.TextCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "172951a4-8c20-4604-a1d1-0976d1bfebdb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "3a924697-f413-46b9-97f6-31675c9a8235",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataView = mlContext.Data.LoadFromEnumerable(qaDataList, schemaDefinition);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var dataView = mlContext.Data.LoadFromEnumerable(qaDataList, schemaDefinition);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 16
          }
        },
        {
          "incidentId": "cb49b0a8-c6cf-4d9e-ac6c-66341a551ef7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.DataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.DataViewType",
            "label": "T:Microsoft.ML.Data.DataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.dataviewtype",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 16
          }
        },
        {
          "incidentId": "0c2f7725-5597-4310-a9e0-83409dd5de60",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.DataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.DataViewType",
            "label": "T:Microsoft.ML.Data.DataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.dataviewtype",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 16
          }
        },
        {
          "incidentId": "4237ceb5-ad1f-40b7-90c4-cc101d1902e5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
              "protected": "T:Microsoft.ML.Data.DataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
            "protectedSnippet": "T:Microsoft.ML.Data.DataViewType",
            "label": "T:Microsoft.ML.Data.DataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.dataviewtype",
                "isCustom": false
              }
            ],
            "line": 221,
            "column": 16
          }
        },
        {
          "incidentId": "e190722a-75fb-42bb-8d95-585cdc5e18bc",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "59bbb10e-0948-44b9-82a5-d2c6029d7960",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "9bbf8b1a-5336-4b3f-bddb-19576c1b58e4",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "b32fd261-fbfe-451e-99a8-61c4882392b0",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "134a1523-5347-44a8-8d2c-c735ef6d92dc",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "while (reader.Read())\r\n                    {\r\n                        var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };\r\n\r\n                        dataList.Add(data);\r\n                    }",
              "protected": "M:System.Data.SqlClient.SqlDataReader.Read"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "while (reader.Read())\r\n                    {\r\n                        var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };\r\n\r\n                        dataList.Add(data);\r\n                    }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.Read",
            "label": "M:System.Data.SqlClient.SqlDataReader.Read",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.read",
                "isCustom": false
              }
            ],
            "line": 141,
            "column": 20
          }
        },
        {
          "incidentId": "15c3e5f6-f2f3-4fbf-b860-e3a4bd750049",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 103,
            "column": 20
          }
        },
        {
          "incidentId": "bde2a9d5-9978-480e-a708-b7ad192bdf75",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 98,
            "column": 20
          }
        },
        {
          "incidentId": "22c0956c-a10a-4521-a9f3-c3089d09b82f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "25b6fb84-ec81-405e-acda-c4dd58eaa18c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "98090e23-8ce1-4f97-8639-f6a9faf3eb5a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteReader",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executereader",
                "isCustom": false
              }
            ],
            "line": 59,
            "column": 20
          }
        },
        {
          "incidentId": "e6e94a43-08ea-4a17-94d9-b57004828d44",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 54,
            "column": 16
          }
        },
        {
          "incidentId": "9b200372-1878-4ad2-ab7e-fcc303d9f951",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 20
          }
        },
        {
          "incidentId": "19cc382e-11e6-4afe-a49e-247ac0135a27",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 20
          }
        },
        {
          "incidentId": "1577ed0d-f642-44c7-a0f1-d1c1bf0d9190",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(2)",
              "protected": "T:Microsoft.ML.Data.LoadColumnAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnswer.cs",
            "snippet": "LoadColumn(2)",
            "protectedSnippet": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "label": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 12,
            "column": 9
          }
        },
        {
          "incidentId": "fc77b444-5666-48c1-9968-41b018040357",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "M:Microsoft.ML.StandardTrainersCatalog.Sdca(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,Microsoft.ML.Trainers.ISupportSdcaRegressionLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "M:Microsoft.ML.StandardTrainersCatalog.Sdca(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,Microsoft.ML.Trainers.ISupportSdcaRegressionLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.StandardTrainersCatalog.Sdca(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,Microsoft.ML.Trainers.ISupportSdcaRegressionLoss,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog.sdca",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "2ed230ec-3a51-404d-9c47-0c67a540f698",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)",
            "label": "M:Microsoft.ML.TransformExtensionsCatalog.CopyColumns(Microsoft.ML.TransformsCatalog,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog.copycolumns",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "459f59e7-5490-42bc-9b58-4345b8fb5b81",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.TransformsCatalog.TextTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.texttransforms",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "c8780d69-853a-42fe-ac11-1203e42b15ec",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedDataView = mlContext.Data.LoadFromEnumerable(preprocessedData);",
              "protected": "P:Microsoft.ML.MLContext.Data"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var preprocessedDataView = mlContext.Data.LoadFromEnumerable(preprocessedData);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Data",
            "label": "P:Microsoft.ML.MLContext.Data",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.data",
                "isCustom": false
              }
            ],
            "line": 292,
            "column": 12
          }
        },
        {
          "incidentId": "0721d367-663d-4573-9d97-31b650f69e49",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 111,
            "column": 20
          }
        },
        {
          "incidentId": "59813fe2-9150-4838-89c4-7e19879e330d",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 90,
            "column": 16
          }
        },
        {
          "incidentId": "01d5916c-379a-4787-96d3-775685c22008",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022UPDATE QuestionAnsweringData SET Question = @Question, Context = @Context, Answer = @Answer WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022UPDATE QuestionAnsweringData SET Question = @Question, Context = @Context, Answer = @Answer WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 12
          }
        },
        {
          "incidentId": "ad92c09f-7e13-46da-9a52-900b39e629bc",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 28
          }
        },
        {
          "incidentId": "53b1dd0d-615d-4cdb-9b4f-94c801984e4e",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }",
              "protected": "M:System.Data.SqlClient.SqlDataReader.Read"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.Read",
            "label": "M:System.Data.SqlClient.SqlDataReader.Read",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.read",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 24
          }
        },
        {
          "incidentId": "be21799e-86f3-434b-b860-376932c3b02c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.ExecuteNonQuery();",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.ExecuteNonQuery();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executenonquery",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 20
          }
        },
        {
          "incidentId": "fbd8afdc-16cf-48d7-8e4a-eeb03a7d98f0",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 20,
            "column": 16
          }
        },
        {
          "incidentId": "2abc0ce2-76d0-4e06-9e39-3944cf1d0a02",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
              "protected": "P:Microsoft.ML.MLContext.Regression"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Regression",
            "label": "P:Microsoft.ML.MLContext.Regression",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.regression",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 16
          }
        },
        {
          "incidentId": "2e4c0a52-a91e-460e-b382-519b96809e02",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "d35900d0-959e-4f87-8d7a-691c09540ff6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "f525aa6a-af59-4807-ae2d-d97b4dbed9f9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "P:Microsoft.ML.Data.TextDataViewType.Instance"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "P:Microsoft.ML.Data.TextDataViewType.Instance",
            "label": "P:Microsoft.ML.Data.TextDataViewType.Instance",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.textdataviewtype.instance",
                "isCustom": false
              }
            ],
            "line": 223,
            "column": 16
          }
        },
        {
          "incidentId": "92cf676b-b248-4402-a71e-6ac59c3d4c36",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.TextDataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.TextDataViewType",
            "label": "T:Microsoft.ML.Data.TextDataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.textdataviewtype",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 16
          }
        },
        {
          "incidentId": "0fca2434-9c0c-4192-924e-09e39fd2aa8c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var schemaDefinition = SchemaDefinition.Create(typeof(QuestionAnsweringData));",
              "protected": "T:Microsoft.ML.Data.SchemaDefinition"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var schemaDefinition = SchemaDefinition.Create(typeof(QuestionAnsweringData));",
            "protectedSnippet": "T:Microsoft.ML.Data.SchemaDefinition",
            "label": "T:Microsoft.ML.Data.SchemaDefinition",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition",
                "isCustom": false
              }
            ],
            "line": 220,
            "column": 16
          }
        },
        {
          "incidentId": "cd03ef00-ad53-4007-bce4-dc3c00f4b6c3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var schemaDefinition = SchemaDefinition.Create(typeof(QuestionAnsweringData));",
              "protected": "M:Microsoft.ML.Data.SchemaDefinition.Create(System.Type,Microsoft.ML.Data.SchemaDefinition.Direction)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var schemaDefinition = SchemaDefinition.Create(typeof(QuestionAnsweringData));",
            "protectedSnippet": "M:Microsoft.ML.Data.SchemaDefinition.Create(System.Type,Microsoft.ML.Data.SchemaDefinition.Direction)",
            "label": "M:Microsoft.ML.Data.SchemaDefinition.Create(System.Type,Microsoft.ML.Data.SchemaDefinition.Direction)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.create",
                "isCustom": false
              }
            ],
            "line": 220,
            "column": 16
          }
        },
        {
          "incidentId": "7e294465-dbed-442b-8a12-e46befc04a73",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var command = new SqlCommand(\u0022SELECT * FROM OriginalQuestionAnsweringData\u0022, connection);\r\n                connection.Open();\r\n\r\n                using (var reader = command.ExecuteReader())\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                        var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };\r\n\r\n                        dataList.Add(data);\r\n                    }\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var command = new SqlCommand(\u0022SELECT * FROM OriginalQuestionAnsweringData\u0022, connection);\r\n                connection.Open();\r\n\r\n                using (var reader = command.ExecuteReader())\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                        var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };\r\n\r\n                        dataList.Add(data);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 134,
            "column": 12
          }
        },
        {
          "incidentId": "8fffbbd0-ac2f-4a7d-87a8-efbca7a5b811",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 101,
            "column": 20
          }
        },
        {
          "incidentId": "8fb76e14-2632-4dcf-8db5-ec7e76e1ce3c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 100,
            "column": 20
          }
        },
        {
          "incidentId": "befce446-913c-4a85-89dd-66b3be76a49c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 97,
            "column": 20
          }
        },
        {
          "incidentId": "d404c46a-d07e-4024-bda3-32a84fc711f8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 20
          }
        },
        {
          "incidentId": "67c1ff13-0d3a-4e88-85a5-3115349f6dbd",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "1ad1e61b-83a8-4e63-bdad-9a289b9b62fb",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 56,
            "column": 20
          }
        },
        {
          "incidentId": "c371d50e-7e70-481c-8103-289728c86d42",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM OriginalQuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM OriginalQuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 50,
            "column": 12
          }
        },
        {
          "incidentId": "55567439-77c6-46b4-8f99-f5ee3ed3e635",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 20
          }
        },
        {
          "incidentId": "aeb0c521-0b88-4d22-bc9c-74f5046f35c5",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 20
          }
        },
        {
          "incidentId": "c26e50aa-8621-4dc0-95ae-871dafd2a10c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 29,
            "column": 20
          }
        },
        {
          "incidentId": "c63eb5d4-20ff-4997-8159-89e495c447a1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "P:Microsoft.ML.RegressionCatalog.Trainers"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "P:Microsoft.ML.RegressionCatalog.Trainers",
            "label": "P:Microsoft.ML.RegressionCatalog.Trainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.regressioncatalog.trainers",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "0098ccc1-76ae-4195-925b-8d9a79a5ffef",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.StandardTrainersCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.StandardTrainersCatalog",
            "label": "T:Microsoft.ML.StandardTrainersCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "95817c20-038f-4226-9675-df50e6f1b3ad",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.featurizetext",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "26dc9c4e-aee2-42d3-a9e5-f88b82f293ca",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedDataView = mlContext.Data.LoadFromEnumerable(preprocessedData);",
              "protected": "T:Microsoft.ML.DataOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var preprocessedDataView = mlContext.Data.LoadFromEnumerable(preprocessedData);",
            "protectedSnippet": "T:Microsoft.ML.DataOperationsCatalog",
            "label": "T:Microsoft.ML.DataOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataoperationscatalog",
                "isCustom": false
              }
            ],
            "line": 292,
            "column": 12
          }
        },
        {
          "incidentId": "04352f53-0099-4cc1-baee-edf1efc232e9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.Trainers.SdcaRegressionTrainer"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.Trainers.SdcaRegressionTrainer",
            "label": "T:Microsoft.ML.Trainers.SdcaRegressionTrainer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.sdcaregressiontrainer",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "e48388f9-31ba-4446-ad45-a162b8e304dc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "ef03f715-0b1a-4028-9ffe-2d2c291f55b4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "bfd12d20-8106-443b-9bae-b3b25ea5799c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.LearningPipelineExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.LearningPipelineExtensions",
            "label": "T:Microsoft.ML.LearningPipelineExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.learningpipelineextensions",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "3311e913-dff4-4d8d-8d14-5966cce37e51",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 28
          }
        },
        {
          "incidentId": "6ab65081-d888-4632-b7fa-882ed86e5a24",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM QuestionAnsweringData\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM QuestionAnsweringData\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 12
          }
        },
        {
          "incidentId": "85ea14fc-b58d-4648-be0b-88e97160b70b",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 20
          }
        },
        {
          "incidentId": "87d46986-0733-4900-b021-ff09c644f762",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 70,
            "column": 16
          }
        },
        {
          "incidentId": "719dc0b3-753e-482a-8c4d-3a8b9b9abdad",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 28
          }
        },
        {
          "incidentId": "e048c2ec-3784-4729-a67f-066ef4b88abe",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.TransformsCatalog.TextTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.texttransforms",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "080191f3-5df7-4f83-8ce5-f2851c61903f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "a546cd0b-4caf-4c00-9805-30b6a6ae03f6",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 184,
            "column": 20
          }
        },
        {
          "incidentId": "155ee85b-9f94-4e57-a35d-1a19384ae2d7",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 184,
            "column": 20
          }
        },
        {
          "incidentId": "52050e2b-4a1a-494f-a35e-68535e418c5c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 183,
            "column": 20
          }
        },
        {
          "incidentId": "03c62b2f-c8cf-4053-a4c2-ae21324195dc",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.ExecuteNonQuery();",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.ExecuteNonQuery();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executenonquery",
                "isCustom": false
              }
            ],
            "line": 124,
            "column": 20
          }
        },
        {
          "incidentId": "19010549-bb33-4d08-9718-299c358ed288",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 119,
            "column": 16
          }
        },
        {
          "incidentId": "5e06fcb4-cce9-4680-8d6a-538183226d45",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 102,
            "column": 20
          }
        },
        {
          "incidentId": "99243993-deec-4f5c-8611-6a47f8ba9d30",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 95,
            "column": 20
          }
        },
        {
          "incidentId": "0a7c7288-f7eb-498b-97fd-63a974edcc32",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 92,
            "column": 16
          }
        },
        {
          "incidentId": "d9638d27-44a5-4a24-9ee4-b305988a9640",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "7ba18df9-e805-4f50-8713-5b7ac0100853",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "68581086-e568-4a81-9765-b7540a264f1d",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 20
          }
        },
        {
          "incidentId": "80d1691c-5b08-413a-8e88-808afb060457",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 20
          }
        },
        {
          "incidentId": "9bce9a84-c460-40d1-b745-83f91831fe90",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 20
          }
        },
        {
          "incidentId": "98bf6e1d-b43b-45e0-9359-3803a8b4ba72",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(0)",
              "protected": "T:Microsoft.ML.Data.LoadColumnAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnswer.cs",
            "snippet": "LoadColumn(0)",
            "protectedSnippet": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "label": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 6,
            "column": 9
          }
        },
        {
          "incidentId": "700a268b-15bf-43f9-99d8-1ac0fe68c5c6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.TransformsCatalog.TextTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.texttransforms",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "34088089-4e31-4d6e-af78-d07d06083eb0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.featurizetext",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "6b48c9da-7833-46ef-895e-c0632890454e",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 28
          }
        },
        {
          "incidentId": "f87d5b24-2d93-4ef6-adcf-e107ec74ab4b",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 28
          }
        },
        {
          "incidentId": "08ff42b4-cbb1-4f78-a1ce-e008b79289d0",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 28
          }
        },
        {
          "incidentId": "e8be6283-1b8d-4e37-86f1-80dbc33d8872",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.ExecuteNonQuery();",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.ExecuteNonQuery();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executenonquery",
                "isCustom": false
              }
            ],
            "line": 78,
            "column": 20
          }
        },
        {
          "incidentId": "7a7da87c-a11b-4fd7-a929-d0190dfc2491",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }",
              "protected": "T:System.Data.SqlClient.SqlDataReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlDataReader",
            "label": "T:System.Data.SqlClient.SqlDataReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader",
                "isCustom": false
              }
            ],
            "line": 44,
            "column": 20
          }
        },
        {
          "incidentId": "88981f76-c3c8-4369-b2e4-575a9fe11bdc",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM QuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM QuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "90068147-4ed0-4c1e-83ae-2d852af60054",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)",
            "label": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.this[string]",
                "isCustom": false
              }
            ],
            "line": 223,
            "column": 16
          }
        },
        {
          "incidentId": "95b6d5c5-f02d-4ae0-a353-016f025ef302",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
              "protected": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
            "protectedSnippet": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)",
            "label": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.this[string]",
                "isCustom": false
              }
            ],
            "line": 221,
            "column": 16
          }
        },
        {
          "incidentId": "d59fb9f4-cef9-4365-87cf-3bcffda58b08",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "2f3538a2-ef43-463f-813f-38900fa83296",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 183,
            "column": 20
          }
        },
        {
          "incidentId": "c9e066c4-a454-4c79-a491-79a29a1d032c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "bd43990c-7947-4859-80f4-f8e94a6bc304",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var reader = command.ExecuteReader())\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                        var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };\r\n\r\n                        dataList.Add(data);\r\n                    }\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var reader = command.ExecuteReader())\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                        var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };\r\n\r\n                        dataList.Add(data);\r\n                    }\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteReader",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executereader",
                "isCustom": false
              }
            ],
            "line": 139,
            "column": 16
          }
        },
        {
          "incidentId": "f660783b-5c66-4172-9e58-c395bfeb48b2",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "33b08fd7-8cf6-4f8d-9eb8-39ed801fcd8e",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "ad9f80fd-5a0a-4b79-b216-c0a89d898ef8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 56,
            "column": 20
          }
        },
        {
          "incidentId": "9dc52c2f-7da6-448d-be07-be17fa322d2f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 16
          }
        },
        {
          "incidentId": "5cd19ec6-ee8f-4845-9d63-db194847412f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "52153481-1b82-4929-a801-4e4b726d9899",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "ec9c7c36-2823-42fd-a588-8d790447afa0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator",
            "label": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.columncopyingestimator",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "d6f5df8f-5141-4cb1-b42c-51dee1ba5e1a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "824b8daa-fb9b-43d8-9cc1-7900ded861ae",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "label": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "6e7c8386-fa01-46df-930a-914e031143d7",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 92,
            "column": 20
          }
        },
        {
          "incidentId": "c805a445-cb53-4918-931a-2b754831b44a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 75,
            "column": 20
          }
        },
        {
          "incidentId": "b16f2f60-bda9-48c7-b6a5-3b9453d979e8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 28
          }
        },
        {
          "incidentId": "398fb02e-f822-4c23-ad44-abcfe0e6a967",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 28
          }
        },
        {
          "incidentId": "3b90b3b6-05a8-42b6-87a5-57d6952f3e1a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 22,
            "column": 20
          }
        },
        {
          "incidentId": "2407e096-ea14-4f83-867a-0979ee588067",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataView.Schema, modelSavePath);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "mlContext.Model.Save(model, dataView.Schema, modelSavePath);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 244,
            "column": 16
          }
        },
        {
          "incidentId": "c7337c11-a834-412e-8a1d-c57d0054f0dd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.SchemaDefinition.Column"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.SchemaDefinition.Column",
            "label": "T:Microsoft.ML.Data.SchemaDefinition.Column",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.column",
                "isCustom": false
              }
            ],
            "line": 223,
            "column": 16
          }
        },
        {
          "incidentId": "6a4852fc-daa5-47ac-8509-ac7379975b9d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "P:Microsoft.ML.Data.TextDataViewType.Instance"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "P:Microsoft.ML.Data.TextDataViewType.Instance",
            "label": "P:Microsoft.ML.Data.TextDataViewType.Instance",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.textdataviewtype.instance",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 16
          }
        },
        {
          "incidentId": "011df280-b3b9-4dc5-ac2c-866a1634c8bd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.SchemaDefinition.Column"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.SchemaDefinition.Column",
            "label": "T:Microsoft.ML.Data.SchemaDefinition.Column",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.column",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 16
          }
        },
        {
          "incidentId": "6f4cc762-db7f-43e7-bed6-ba68ecb5b4ca",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "cab0f71b-2ad1-4e25-b5e9-eb60d795df72",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 184,
            "column": 20
          }
        },
        {
          "incidentId": "36d7b827-b48b-4c62-96f5-cdc9c0144c73",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "bf8409bc-52c7-4604-8af9-b5b2b842434c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "18a4a195-7c94-4460-8822-c21a656ca40c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "517c6d4a-2b79-4772-b722-ba7425a14427",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var command = new SqlCommand(\u0022SELECT * FROM OriginalQuestionAnsweringData\u0022, connection);",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var command = new SqlCommand(\u0022SELECT * FROM OriginalQuestionAnsweringData\u0022, connection);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 136,
            "column": 16
          }
        },
        {
          "incidentId": "7a60c82d-204c-4b40-8af8-294335e23156",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 121,
            "column": 20
          }
        },
        {
          "incidentId": "8c85be65-bd4a-4033-b622-8178d8cfa744",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.ExecuteNonQuery();",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.ExecuteNonQuery();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executenonquery",
                "isCustom": false
              }
            ],
            "line": 107,
            "column": 20
          }
        },
        {
          "incidentId": "9a241ff1-f3c5-474a-b1a0-789bcc168ab4",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 106,
            "column": 20
          }
        },
        {
          "incidentId": "08b61254-1033-42d3-9fcc-ce33d6fb5ebe",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 102,
            "column": 20
          }
        },
        {
          "incidentId": "76a03666-d6c7-4536-9118-facda5732519",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 102,
            "column": 20
          }
        },
        {
          "incidentId": "4252a532-d3d0-43b3-8d0b-3e4fae6a0167",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 99,
            "column": 20
          }
        },
        {
          "incidentId": "d2526ab5-cf62-40b8-8a11-db394a291e8c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 98,
            "column": 20
          }
        },
        {
          "incidentId": "5f415da1-a8a9-4aa7-8562-7c54c9f99329",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 97,
            "column": 20
          }
        },
        {
          "incidentId": "5386fc67-0954-45e6-8201-5548b4380d79",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "7ce9405a-18e2-4cc9-ad51-dfbc68ddede1",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.ExecuteNonQuery();",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.ExecuteNonQuery();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executenonquery",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 20
          }
        },
        {
          "incidentId": "d639bfe2-efbc-4a7a-a970-82a854d6a696",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 20
          }
        },
        {
          "incidentId": "b1e7a968-6aed-4fc4-9078-e2f1fce464a0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.TransformExtensionsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.TransformExtensionsCatalog",
            "label": "T:Microsoft.ML.TransformExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "10ee9f0d-6d0f-481c-80c6-0d9911c9405c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Text"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Text",
            "label": "P:Microsoft.ML.TransformsCatalog.Text",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.text",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "9fb8fda6-227a-47f5-8c75-e58cfb46b25e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "d09aa801-e370-48fe-bd15-7d48a669a51e",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 75,
            "column": 20
          }
        },
        {
          "incidentId": "99a3be0d-417e-4e79-a8c8-72cfee3133bb",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 20
          }
        },
        {
          "incidentId": "6ca5076d-5aad-4878-97a5-55d9ce8979ea",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022UPDATE QuestionAnsweringData SET Question = @Question, Context = @Context, Answer = @Answer WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022UPDATE QuestionAnsweringData SET Question = @Question, Context = @Context, Answer = @Answer WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 12
          }
        },
        {
          "incidentId": "17979199-dd68-4acf-9375-81e5e9be31f8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 43,
            "column": 20
          }
        },
        {
          "incidentId": "b17e0a99-7a62-46e5-b060-2d65b8a6d799",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 26,
            "column": 20
          }
        },
        {
          "incidentId": "fe1c670e-1f04-4538-8406-5aa852bf8943",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 20,
            "column": 16
          }
        },
        {
          "incidentId": "5297ca5b-46d4-41a0-b0ae-899eea5cced0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataView.Schema, modelSavePath);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "mlContext.Model.Save(model, dataView.Schema, modelSavePath);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.String)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.save",
                "isCustom": false
              }
            ],
            "line": 244,
            "column": 16
          }
        },
        {
          "incidentId": "aac25507-de15-4f8c-95c4-ec55d69e7e11",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "label": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "e10ed5c9-e9e7-4cc6-a082-6c507889f985",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.featurizetext",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "1394d47a-393f-47bd-b450-369c3b725b22",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.SchemaDefinition.Column"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.SchemaDefinition.Column",
            "label": "T:Microsoft.ML.Data.SchemaDefinition.Column",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.column",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 16
          }
        },
        {
          "incidentId": "b3a85db6-7dff-4b10-87e5-a33219da9d6b",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getint32",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "baf895e5-d5a2-49b3-84dd-e74f5885f5c4",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }",
              "protected": "M:System.Data.SqlClient.SqlDataReader.Read"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.Read",
            "label": "M:System.Data.SqlClient.SqlDataReader.Read",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.read",
                "isCustom": false
              }
            ],
            "line": 190,
            "column": 24
          }
        },
        {
          "incidentId": "1fba2b84-d217-476c-9e4a-023ca6baf906",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteReader",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executereader",
                "isCustom": false
              }
            ],
            "line": 188,
            "column": 20
          }
        },
        {
          "incidentId": "07e25430-abe9-4f06-8a3b-36d934cb33ab",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "354e2e2a-e7ca-4369-a6c1-ec2a9626f9a3",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 101,
            "column": 20
          }
        },
        {
          "incidentId": "192b683b-83ae-49ae-bd3a-97ddbb4cadbf",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "145645ab-d2f3-44ee-bb7c-2c78657c400f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 54,
            "column": 16
          }
        },
        {
          "incidentId": "d1542a78-0637-4d53-8eb5-68ff453d51bd",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 20
          }
        },
        {
          "incidentId": "19f0185a-45cc-49ac-8366-08281f07e577",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 36,
            "column": 20
          }
        },
        {
          "incidentId": "0650a2f7-6476-421d-bb93-9a1668e6ff0d",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 20
          }
        },
        {
          "incidentId": "e66f690c-7144-4d58-b3ab-b03747085f3e",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 20
          }
        },
        {
          "incidentId": "9c68690a-466e-4e23-9c55-33b35d132ee5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(2)",
              "protected": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnswer.cs",
            "snippet": "LoadColumn(2)",
            "protectedSnippet": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "label": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 12,
            "column": 9
          }
        },
        {
          "incidentId": "751cf51e-5d21-4843-8215-8573279a527c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
              "protected": "T:Microsoft.ML.TransformExtensionsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Program.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeaturized\u0022, nameof(QuestionAnswer.Context))\r\n                .Append(mlContext.Transforms.Text.FeaturizeText(\u0022QuestionFeaturized\u0022, nameof(QuestionAnswer.Question)))\r\n                .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022ContextFeaturized\u0022, \u0022QuestionFeaturized\u0022))\r\n                .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnswer.AnswerIndex)))\r\n                .Append(mlContext.Regression.Trainers.Sdca(labelColumnName: \u0022Label\u0022, maximumNumberOfIterations: 100));",
            "protectedSnippet": "T:Microsoft.ML.TransformExtensionsCatalog",
            "label": "T:Microsoft.ML.TransformExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 295,
            "column": 12
          }
        },
        {
          "incidentId": "ca560982-cc69-4b07-b757-b4c48691e96d",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 28
          }
        },
        {
          "incidentId": "3ed6283f-9195-49b8-bef4-983a94fe2d59",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM QuestionAnsweringData\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM QuestionAnsweringData\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 12
          }
        },
        {
          "incidentId": "0b81fdc3-19ee-47b6-b89f-e6bbd74333f4",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 90,
            "column": 16
          }
        },
        {
          "incidentId": "b71b02d4-3a90-499b-a865-af03f7ae79bb",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 28
          }
        },
        {
          "incidentId": "ef5558b1-9cd1-4255-b505-f9f0e6007ead",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM QuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM QuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 12
          }
        },
        {
          "incidentId": "99a38dab-bce1-4b51-80bd-f92f687762c8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                // Calculate offset based on pageNumber and pageSize\r\n                int offset = (pageNumber - 1) * pageSize;\r\n\r\n                var commandText = @\u0022SELECT * FROM OriginalQuestionAnsweringData \r\n                            ORDER BY ID \r\n                            OFFSET @Offset ROWS \r\n                            FETCH NEXT @PageSize ROWS ONLY\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);\r\n                    command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);\r\n\r\n                    connection.Open();\r\n\r\n                    using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                // Calculate offset based on pageNumber and pageSize\r\n                int offset = (pageNumber - 1) * pageSize;\r\n\r\n                var commandText = @\u0022SELECT * FROM OriginalQuestionAnsweringData \r\n                            ORDER BY ID \r\n                            OFFSET @Offset ROWS \r\n                            FETCH NEXT @PageSize ROWS ONLY\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);\r\n                    command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);\r\n\r\n                    connection.Open();\r\n\r\n                    using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 171,
            "column": 12
          }
        },
        {
          "incidentId": "865dc550-0398-4d19-bd18-1e010784028a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var command = new SqlCommand(\u0022SELECT * FROM OriginalQuestionAnsweringData\u0022, connection);",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var command = new SqlCommand(\u0022SELECT * FROM OriginalQuestionAnsweringData\u0022, connection);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 136,
            "column": 16
          }
        },
        {
          "incidentId": "a99d872f-b44f-47f2-830a-a4970dcc6234",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 123,
            "column": 20
          }
        },
        {
          "incidentId": "714b482c-2198-4c44-9c9e-53a180d98a41",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "4e194366-0836-449c-a402-cfe3836d5bfe",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 20
          }
        },
        {
          "incidentId": "8d4debc4-c2a9-497e-9fb9-78edd15150ad",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(1)",
              "protected": "T:Microsoft.ML.Data.LoadColumnAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnswer.cs",
            "snippet": "LoadColumn(1)",
            "protectedSnippet": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "label": "T:Microsoft.ML.Data.LoadColumnAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 9
          }
        },
        {
          "incidentId": "c3c6182f-6c12-499e-a29b-7eee852e26cb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(0)",
              "protected": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnswer.cs",
            "snippet": "LoadColumn(0)",
            "protectedSnippet": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "label": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 6,
            "column": 9
          }
        },
        {
          "incidentId": "2a282c01-92bd-466a-9236-615c0742d738",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022DELETE FROM QuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022DELETE FROM QuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 86,
            "column": 12
          }
        },
        {
          "incidentId": "97561817-edd9-4b38-b38d-83b8cbc3c559",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 28
          }
        },
        {
          "incidentId": "6009a8d5-aaba-4f8e-ad24-76338f027b4f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 23,
            "column": 20
          }
        },
        {
          "incidentId": "16813827-1a1f-49e5-a067-b3b466f618d9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
              "protected": "T:Microsoft.ML.StandardTrainersCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
            "protectedSnippet": "T:Microsoft.ML.StandardTrainersCatalog",
            "label": "T:Microsoft.ML.StandardTrainersCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 16
          }
        },
        {
          "incidentId": "e27a17ff-027c-4f12-b3ba-292f6c06663a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator",
            "label": "T:Microsoft.ML.Transforms.ColumnCopyingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.columncopyingestimator",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "3e25656b-c1c9-41b9-827f-3bcb048694e0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Text"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Text",
            "label": "P:Microsoft.ML.TransformsCatalog.Text",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.text",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "38a3c0d5-1385-448f-9c11-97ebff5ff6c0",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "5e09943c-120b-4bdf-a8a1-fb612d2e378b",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                // Calculate offset based on pageNumber and pageSize\r\n                int offset = (pageNumber - 1) * pageSize;\r\n\r\n                var commandText = @\u0022SELECT * FROM OriginalQuestionAnsweringData \r\n                            ORDER BY ID \r\n                            OFFSET @Offset ROWS \r\n                            FETCH NEXT @PageSize ROWS ONLY\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);\r\n                    command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);\r\n\r\n                    connection.Open();\r\n\r\n                    using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                // Calculate offset based on pageNumber and pageSize\r\n                int offset = (pageNumber - 1) * pageSize;\r\n\r\n                var commandText = @\u0022SELECT * FROM OriginalQuestionAnsweringData \r\n                            ORDER BY ID \r\n                            OFFSET @Offset ROWS \r\n                            FETCH NEXT @PageSize ROWS ONLY\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);\r\n                    command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);\r\n\r\n                    connection.Open();\r\n\r\n                    using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 171,
            "column": 12
          }
        },
        {
          "incidentId": "db4559b9-d533-4107-9e26-204614d29aa9",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "84bd7199-f598-4e6d-9d83-daa4031bbd04",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "955b223c-22f3-4386-ac49-d89b95423760",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "4c7a8adb-7c54-45d8-a92d-66a3f8097d31",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 137,
            "column": 16
          }
        },
        {
          "incidentId": "0f9a4e91-b730-48a7-8ced-d237383f07db",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022DELETE FROM OriginalQuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022DELETE FROM OriginalQuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 115,
            "column": 12
          }
        },
        {
          "incidentId": "500741ae-20b6-4978-8805-a444b0c4da77",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 97,
            "column": 20
          }
        },
        {
          "incidentId": "7b8b7170-66bd-43e9-b8b7-8931d7b33fe8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 20
          }
        },
        {
          "incidentId": "98982add-03d1-4fb9-a056-52ddce187413",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 36,
            "column": 20
          }
        },
        {
          "incidentId": "bd276f8a-cdde-4e71-9433-3f72053cef80",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(1)",
              "protected": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnswer.cs",
            "snippet": "LoadColumn(1)",
            "protectedSnippet": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "label": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 9,
            "column": 9
          }
        },
        {
          "incidentId": "2af7669b-093b-4377-ae84-2043a756f53e",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonData = JsonConvert.DeserializeObject\u003CDictionary\u003Cstring, object\u003E\u003E(line);",
              "protected": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\JsonParser.cs",
            "snippet": "var jsonData = JsonConvert.DeserializeObject\u003CDictionary\u003Cstring, object\u003E\u003E(line);",
            "protectedSnippet": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)",
            "label": "M:Newtonsoft.Json.JsonConvert.DeserializeObject\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert.deserializeobject",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 24
          }
        },
        {
          "incidentId": "2cfad121-c110-41e4-b2e8-0d8048557b0b",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 20
          }
        },
        {
          "incidentId": "4180e52c-55d2-430e-be3e-52f690c89491",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 20
          }
        },
        {
          "incidentId": "bfc9e672-23bc-439e-b61c-42d7c98068f0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "aa736b45-70e1-4358-bbb1-96b3a92253ec",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.TextCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.TextCatalog",
            "label": "T:Microsoft.ML.TextCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "da584d2e-a978-4e41-bd85-51e517f66a01",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 217,
            "column": 16
          }
        },
        {
          "incidentId": "8feb7039-28e1-4c0c-a374-c64cdfbc41e8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "05e4a6bb-6f29-46b4-bf43-dbbd88c0e28b",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 119,
            "column": 16
          }
        },
        {
          "incidentId": "ae5bec47-ae8d-4238-893c-ae8c22ce6c54",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 100,
            "column": 20
          }
        },
        {
          "incidentId": "3fa6bd16-56a7-4d12-b6e0-e6be027d1028",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 95,
            "column": 20
          }
        },
        {
          "incidentId": "b75bd375-60d5-4267-8e29-fc285eaaff78",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 95,
            "column": 20
          }
        },
        {
          "incidentId": "21e1cd9b-52cf-4fcf-b07b-c0ce6a40346b",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 20
          }
        },
        {
          "incidentId": "00399370-cf75-43d0-b005-e8239986ff1e",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 92,
            "column": 16
          }
        },
        {
          "incidentId": "6f5ca492-454e-44b9-a873-339afab93d00",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "87146226-ffdf-4433-bb1c-22ca1dfbf997",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "289e3179-b9bd-4e7f-883a-6d87e2651e91",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "LoadColumn(3)",
              "protected": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnswer.cs",
            "snippet": "LoadColumn(3)",
            "protectedSnippet": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "label": "M:Microsoft.ML.Data.LoadColumnAttribute.#ctor(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.loadcolumnattribute.loadcolumnattribute",
                "isCustom": false
              }
            ],
            "line": 15,
            "column": 9
          }
        },
        {
          "incidentId": "23d42e01-7149-43e9-a9fe-070fbca845d3",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "3188aade-20a0-431d-931d-fcb076e4341a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }",
              "protected": "T:System.Data.SqlClient.SqlDataReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlDataReader",
            "label": "T:System.Data.SqlClient.SqlDataReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader",
                "isCustom": false
              }
            ],
            "line": 188,
            "column": 20
          }
        },
        {
          "incidentId": "4452a894-f155-4355-9eab-fe253652f018",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 20
          }
        },
        {
          "incidentId": "b9366b8b-df75-4590-be3f-b5537e08278c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 101,
            "column": 20
          }
        },
        {
          "incidentId": "ab23c4b2-4abe-459c-b5ab-0f2e4e51bfb8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 96,
            "column": 20
          }
        },
        {
          "incidentId": "ab5fbf1c-5bbe-46fa-afbf-de750bd38ffb",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "1172546b-f220-4e53-85cc-91b555ec170c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 38,
            "column": 20
          }
        },
        {
          "incidentId": "360bcbe4-cebb-4858-8d37-f7b5b8a4afb7",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 20
          }
        },
        {
          "incidentId": "83c7acdb-6fc4-4db3-a3b8-aa7068b834df",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 20
          }
        },
        {
          "incidentId": "dd72d113-2d8b-41de-bf78-e1fcb9586a31",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 20
          }
        },
        {
          "incidentId": "ce2c1ca1-02e6-4d08-a1dc-76ca393ee08c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 29,
            "column": 20
          }
        },
        {
          "incidentId": "792c9dc9-8644-463e-a65b-2aacf7f333e8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var commandText = @\u0022INSERT INTO OriginalQuestionAnsweringData \r\n                            (Annotations, DocumentHtml, DocumentTitle, DocumentTokens, \r\n                             DocumentUrl, ExampleId, LongAnswerCandidates, \r\n                             QuestionText, QuestionTokens, DocumentText) \r\n                            VALUES \r\n                            (@Annotations, @DocumentHtml, @DocumentTitle, @DocumentTokens, \r\n                             @DocumentUrl, @ExampleId, @LongAnswerCandidates, \r\n                             @QuestionText, @QuestionTokens, @DocumentText)\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var commandText = @\u0022INSERT INTO OriginalQuestionAnsweringData \r\n                            (Annotations, DocumentHtml, DocumentTitle, DocumentTokens, \r\n                             DocumentUrl, ExampleId, LongAnswerCandidates, \r\n                             QuestionText, QuestionTokens, DocumentText) \r\n                            VALUES \r\n                            (@Annotations, @DocumentHtml, @DocumentTitle, @DocumentTokens, \r\n                             @DocumentUrl, @ExampleId, @LongAnswerCandidates, \r\n                             @QuestionText, @QuestionTokens, @DocumentText)\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 16,
            "column": 12
          }
        },
        {
          "incidentId": "c649c329-2ec7-415c-9740-5e08f5139889",
          "ruleId": "Api.0002",
          "description": "API is available in package Newtonsoft.Json, 13.0.3.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var jsonData = JsonConvert.DeserializeObject\u003CDictionary\u003Cstring, object\u003E\u003E(line);",
              "protected": "T:Newtonsoft.Json.JsonConvert"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\JsonParser.cs",
            "snippet": "var jsonData = JsonConvert.DeserializeObject\u003CDictionary\u003Cstring, object\u003E\u003E(line);",
            "protectedSnippet": "T:Newtonsoft.Json.JsonConvert",
            "label": "T:Newtonsoft.Json.JsonConvert",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/newtonsoft.json.jsonconvert",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 24
          }
        },
        {
          "incidentId": "36e323fd-fe6c-4fe2-acc4-a93381eb5f4b",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteReader",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executereader",
                "isCustom": false
              }
            ],
            "line": 112,
            "column": 20
          }
        },
        {
          "incidentId": "ca981626-d552-4ef0-ab3e-98be0e159e7d",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 20
          }
        },
        {
          "incidentId": "eec7b8dd-e56e-4a4a-b22c-b2fc5c9d6d39",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.TransformExtensionsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.TransformExtensionsCatalog",
            "label": "T:Microsoft.ML.TransformExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "32ea6017-cdca-4b90-b503-535436994ce1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "96cc6211-6c33-4495-a604-47ea3184ad1f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.TransformsCatalog.TextTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.texttransforms",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "fc31b591-1212-4148-939e-42fe71ab5a02",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.TextDataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Context\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.TextDataViewType",
            "label": "T:Microsoft.ML.Data.TextDataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.textdataviewtype",
                "isCustom": false
              }
            ],
            "line": 223,
            "column": 16
          }
        },
        {
          "incidentId": "467a6359-cff7-4e34-81dc-914d7d72e8b0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)",
            "label": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.this[string]",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 16
          }
        },
        {
          "incidentId": "9ce9fc96-5aac-4fb6-8d84-cdb3b0fae4f8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "ef92cc7f-45f8-4889-9bcb-156d379e89b3",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 20
          }
        },
        {
          "incidentId": "1572ed7e-c277-4916-ba6b-12c6db4c773e",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 101,
            "column": 20
          }
        },
        {
          "incidentId": "16c3ba20-4180-4134-b45c-4ce0144cdccd",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 98,
            "column": 20
          }
        },
        {
          "incidentId": "a174daf1-001a-425d-98f0-db334d011da5",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 95,
            "column": 20
          }
        },
        {
          "incidentId": "edd52923-e2a6-466f-8fa2-0e05ce9fe1dc",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getint32",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "74e3f5a7-6c36-4c4d-9a89-9ff46a125f87",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 37,
            "column": 20
          }
        },
        {
          "incidentId": "a9e695ae-3f2a-4b1f-8079-6d6cf2abda52",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 20
          }
        },
        {
          "incidentId": "29bf506d-5e65-4c23-b351-50a43bff8f8d",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 29,
            "column": 20
          }
        },
        {
          "incidentId": "59644ef8-2323-448f-9e6c-d56b0fa6065f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var commandText = @\u0022INSERT INTO OriginalQuestionAnsweringData \r\n                            (Annotations, DocumentHtml, DocumentTitle, DocumentTokens, \r\n                             DocumentUrl, ExampleId, LongAnswerCandidates, \r\n                             QuestionText, QuestionTokens, DocumentText) \r\n                            VALUES \r\n                            (@Annotations, @DocumentHtml, @DocumentTitle, @DocumentTokens, \r\n                             @DocumentUrl, @ExampleId, @LongAnswerCandidates, \r\n                             @QuestionText, @QuestionTokens, @DocumentText)\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var commandText = @\u0022INSERT INTO OriginalQuestionAnsweringData \r\n                            (Annotations, DocumentHtml, DocumentTitle, DocumentTokens, \r\n                             DocumentUrl, ExampleId, LongAnswerCandidates, \r\n                             QuestionText, QuestionTokens, DocumentText) \r\n                            VALUES \r\n                            (@Annotations, @DocumentHtml, @DocumentTitle, @DocumentTokens, \r\n                             @DocumentUrl, @ExampleId, @LongAnswerCandidates, \r\n                             @QuestionText, @QuestionTokens, @DocumentText)\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, (object)data.DocumentHtml ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, (object)data.DocumentTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, (object)data.ExampleId ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, (object)data.QuestionText ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, (object)data.QuestionTokens ?? DBNull.Value);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 16,
            "column": 12
          }
        },
        {
          "incidentId": "c083aee0-0663-4a6f-9031-7181ecc64ea2",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 20
          }
        },
        {
          "incidentId": "e68590e5-dbdd-41c3-b8fd-5d2632814d21",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 20
          }
        },
        {
          "incidentId": "21ba7a07-2333-4ae7-b197-a128894f5675",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 24,
            "column": 20
          }
        },
        {
          "incidentId": "2ddbb97c-ff4c-4bb8-8aed-7401edfe2aa3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "41c7d8b7-e550-404c-82d2-179658630ecb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.LearningPipelineExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.LearningPipelineExtensions",
            "label": "T:Microsoft.ML.LearningPipelineExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.learningpipelineextensions",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "cec58607-9570-42bd-b923-81a72737d946",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
              "protected": "P:Microsoft.ML.Data.NumberDataViewType.Int32"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
            "protectedSnippet": "P:Microsoft.ML.Data.NumberDataViewType.Int32",
            "label": "P:Microsoft.ML.Data.NumberDataViewType.Int32",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.numberdataviewtype.int32",
                "isCustom": false
              }
            ],
            "line": 221,
            "column": 16
          }
        },
        {
          "incidentId": "f8af352e-1c25-4454-8c1b-b1382228126c",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    connection.Open();\r\n                    return (int)command.ExecuteScalar();\r\n                }",
              "protected": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    connection.Open();\r\n                    return (int)command.ExecuteScalar();\r\n                }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "label": "M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 16
          }
        },
        {
          "incidentId": "8cc994bf-8505-4ccc-bf01-d6b1464bc567",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var commandText = \u0022SELECT COUNT(*) FROM OriginalQuestionAnsweringData\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    connection.Open();\r\n                    return (int)command.ExecuteScalar();\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var commandText = \u0022SELECT COUNT(*) FROM OriginalQuestionAnsweringData\u0022;\r\n\r\n                using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    connection.Open();\r\n                    return (int)command.ExecuteScalar();\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 218,
            "column": 12
          }
        },
        {
          "incidentId": "6c6190c0-6ec1-4d55-a01b-a285da114d45",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "8b96cf9b-7992-4a77-a56c-ab9427621ff7",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "ca15723f-9340-4379-a5e4-737dab7fe34e",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.isdbnull",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "8c0c0423-43c3-4d73-b4a9-8f0fa4c024ca",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 183,
            "column": 20
          }
        },
        {
          "incidentId": "47baa42d-c381-4aa6-b03f-7ff8732236e7",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 121,
            "column": 20
          }
        },
        {
          "incidentId": "2813dcf1-7f0e-4866-b5ee-04832b1a0959",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }",
              "protected": "T:System.Data.SqlClient.SqlDataReader"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlDataReader",
            "label": "T:System.Data.SqlClient.SqlDataReader",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader",
                "isCustom": false
              }
            ],
            "line": 59,
            "column": 20
          }
        },
        {
          "incidentId": "2beff7fc-c678-4102-ba89-fc8f6ac76dc0",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, (object)data.Annotations ?? DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 29,
            "column": 20
          }
        },
        {
          "incidentId": "3eff7c65-61d3-45e1-b037-8ae02fd1e8e6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataView.Schema, modelSavePath);",
              "protected": "T:Microsoft.ML.DataViewSchema"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "mlContext.Model.Save(model, dataView.Schema, modelSavePath);",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema",
            "label": "T:Microsoft.ML.DataViewSchema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema",
                "isCustom": false
              }
            ],
            "line": 244,
            "column": 16
          }
        },
        {
          "incidentId": "d18525cf-9564-41a9-9e2e-d0ada3c1013e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])",
            "label": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog.concatenate",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "1fdc5f53-1400-449f-b381-304be7bfe7ff",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)",
            "label": "P:Microsoft.ML.Data.SchemaDefinition.Item(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.this[string]",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 16
          }
        },
        {
          "incidentId": "6210aa02-1834-45d8-a7d1-ad0379e72605",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
              "protected": "T:Microsoft.ML.Data.NumberDataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
            "protectedSnippet": "T:Microsoft.ML.Data.NumberDataViewType",
            "label": "T:Microsoft.ML.Data.NumberDataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.numberdataviewtype",
                "isCustom": false
              }
            ],
            "line": 221,
            "column": 16
          }
        },
        {
          "incidentId": "31b81af2-ab55-4f98-93d3-d60291024ce7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
              "protected": "T:Microsoft.ML.Data.SchemaDefinition.Column"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
            "protectedSnippet": "T:Microsoft.ML.Data.SchemaDefinition.Column",
            "label": "T:Microsoft.ML.Data.SchemaDefinition.Column",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.column",
                "isCustom": false
              }
            ],
            "line": 221,
            "column": 16
          }
        },
        {
          "incidentId": "3266782f-8573-445e-866e-180c2e42e268",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 186,
            "column": 20
          }
        },
        {
          "incidentId": "e5735181-49a6-4d98-b234-8efe124b8df6",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "d3e10668-4216-41a4-9a97-61fdfd3640a9",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 20
          }
        },
        {
          "incidentId": "794b0f12-6384-44bb-a111-3dab296a3168",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 99,
            "column": 20
          }
        },
        {
          "incidentId": "4f2df80c-f639-4fe1-8b98-feb40ab4efd2",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 99,
            "column": 20
          }
        },
        {
          "incidentId": "18d45eea-505a-4e1f-a930-39cc342f14dd",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 98,
            "column": 20
          }
        },
        {
          "incidentId": "8b90d5bf-ee9e-4b94-9adf-c9ef1590feff",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "96861de7-05a4-4842-83fa-748d4c2e068b",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "connection.Open();",
              "protected": "M:System.Data.SqlClient.SqlConnection.Open"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "connection.Open();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.Open",
            "label": "M:System.Data.SqlClient.SqlConnection.Open",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.open",
                "isCustom": false
              }
            ],
            "line": 58,
            "column": 20
          }
        },
        {
          "incidentId": "4cf0f934-838e-4a08-97d6-f6b5d0e6e017",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 56,
            "column": 20
          }
        },
        {
          "incidentId": "f09afd3a-af23-436f-a0b0-2f19bbc4f894",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 38,
            "column": 20
          }
        },
        {
          "incidentId": "1811de4a-d930-4c51-a042-0a5d4181875f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 20
          }
        },
        {
          "incidentId": "44ed5061-a1a5-4ee3-8ad9-2ee886af7214",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, (object)data.DocumentUrl ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 20
          }
        },
        {
          "incidentId": "62250caf-42fa-4bbe-abea-ade8e513f9a8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 20
          }
        },
        {
          "incidentId": "0b33d74d-6ea6-4457-a4be-3dad6e20cdea",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 96,
            "column": 20
          }
        },
        {
          "incidentId": "f9e25114-2e16-4cf7-bf9b-a9fa5b56bb4a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 20
          }
        },
        {
          "incidentId": "ff5e58c2-12ef-40ea-bb19-7ebdf268459e",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022UPDATE OriginalQuestionAnsweringData SET Question = @Question, Context = @Context, Answer = @Answer WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
              "protected": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022UPDATE OriginalQuestionAnsweringData SET Question = @Question, Context = @Context, Answer = @Answer WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Annotations\u0022, qaData.Annotations);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentHtml\u0022, qaData.DocumentHtml);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentTokens\u0022, qaData.DocumentTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentUrl\u0022, qaData.DocumentUrl);\r\n                    command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);\r\n                    command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionText\u0022, qaData.QuestionText);\r\n                    command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);\r\n                    command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);\r\n\r\n                    connection.Open();\r\n                    command.ExecuteNonQuery();\r\n                }\r\n            }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "label": "M:System.Data.SqlClient.SqlConnection.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 88,
            "column": 12
          }
        },
        {
          "incidentId": "b2c6a003-b4c5-4576-9281-9ec3d643633a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "2250218f-1b13-4b14-83de-8c80d9582a57",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "7b0db2d3-c9c1-4e3d-8843-b1e062ea0c4f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, (object)data.DocumentTitle ?? DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 20
          }
        },
        {
          "incidentId": "e57b1022-740e-4370-9d55-8274706ff403",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }\r\n                    }\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 109,
            "column": 16
          }
        },
        {
          "incidentId": "2e6602fd-5b46-4eb5-b0ef-6d1b0a35405f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 92,
            "column": 20
          }
        },
        {
          "incidentId": "3f348b9c-7db9-4350-8529-bd7540b68aa8",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Question\u0022, qaData.Question ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 20
          }
        },
        {
          "incidentId": "e317a8b5-bc6c-41a8-ad45-8ba297cb7a68",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "return new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getint32",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 28
          }
        },
        {
          "incidentId": "51aa0f26-e1d6-4386-ab52-bf9585a7a44e",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 24,
            "column": 20
          }
        },
        {
          "incidentId": "f363c692-6e93-45d8-a891-f6b1ad16eec4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
              "protected": "T:Microsoft.ML.RegressionCatalog.RegressionTrainers"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
            "protectedSnippet": "T:Microsoft.ML.RegressionCatalog.RegressionTrainers",
            "label": "T:Microsoft.ML.RegressionCatalog.RegressionTrainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.regressioncatalog.regressiontrainers",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 16
          }
        },
        {
          "incidentId": "1c0b50c5-8d60-4117-8df0-50eb52630623",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
              "protected": "P:Microsoft.ML.RegressionCatalog.Trainers"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var trainer = mlContext.Regression.Trainers.LbfgsPoissonRegression();",
            "protectedSnippet": "P:Microsoft.ML.RegressionCatalog.Trainers",
            "label": "P:Microsoft.ML.RegressionCatalog.Trainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.regressioncatalog.trainers",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 16
          }
        },
        {
          "incidentId": "a03b5ce1-7b16-43df-a0bc-e4e5280ddf23",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var dataView = mlContext.Data.LoadFromEnumerable(qaDataList, schemaDefinition);",
              "protected": "T:Microsoft.ML.DataOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var dataView = mlContext.Data.LoadFromEnumerable(qaDataList, schemaDefinition);",
            "protectedSnippet": "T:Microsoft.ML.DataOperationsCatalog",
            "label": "T:Microsoft.ML.DataOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataoperationscatalog",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 16
          }
        },
        {
          "incidentId": "5fe73495-7445-43f5-9da6-18b72d5063cc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var schemaDefinition = SchemaDefinition.Create(typeof(QuestionAnsweringData));",
              "protected": "T:Microsoft.ML.Data.SchemaDefinition"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var schemaDefinition = SchemaDefinition.Create(typeof(QuestionAnsweringData));",
            "protectedSnippet": "T:Microsoft.ML.Data.SchemaDefinition",
            "label": "T:Microsoft.ML.Data.SchemaDefinition",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition",
                "isCustom": false
              }
            ],
            "line": 220,
            "column": 16
          }
        },
        {
          "incidentId": "aa9e0cca-47da-4910-8f99-c7b81c2283fe",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, qaData.ID);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 20
          }
        },
        {
          "incidentId": "0b694634-81af-412c-9f6c-23c02d7eb816",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@QuestionTokens\u0022, qaData.QuestionTokens);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 102,
            "column": 20
          }
        },
        {
          "incidentId": "40bde2bd-6cee-4b21-bf05-fbb4a7c1cd96",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 96,
            "column": 20
          }
        },
        {
          "incidentId": "d9643e05-37d8-45ac-ab81-4b583dd2e1e5",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentTitle\u0022, qaData.DocumentTitle);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 96,
            "column": 20
          }
        },
        {
          "incidentId": "25adbdc9-77bb-4b11-a178-6d0bbddea723",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "57b5f2d1-498b-40ae-9a5f-e94667afc2ed",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 28
          }
        },
        {
          "incidentId": "cd7ac009-7bdd-4631-9a69-21e4d45bb073",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }",
              "protected": "M:System.Data.SqlClient.SqlDataReader.Read"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.Read",
            "label": "M:System.Data.SqlClient.SqlDataReader.Read",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.read",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 24
          }
        },
        {
          "incidentId": "e0a2d7f5-2e3d-400b-989d-ce2fe34bbfef",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 38,
            "column": 20
          }
        },
        {
          "incidentId": "b7dbc729-eedd-4fd7-882f-d6076ea56434",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, (object)data.LongAnswerCandidates ?? DBNull.Value);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 20
          }
        },
        {
          "incidentId": "cd4eb52f-5cab-4e5d-b25f-90efa6035002",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getordinal",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 28
          }
        },
        {
          "incidentId": "e676e740-bbb3-4c1e-bfb4-a8a8666963e2",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }",
              "protected": "M:System.Data.SqlClient.SqlDataReader.Read"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "while (reader.Read())\r\n                        {\r\n                            list.Add(new QuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Question = reader.GetString(reader.GetOrdinal(\u0022Question\u0022)),\r\n                                Context = reader.GetString(reader.GetOrdinal(\u0022Context\u0022)),\r\n                                Answer = reader.GetString(reader.GetOrdinal(\u0022Answer\u0022))\r\n                            });\r\n                        }",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.Read",
            "label": "M:System.Data.SqlClient.SqlDataReader.Read",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.read",
                "isCustom": false
              }
            ],
            "line": 114,
            "column": 24
          }
        },
        {
          "incidentId": "a558c443-0a42-4cca-8acd-47ddf54c83bd",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
              "protected": "P:System.Data.SqlClient.SqlCommand.Parameters"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Context\u0022, qaData.Context ?? (object)DBNull.Value);",
            "protectedSnippet": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "label": "P:System.Data.SqlClient.SqlCommand.Parameters",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.parameters",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 20
          }
        },
        {
          "incidentId": "915f2bfa-c58a-4e92-b35b-95d4f1cac802",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\QuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@Answer\u0022, qaData.Answer ?? (object)DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 24,
            "column": 20
          }
        },
        {
          "incidentId": "9ef19aef-69ba-44a9-a0d6-93fc5b2ac033",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataView.Schema, modelSavePath);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "mlContext.Model.Save(model, dataView.Schema, modelSavePath);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 244,
            "column": 16
          }
        },
        {
          "incidentId": "069a2d5d-8b99-4144-9226-a8a5d6619f6a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator",
            "label": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.columnconcatenatingestimator",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "f9decaef-6cff-4c94-bf4a-3b1427d92288",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "103e42cf-debb-4477-be7d-975480cacbc6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
              "protected": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(\u0022Features\u0022, nameof(QuestionAnsweringData.Question))\r\n                    .Append(mlContext.Transforms.Text.FeaturizeText(\u0022ContextFeatures\u0022, nameof(QuestionAnsweringData.Context)))\r\n                    .Append(mlContext.Transforms.Concatenate(\u0022Features\u0022, \u0022Features\u0022, \u0022ContextFeatures\u0022))\r\n                    .Append(mlContext.Transforms.CopyColumns(\u0022Label\u0022, nameof(QuestionAnsweringData.Answer)));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "label": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator",
                "isCustom": false
              }
            ],
            "line": 230,
            "column": 16
          }
        },
        {
          "incidentId": "8fca86b6-daee-41c0-962e-9e372464659f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.TextDataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Answer\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.TextDataViewType",
            "label": "T:Microsoft.ML.Data.TextDataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.textdataviewtype",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 16
          }
        },
        {
          "incidentId": "d91e1e39-c245-4b4b-b151-22486b0bf6c5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
              "protected": "T:Microsoft.ML.Data.TextDataViewType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022Question\u0022].ColumnType = TextDataViewType.Instance;",
            "protectedSnippet": "T:Microsoft.ML.Data.TextDataViewType",
            "label": "T:Microsoft.ML.Data.TextDataViewType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.textdataviewtype",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 16
          }
        },
        {
          "incidentId": "dd505d45-f5d3-465c-bd3a-65a69cce046d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
              "protected": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\NQEntryExtensions.cs",
            "snippet": "schemaDefinition[\u0022ID\u0022].ColumnType = NumberDataViewType.Int32;",
            "protectedSnippet": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType",
            "label": "P:Microsoft.ML.Data.SchemaDefinition.Column.ColumnType",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemadefinition.column.columntype",
                "isCustom": false
              }
            ],
            "line": 221,
            "column": 16
          }
        },
        {
          "incidentId": "67e33dbf-e786-403a-973b-d1e4b25b21ab",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return (int)command.ExecuteScalar();",
              "protected": "M:System.Data.SqlClient.SqlCommand.ExecuteScalar"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "return (int)command.ExecuteScalar();",
            "protectedSnippet": "M:System.Data.SqlClient.SqlCommand.ExecuteScalar",
            "label": "M:System.Data.SqlClient.SqlCommand.ExecuteScalar",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand.executescalar",
                "isCustom": false
              }
            ],
            "line": 225,
            "column": 20
          }
        },
        {
          "incidentId": "6b15b189-8304-4932-97ee-f929234d2910",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "a8b471b5-9f7b-4538-b952-7515dda44829",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getstring",
                "isCustom": false
              }
            ],
            "line": 192,
            "column": 28
          }
        },
        {
          "incidentId": "27d7217a-0958-4c8d-93ad-3d4d5345cd81",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);\r\n                    command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);\r\n\r\n                    connection.Open();\r\n\r\n                    using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }\r\n                }",
              "protected": "T:System.Data.SqlClient.SqlCommand"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var command = new SqlCommand(commandText, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@Offset\u0022, offset);\r\n                    command.Parameters.AddWithValue(\u0022@PageSize\u0022, pageSize);\r\n\r\n                    connection.Open();\r\n\r\n                    using (var reader = command.ExecuteReader())\r\n                    {\r\n                        while (reader.Read())\r\n                        {\r\n                            var data = new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(0),\r\n                                Annotations = reader.GetString(1),\r\n                                DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                                DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                                DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                                DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                                ExampleId = reader.GetString(6),\r\n                                LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                                QuestionText = reader.GetString(8),\r\n                                QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                                DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                            };\r\n\r\n                            dataList.Add(data);\r\n                        }\r\n                    }\r\n                }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlCommand",
            "label": "T:System.Data.SqlClient.SqlCommand",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlcommand",
                "isCustom": false
              }
            ],
            "line": 181,
            "column": 16
          }
        },
        {
          "incidentId": "f0d84d37-d92f-4f9f-8805-d37c851881c7",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
              "protected": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };",
            "protectedSnippet": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)",
            "label": "M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqldatareader.getint32",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 24
          }
        },
        {
          "incidentId": "dc028b9a-303f-4de1-9fcb-f9b0c2447910",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var command = new SqlCommand(\u0022SELECT * FROM OriginalQuestionAnsweringData\u0022, connection);\r\n                connection.Open();\r\n\r\n                using (var reader = command.ExecuteReader())\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                        var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };\r\n\r\n                        dataList.Add(data);\r\n                    }\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (var connection = new SqlConnection(_connectionString))\r\n            {\r\n                var command = new SqlCommand(\u0022SELECT * FROM OriginalQuestionAnsweringData\u0022, connection);\r\n                connection.Open();\r\n\r\n                using (var reader = command.ExecuteReader())\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                        var data = new OriginalQuestionAnsweringData\r\n                        {\r\n                            ID = reader.GetInt32(0),\r\n                            Annotations = reader.GetString(1),\r\n                            DocumentHtml = reader.IsDBNull(2) ? null : reader.GetString(2),\r\n                            DocumentTitle = reader.IsDBNull(3) ? null : reader.GetString(3),\r\n                            DocumentTokens = reader.IsDBNull(4) ? null : reader.GetString(4),\r\n                            DocumentUrl = reader.IsDBNull(5) ? null : reader.GetString(5),\r\n                            ExampleId = reader.GetString(6),\r\n                            LongAnswerCandidates = reader.IsDBNull(7) ? null : reader.GetString(7),\r\n                            QuestionText = reader.GetString(8),\r\n                            QuestionTokens = reader.IsDBNull(9) ? null : reader.GetString(9),\r\n                            DocumentText = reader.IsDBNull(10) ? null : reader.GetString(10)\r\n                        };\r\n\r\n                        dataList.Add(data);\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 134,
            "column": 12
          }
        },
        {
          "incidentId": "e62d9dc4-73ac-4bc8-8e41-c31ab23674da",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "T:System.Data.SqlClient.SqlParameter"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameter",
            "label": "T:System.Data.SqlClient.SqlParameter",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparameter",
                "isCustom": false
              }
            ],
            "line": 121,
            "column": 20
          }
        },
        {
          "incidentId": "172a9ab3-5cd0-42f5-a4a4-d298e5b47b1f",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ID\u0022, id);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 121,
            "column": 20
          }
        },
        {
          "incidentId": "65a32a46-6aed-48f2-80a2-c0c2eeca46e7",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);",
              "protected": "T:System.Data.SqlClient.SqlParameterCollection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);",
            "protectedSnippet": "T:System.Data.SqlClient.SqlParameterCollection",
            "label": "T:System.Data.SqlClient.SqlParameterCollection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection",
                "isCustom": false
              }
            ],
            "line": 103,
            "column": 20
          }
        },
        {
          "incidentId": "a54ba589-8b68-4a4a-af6e-d5f326a34d78",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, qaData.DocumentText);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 103,
            "column": 20
          }
        },
        {
          "incidentId": "302931a6-1279-4c25-aa01-4282de9947ed",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@LongAnswerCandidates\u0022, qaData.LongAnswerCandidates);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 100,
            "column": 20
          }
        },
        {
          "incidentId": "013e780b-f8c8-4a8a-9435-88132b24f125",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@ExampleId\u0022, qaData.ExampleId);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 99,
            "column": 20
          }
        },
        {
          "incidentId": "eb5fa0ac-7c82-445d-a478-fecbedac0d3a",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM OriginalQuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }",
              "protected": "T:System.Data.SqlClient.SqlConnection"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "using (SqlConnection connection = new SqlConnection(_connectionString))\r\n            {\r\n                string query = \u0022SELECT * FROM OriginalQuestionAnsweringData WHERE ID = @ID\u0022;\r\n\r\n                using (SqlCommand command = new SqlCommand(query, connection))\r\n                {\r\n                    command.Parameters.AddWithValue(\u0022@ID\u0022, id);\r\n\r\n                    connection.Open();\r\n                    using (SqlDataReader reader = command.ExecuteReader())\r\n                    {\r\n                        if (reader.Read())\r\n                        {\r\n                            return new OriginalQuestionAnsweringData\r\n                            {\r\n                                ID = reader.GetInt32(reader.GetOrdinal(\u0022ID\u0022)),\r\n                                Annotations = reader.GetString(reader.GetOrdinal(\u0022Annotations\u0022)),\r\n                                DocumentHtml = reader.GetString(reader.GetOrdinal(\u0022DocumentHtml\u0022)),\r\n                                DocumentTitle = reader.GetString(reader.GetOrdinal(\u0022DocumentTitle\u0022)),\r\n                                DocumentTokens = reader.GetString(reader.GetOrdinal(\u0022DocumentTokens\u0022)),\r\n                                DocumentUrl = reader.GetString(reader.GetOrdinal(\u0022DocumentUrl\u0022)),\r\n                                ExampleId = reader.GetString(reader.GetOrdinal(\u0022ExampleId\u0022)),\r\n                                LongAnswerCandidates = reader.GetString(reader.GetOrdinal(\u0022LongAnswerCandidates\u0022)),\r\n                                QuestionText = reader.GetString(reader.GetOrdinal(\u0022QuestionText\u0022)),\r\n                                QuestionTokens = reader.GetString(reader.GetOrdinal(\u0022QuestionTokens\u0022)),\r\n                                DocumentText = reader.GetString(reader.GetOrdinal(\u0022DocumentText\u0022)) \r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }",
            "protectedSnippet": "T:System.Data.SqlClient.SqlConnection",
            "label": "T:System.Data.SqlClient.SqlConnection",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlconnection",
                "isCustom": false
              }
            ],
            "line": 50,
            "column": 12
          }
        },
        {
          "incidentId": "45085a55-0342-4c1a-94a1-f69d211dedff",
          "ruleId": "Api.0002",
          "description": "API is available in package System.Data.SqlClient, 4.8.6.",
          "projectPath": "Blazor.Tools.ConsoleApp\\Blazor.Tools.ConsoleApp.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);",
              "protected": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ConsoleApp\\Extensions\\OriginalQuestionAnsweringDataAccess.cs",
            "snippet": "command.Parameters.AddWithValue(\u0022@DocumentText\u0022, (object)data.DocumentText ?? DBNull.Value);",
            "protectedSnippet": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "label": "M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/system.data.sqlclient.sqlparametercollection.addwithvalue",
                "isCustom": false
              }
            ],
            "line": 38,
            "column": 20
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools\\Blazor.Tools.csproj",
      "startingProject": true,
      "issues": 4,
      "storyPoints": 705,
      "ruleInstances": [
        {
          "incidentId": "9cc785c1-2dfe-43d8-b9ae-817720cebbcb",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "system.diagnostics.performancecounter, 8.0.0\n\nRecommendation:\n\nsystem.diagnostics.performancecounter 9.0.0-preview.7.24405.7",
              "protected": "system.diagnostics.performancecounter, 8.0.0\n\nRecommendation:\n\nsystem.diagnostics.performancecounter 9.0.0-preview.7.24405.7"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Blazor.Tools.csproj",
            "snippet": "system.diagnostics.performancecounter, 8.0.0\n\nRecommendation:\n\nsystem.diagnostics.performancecounter 9.0.0-preview.7.24405.7",
            "protectedSnippet": "system.diagnostics.performancecounter, 8.0.0\n\nRecommendation:\n\nsystem.diagnostics.performancecounter 9.0.0-preview.7.24405.7",
            "label": "system.diagnostics.performancecounter 8.0.0"
          }
        },
        {
          "incidentId": "1e479f45-33af-4148-8839-4edde5a165d2",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.EntityFrameworkCore.SqlServer, 8.0.8\n\nRecommendation:\n\nMicrosoft.EntityFrameworkCore.SqlServer 9.0.0-preview.7.24405.3",
              "protected": "Microsoft.EntityFrameworkCore.SqlServer, 8.0.8\n\nRecommendation:\n\nMicrosoft.EntityFrameworkCore.SqlServer 9.0.0-preview.7.24405.3"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Blazor.Tools.csproj",
            "snippet": "Microsoft.EntityFrameworkCore.SqlServer, 8.0.8\n\nRecommendation:\n\nMicrosoft.EntityFrameworkCore.SqlServer 9.0.0-preview.7.24405.3",
            "protectedSnippet": "Microsoft.EntityFrameworkCore.SqlServer, 8.0.8\n\nRecommendation:\n\nMicrosoft.EntityFrameworkCore.SqlServer 9.0.0-preview.7.24405.3",
            "label": "Microsoft.EntityFrameworkCore.SqlServer 8.0.8"
          }
        },
        {
          "incidentId": "6d9146ee-2005-4752-9b08-64d6db7d7895",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "system.data.oledb, 8.0.0\n\nRecommendation:\n\nsystem.data.oledb 9.0.0-preview.7.24405.7",
              "protected": "system.data.oledb, 8.0.0\n\nRecommendation:\n\nsystem.data.oledb 9.0.0-preview.7.24405.7"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Blazor.Tools.csproj",
            "snippet": "system.data.oledb, 8.0.0\n\nRecommendation:\n\nsystem.data.oledb 9.0.0-preview.7.24405.7",
            "protectedSnippet": "system.data.oledb, 8.0.0\n\nRecommendation:\n\nsystem.data.oledb 9.0.0-preview.7.24405.7",
            "label": "system.data.oledb 8.0.0"
          }
        },
        {
          "incidentId": "44d3c6d1-fcdd-4175-b0d1-c0aa9f4cf16b",
          "ruleId": "NuGet.0001",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.VisualStudio.Azure.Containers.Tools.Targets, 1.21.0\n\nRecommendation:\n\nNo supported version found",
              "protected": "Microsoft.VisualStudio.Azure.Containers.Tools.Targets, 1.21.0\n\nRecommendation:\n\nNo supported version found"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Blazor.Tools.csproj",
            "snippet": "Microsoft.VisualStudio.Azure.Containers.Tools.Targets, 1.21.0\n\nRecommendation:\n\nNo supported version found",
            "protectedSnippet": "Microsoft.VisualStudio.Azure.Containers.Tools.Targets, 1.21.0\n\nRecommendation:\n\nNo supported version found",
            "label": "Microsoft.VisualStudio.Azure.Containers.Tools.Targets 1.21.0"
          }
        },
        {
          "incidentId": "36298112-74e8-4ea1-8fe3-d7b959ac0513",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.AspNetCore.Identity.EntityFrameworkCore, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore 9.0.0-preview.7.24406.2",
              "protected": "Microsoft.AspNetCore.Identity.EntityFrameworkCore, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore 9.0.0-preview.7.24406.2"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Blazor.Tools.csproj",
            "snippet": "Microsoft.AspNetCore.Identity.EntityFrameworkCore, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore 9.0.0-preview.7.24406.2",
            "protectedSnippet": "Microsoft.AspNetCore.Identity.EntityFrameworkCore, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore 9.0.0-preview.7.24406.2",
            "label": "Microsoft.AspNetCore.Identity.EntityFrameworkCore 8.0.8"
          }
        },
        {
          "incidentId": "ced154a0-9f48-4f77-a06a-4381e59744dc",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "system.configuration.configurationmanager, 8.0.0\n\nRecommendation:\n\nsystem.configuration.configurationmanager 9.0.0-preview.7.24405.7",
              "protected": "system.configuration.configurationmanager, 8.0.0\n\nRecommendation:\n\nsystem.configuration.configurationmanager 9.0.0-preview.7.24405.7"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Blazor.Tools.csproj",
            "snippet": "system.configuration.configurationmanager, 8.0.0\n\nRecommendation:\n\nsystem.configuration.configurationmanager 9.0.0-preview.7.24405.7",
            "protectedSnippet": "system.configuration.configurationmanager, 8.0.0\n\nRecommendation:\n\nsystem.configuration.configurationmanager 9.0.0-preview.7.24405.7",
            "label": "system.configuration.configurationmanager 8.0.0"
          }
        },
        {
          "incidentId": "1ab9fce0-1bec-46ba-bfc4-3eefec703f5b",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Diagnostics.EntityFrameworkCore 9.0.0-preview.7.24406.2",
              "protected": "Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Diagnostics.EntityFrameworkCore 9.0.0-preview.7.24406.2"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Blazor.Tools.csproj",
            "snippet": "Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Diagnostics.EntityFrameworkCore 9.0.0-preview.7.24406.2",
            "protectedSnippet": "Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore, 8.0.8\n\nRecommendation:\n\nMicrosoft.AspNetCore.Diagnostics.EntityFrameworkCore 9.0.0-preview.7.24406.2",
            "label": "Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 8.0.8"
          }
        },
        {
          "incidentId": "8a833240-f3a1-4500-a167-206257aa02f2",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.EntityFrameworkCore.Tools, 8.0.8\n\nRecommendation:\n\nMicrosoft.EntityFrameworkCore.Tools 9.0.0-preview.7.24405.3",
              "protected": "Microsoft.EntityFrameworkCore.Tools, 8.0.8\n\nRecommendation:\n\nMicrosoft.EntityFrameworkCore.Tools 9.0.0-preview.7.24405.3"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Blazor.Tools.csproj",
            "snippet": "Microsoft.EntityFrameworkCore.Tools, 8.0.8\n\nRecommendation:\n\nMicrosoft.EntityFrameworkCore.Tools 9.0.0-preview.7.24405.3",
            "protectedSnippet": "Microsoft.EntityFrameworkCore.Tools, 8.0.8\n\nRecommendation:\n\nMicrosoft.EntityFrameworkCore.Tools 9.0.0-preview.7.24405.3",
            "label": "Microsoft.EntityFrameworkCore.Tools 8.0.8"
          }
        },
        {
          "incidentId": "ac80ce4c-581c-40e6-8d91-c2f14a1df4c4",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Blazor.Tools.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        },
        {
          "incidentId": "2ae67ff5-0094-40b5-a7ea-0f9374cba62f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "70de726a-90a4-423c-9b39-0999f8e24359",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options.#ctor"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options.#ctor",
            "label": "M:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options.#ctor",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lbfgsmaximumentropymulticlasstrainer.options.options",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "7be9b1a5-ca70-4479-98f0-50abff64a2d5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer",
            "label": "T:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lbfgsmaximumentropymulticlasstrainer",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "b1bdf7c4-eb80-472b-b06c-4bc4e5d9262c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "f6c8d284-8873-4fc9-adf5-f68131bd6a54",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "0750e3e0-bc04-471c-98ae-4ae0694cb456",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "b8293139-c621-40be-aeb5-93793c4f537a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "protected override void BuildTargetModel(ModelBuilder modelBuilder)",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "protected override void BuildTargetModel(ModelBuilder modelBuilder)",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 18,
            "column": 8
          }
        },
        {
          "incidentId": "8bd97379-a604-4839-8299-e3cc7667865c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "0924aaf9-3acc-4935-a346-3bc5186f6b2c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "025e0071-3ae7-4ef9-97c5-3237f6fd690a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "04ac7891-69a3-4673-93e2-d1ee9115eb03",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "36e4d44a-35e3-4db0-842d-04d8d8ad7577",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "f946b94f-1f34-466c-bab9-3e912d6488d3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 203,
            "column": 20
          }
        },
        {
          "incidentId": "0b1f7572-153e-4705-92bb-81847907f579",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 199,
            "column": 20
          }
        },
        {
          "incidentId": "2e0cbdf1-5740-4ca3-8377-7ce6430550ad",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 188,
            "column": 20
          }
        },
        {
          "incidentId": "38c20cde-8211-4ef4-b53a-5fa4d8d772ea",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 144,
            "column": 12
          }
        },
        {
          "incidentId": "b3947bc4-cc5e-45fa-a5f6-ebc9555a6e45",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 141,
            "column": 20
          }
        },
        {
          "incidentId": "7ab7d68d-9aec-444a-9f1a-b6c250da813d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 20
          }
        },
        {
          "incidentId": "377e7a67-f001-48dc-8359-d569381d3790",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 20
          }
        },
        {
          "incidentId": "0d4ea022-28ae-4659-b4de-53f3de226768",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.hasannotation",
                "isCustom": false
              }
            ],
            "line": 21,
            "column": 12
          }
        },
        {
          "incidentId": "85729177-e4a4-4127-868d-ed2203e7a987",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Migration",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.Migration"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "Migration",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.Migration",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.Migration",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migration",
                "isCustom": false
              }
            ],
            "line": 14,
            "column": 5
          }
        },
        {
          "incidentId": "f2f83283-bf22-471f-88a9-6fa7ff3b3353",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "a60d8ab1-b4c8-4152-b3b9-e8fdebb2fdbf",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "b553cbed-6c2b-45d5-8029-cc65de4f60ca",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "01c83994-a4c2-4815-8838-1d4c29880bd0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "1159639d-7786-46b1-8a64-2cd2c8954272",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "aa8e440b-e1b8-4825-bc78-8e9d8f36552a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "622d2ead-7dd8-4632-8ff5-275b504e326f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 196,
            "column": 20
          }
        },
        {
          "incidentId": "5179b6af-9915-4bd6-b80d-9046727e2276",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 181,
            "column": 20
          }
        },
        {
          "incidentId": "fc7a4b91-adfb-41e6-b67a-25d61c263b81",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 149,
            "column": 20
          }
        },
        {
          "incidentId": "a0ad95e0-c103-40a6-aaba-71f60aab99b7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 20
          }
        },
        {
          "incidentId": "a1d869d3-c7dc-461b-b914-8b9b414a0a42",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 143,
            "column": 20
          }
        },
        {
          "incidentId": "fa5cd712-1ce5-4f0f-8607-a75d86b05274",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 141,
            "column": 12
          }
        },
        {
          "incidentId": "e6155986-fcfd-4401-b3d3-05e533f29fb3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 138,
            "column": 20
          }
        },
        {
          "incidentId": "7064848e-2a76-4e72-b3bb-ce8330374a13",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 118,
            "column": 20
          }
        },
        {
          "incidentId": "2c16dad4-fd51-4c51-8148-b0ac55d9bc99",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 69,
            "column": 20
          }
        },
        {
          "incidentId": "443b9fec-662d-495f-8018-72ab9ee61027",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 36,
            "column": 20
          }
        },
        {
          "incidentId": "4f015e4d-4e07-46de-83a9-b3a72e4e9bb0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Services.AddDbContext\u003CApplicationDbContext\u003E(options =\u003E\r\n            options.UseSqlServer(connectionString));",
              "protected": "M:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddDbContext\u0060\u00601(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder},Microsoft.Extensions.DependencyInjection.ServiceLifetime,Microsoft.Extensions.DependencyInjection.ServiceLifetime)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Program.cs",
            "snippet": "builder.Services.AddDbContext\u003CApplicationDbContext\u003E(options =\u003E\r\n            options.UseSqlServer(connectionString));",
            "protectedSnippet": "M:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddDbContext\u0060\u00601(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder},Microsoft.Extensions.DependencyInjection.ServiceLifetime,Microsoft.Extensions.DependencyInjection.ServiceLifetime)",
            "label": "M:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddDbContext\u0060\u00601(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder},Microsoft.Extensions.DependencyInjection.ServiceLifetime,Microsoft.Extensions.DependencyInjection.ServiceLifetime)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.entityframeworkservicecollectionextensions.adddbcontext",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 8
          }
        },
        {
          "incidentId": "8172212d-fac9-4146-8b36-ba7a03359adb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.StandardTrainersCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.StandardTrainersCatalog",
            "label": "T:Microsoft.ML.StandardTrainersCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "e27ef025-8b8b-4298-9a0e-1a9be4b7d7be",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 75,
            "column": 8
          }
        },
        {
          "incidentId": "62be8630-0e11-4ef1-9b29-e2580c52197f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 57,
            "column": 8
          }
        },
        {
          "incidentId": "085ce431-7da7-407d-ab8a-4ed98dbcdf70",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Migration(\u002200000000000000_CreateIdentitySchema\u0022)",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.MigrationAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "Migration(\u002200000000000000_CreateIdentitySchema\u0022)",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.MigrationAttribute",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.MigrationAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationattribute",
                "isCustom": false
              }
            ],
            "line": 14,
            "column": 5
          }
        },
        {
          "incidentId": "df4ebfb0-832e-4e87-a987-78f747e3ec17",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "protected override void Down(MigrationBuilder migrationBuilder)",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "protected override void Down(MigrationBuilder migrationBuilder)",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder",
                "isCustom": false
              }
            ],
            "line": 199,
            "column": 8
          }
        },
        {
          "incidentId": "2dac1cb1-3040-45d0-9413-95f4958426dd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetUsers\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetUsers\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.droptable",
                "isCustom": false
              }
            ],
            "line": 219,
            "column": 12
          }
        },
        {
          "incidentId": "936d48f4-67ab-4e57-b087-c97227b83fd1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetUserRoles\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetUserRoles\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.droptable",
                "isCustom": false
              }
            ],
            "line": 210,
            "column": 12
          }
        },
        {
          "incidentId": "18d95482-1844-40eb-ad38-675240383a21",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetUserLogins\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetUserLogins\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.droptable",
                "isCustom": false
              }
            ],
            "line": 207,
            "column": 12
          }
        },
        {
          "incidentId": "87695695-7933-462c-bea2-64470c933b2c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateIndex(\r\n                name: \u0022EmailIndex\u0022,\r\n                table: \u0022AspNetUsers\u0022,\r\n                column: \u0022NormalizedEmail\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateIndex(\r\n                name: \u0022EmailIndex\u0022,\r\n                table: \u0022AspNetUsers\u0022,\r\n                column: \u0022NormalizedEmail\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.createindex",
                "isCustom": false
              }
            ],
            "line": 185,
            "column": 12
          }
        },
        {
          "incidentId": "f9a11ea3-b516-425b-903d-fde233dd58db",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 124,
            "column": 20
          }
        },
        {
          "incidentId": "1689d427-9f81-4759-8061-416b5f9ef3cc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 106,
            "column": 20
          }
        },
        {
          "incidentId": "635253ba-2f2b-40d7-a58e-7ce5237b6557",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoles\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoles\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 12
          }
        },
        {
          "incidentId": "ec78432d-eb6c-4d87-b822-e86a8ed0d13d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoles\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoles\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 12
          }
        },
        {
          "incidentId": "aec22db0-8e91-4782-a3c2-9cd21525674e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "e450251b-d976-495e-928c-84f1d14ce959",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "119b525b-d921-4005-8909-c954068360b8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "0f419cd7-58e7-48f4-9f3e-e7be05bb2b3d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "63fb88f2-5d05-442e-aefa-09f41e7cf0b6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "6ee45a0b-ef79-4530-9d3e-ba42db915268",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 217,
            "column": 20
          }
        },
        {
          "incidentId": "5c04564e-f5d6-42ac-a844-5eb48dfb2b0a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 206,
            "column": 12
          }
        },
        {
          "incidentId": "a36661a7-33f9-4229-a726-299ff35a338a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 191,
            "column": 12
          }
        },
        {
          "incidentId": "2aca49b3-ab94-49d2-9c81-098a2da9151f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022UserId\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022UserId\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 164,
            "column": 20
          }
        },
        {
          "incidentId": "5132e9ec-1cd1-439a-95ee-abca030b4df9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 152,
            "column": 20
          }
        },
        {
          "incidentId": "4cbf4bd6-33ce-4fdc-aadb-ba64c7537f49",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 141,
            "column": 20
          }
        },
        {
          "incidentId": "01388e12-fb54-4fae-a2a9-0c3d05117649",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 89,
            "column": 20
          }
        },
        {
          "incidentId": "65543b1a-189d-48f3-9166-8746efce7815",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 20
          }
        },
        {
          "incidentId": "b724a9f0-5c15-4867-816d-6d309eb1dac4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 60,
            "column": 20
          }
        },
        {
          "incidentId": "3698f7e0-f7b6-460d-852b-b89d5f1a8a02",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 20
          }
        },
        {
          "incidentId": "6fe7a448-283b-4603-a3a6-3749dbbac969",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 264,
            "column": 12
          }
        },
        {
          "incidentId": "367d1c8f-04c7-433b-9085-8089ac5c9f9b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "b40302b6-5260-418f-a6a1-29a36f18b1ee",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "ea17fb2c-9b6d-4ee2-ba43-b2cfdd599fbc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "1b4c856b-77d1-414b-8ab5-4f8b32ff931e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 240,
            "column": 12
          }
        },
        {
          "incidentId": "3389e020-e6b3-442b-a6d9-c61d2ea43445",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "f25b601b-4d70-405f-bdd7-6dffed0da9b3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 219,
            "column": 20
          }
        },
        {
          "incidentId": "700a26f1-7a0d-4ea3-9baf-238458b7746f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 211,
            "column": 20
          }
        },
        {
          "incidentId": "b7a65aee-ccca-47b1-9014-20e601150755",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 185,
            "column": 20
          }
        },
        {
          "incidentId": "96470847-0ba5-41b2-843e-82e593d1e352",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 174,
            "column": 20
          }
        },
        {
          "incidentId": "ba3c07ae-fa3e-4655-ba2a-05050c335338",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 147,
            "column": 20
          }
        },
        {
          "incidentId": "835195c2-c631-445e-9751-30ccfc664470",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder.isunique",
                "isCustom": false
              }
            ],
            "line": 108,
            "column": 20
          }
        },
        {
          "incidentId": "21b41f74-94ca-4403-8933-aee8396a4d43",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions.hasdatabasename",
                "isCustom": false
              }
            ],
            "line": 108,
            "column": 20
          }
        },
        {
          "incidentId": "4582d647-f824-4989-b6b8-c448c3b6711e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions.hasfilter",
                "isCustom": false
              }
            ],
            "line": 108,
            "column": 20
          }
        },
        {
          "incidentId": "cb197241-f6d9-46cb-950a-d09035422afa",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 43,
            "column": 20
          }
        },
        {
          "incidentId": "0171e486-114c-4565-b842-ca6e03b1c70c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 18,
            "column": 12
          }
        },
        {
          "incidentId": "718af276-c111-4f26-a6d1-11fef74ebd01",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.hasannotation",
                "isCustom": false
              }
            ],
            "line": 18,
            "column": 12
          }
        },
        {
          "incidentId": "f63ee955-3479-48ec-8bfc-e674aa787280",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.SqlServer, 8.0.6.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Services.AddDbContext\u003CApplicationDbContext\u003E(options =\u003E\r\n            options.UseSqlServer(connectionString));",
              "protected": "T:Microsoft.EntityFrameworkCore.SqlServerDbContextOptionsExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Program.cs",
            "snippet": "builder.Services.AddDbContext\u003CApplicationDbContext\u003E(options =\u003E\r\n            options.UseSqlServer(connectionString));",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.SqlServerDbContextOptionsExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.SqlServerDbContextOptionsExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.sqlserverdbcontextoptionsextensions",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 8
          }
        },
        {
          "incidentId": "036a30f8-4ad5-4a3a-b9c7-3e765ff74151",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Services.AddDbContext\u003CApplicationDbContext\u003E(options =\u003E\r\n            options.UseSqlServer(connectionString));",
              "protected": "T:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Program.cs",
            "snippet": "builder.Services.AddDbContext\u003CApplicationDbContext\u003E(options =\u003E\r\n            options.UseSqlServer(connectionString));",
            "protectedSnippet": "T:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions",
            "label": "T:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.entityframeworkservicecollectionextensions",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 8
          }
        },
        {
          "incidentId": "ad14bdcc-c025-4532-a12f-81c76910d6b7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.TrainerInputBaseWithLabel.LabelColumnName"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.TrainerInputBaseWithLabel.LabelColumnName",
            "label": "F:Microsoft.ML.Trainers.TrainerInputBaseWithLabel.LabelColumnName",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.trainerinputbasewithlabel.labelcolumnname",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "4142661d-928a-4772-9687-3a6dc8d46dbe",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers",
            "label": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog.multiclassclassificationtrainers",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "d911d000-7d8e-47ef-b7e5-1c8f7e1b03e8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Conversion"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "label": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversion",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "5676348f-705f-442d-9391-bee0512d3e9e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "label": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "eeada99b-8c6a-4614-b3d7-8dc9fee12028",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "label": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog.loadfromtextfile",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 12
          }
        },
        {
          "incidentId": "9f64e486-ec0c-4c59-a166-6b55eb9f8a77",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var model = RetrainModel(mlContext, data);",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var model = RetrainModel(mlContext, data);",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 12
          }
        },
        {
          "incidentId": "7e19cc31-6d68-45f9-b599-6f7795a95353",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 29,
            "column": 12
          }
        },
        {
          "incidentId": "e11c9368-e075-49cc-8d3b-a59e0b852f38",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetUserTokens\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetUserTokens\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.droptable",
                "isCustom": false
              }
            ],
            "line": 213,
            "column": 12
          }
        },
        {
          "incidentId": "1c92925d-0f5a-47a8-bfb3-2d562a9eb8d7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetUserClaims\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetUserClaims\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.droptable",
                "isCustom": false
              }
            ],
            "line": 204,
            "column": 12
          }
        },
        {
          "incidentId": "caef95d6-e32a-4d5d-b07c-1bb6c6d358b4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 130,
            "column": 20
          }
        },
        {
          "incidentId": "ed780090-02df-403b-8696-f5a81d4325ff",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "a02a0cda-1e6d-4b93-aa7d-39181984a91d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "35e3da19-11a1-4f25-aff5-51cff0a55e86",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "80de2d6a-89f7-491b-b252-e04997916a80",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "cf553b4b-3c18-4923-a2c2-d1beec0c5aa2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 217,
            "column": 20
          }
        },
        {
          "incidentId": "23f36ebf-b6be-4882-bd4c-1c25bc5e3e37",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 208,
            "column": 20
          }
        },
        {
          "incidentId": "d4cb10b6-16ab-4c24-80cc-862594b390bd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 121,
            "column": 20
          }
        },
        {
          "incidentId": "0597ce63-3068-4557-a02d-809ff0d2f08e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 121,
            "column": 20
          }
        },
        {
          "incidentId": "8e0f16fc-29f9-4a46-8951-a0d443d01067",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 101,
            "column": 20
          }
        },
        {
          "incidentId": "8e9bbbb5-7642-40e3-858f-eb86413b2a2d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 20
          }
        },
        {
          "incidentId": "837fe33e-235c-4319-b6c6-cabd8818db6c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.SqlServer, 8.0.6.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
              "protected": "M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder,System.Int64,System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder,System.Int64,System.Int32)",
            "label": "M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder,System.Int64,System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.sqlservermodelbuilderextensions.useidentitycolumns",
                "isCustom": false
              }
            ],
            "line": 25,
            "column": 12
          }
        },
        {
          "incidentId": "f2f80284-67bb-43cd-b8b0-ba31b16f01eb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "a5ebf85c-fd26-4ac0-8ef3-ce3cd7161bf9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "51d4df65-9a72-44a6-b2ec-4597cdcd395b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 193,
            "column": 20
          }
        },
        {
          "incidentId": "fe0ac997-5286-461d-990a-82d10e1c062a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 188,
            "column": 12
          }
        },
        {
          "incidentId": "daccd87e-ae33-4bf0-81b3-e61d4705109d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 185,
            "column": 20
          }
        },
        {
          "incidentId": "e9ffe102-d1df-4726-ad20-f5e28e1863bb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 168,
            "column": 20
          }
        },
        {
          "incidentId": "43a999ef-fb1d-464d-a5a2-6505fd45442a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 134,
            "column": 20
          }
        },
        {
          "incidentId": "79435850-ffe5-4e3a-bf64-d6dbec3e6a3f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 108,
            "column": 20
          }
        },
        {
          "incidentId": "2782492b-de95-442f-8022-db26e4a48533",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 106,
            "column": 20
          }
        },
        {
          "incidentId": "ee2b1602-83a1-4d3a-92ae-946f7b47f660",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 98,
            "column": 20
          }
        },
        {
          "incidentId": "9117eb62-772b-4dc3-b10e-c1c412f911a1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Blazor.Tools.Data.ApplicationUser\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUsers\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Blazor.Tools.Data.ApplicationUser\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUsers\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 24,
            "column": 12
          }
        },
        {
          "incidentId": "6b3f4acc-88a8-44ba-8ae6-b43101e6a790",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.SqlServer, 8.0.6.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
              "protected": "M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder,System.Int64,System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder,System.Int64,System.Int32)",
            "label": "M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder,System.Int64,System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.sqlservermodelbuilderextensions.useidentitycolumns",
                "isCustom": false
              }
            ],
            "line": 22,
            "column": 12
          }
        },
        {
          "incidentId": "c216bcb6-8b7d-4b55-bc06-759fc47768a2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore, 9.0.0-preview.6.24281.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "app.UseMigrationsEndPoint();",
              "protected": "T:Microsoft.AspNetCore.Builder.MigrationsEndPointExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Program.cs",
            "snippet": "app.UseMigrationsEndPoint();",
            "protectedSnippet": "T:Microsoft.AspNetCore.Builder.MigrationsEndPointExtensions",
            "label": "T:Microsoft.AspNetCore.Builder.MigrationsEndPointExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder.migrationsendpointextensions",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "c5aad9da-a559-44a8-940a-10c8b817fb04",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.SqlServer, 8.0.6.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Services.AddDbContext\u003CApplicationDbContext\u003E(options =\u003E\r\n            options.UseSqlServer(connectionString));",
              "protected": "M:Microsoft.EntityFrameworkCore.SqlServerDbContextOptionsExtensions.UseSqlServer(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDbContextOptionsBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Program.cs",
            "snippet": "builder.Services.AddDbContext\u003CApplicationDbContext\u003E(options =\u003E\r\n            options.UseSqlServer(connectionString));",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.SqlServerDbContextOptionsExtensions.UseSqlServer(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDbContextOptionsBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.SqlServerDbContextOptionsExtensions.UseSqlServer(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.SqlServerDbContextOptionsBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.sqlserverdbcontextoptionsextensions.usesqlserver",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 8
          }
        },
        {
          "incidentId": "8987eae4-bc09-4663-9ba9-bdb4e4224d04",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Services.AddDbContext\u003CApplicationDbContext\u003E(options =\u003E\r\n            options.UseSqlServer(connectionString));",
              "protected": "T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Program.cs",
            "snippet": "builder.Services.AddDbContext\u003CApplicationDbContext\u003E(options =\u003E\r\n            options.UseSqlServer(connectionString));",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontextoptionsbuilder",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 8
          }
        },
        {
          "incidentId": "a93db7c4-4e0d-49dc-b27d-b9d3f8c0ef77",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore, 9.0.0-preview.6.24281.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Services.AddDatabaseDeveloperPageExceptionFilter();",
              "protected": "M:Microsoft.Extensions.DependencyInjection.DatabaseDeveloperPageExceptionFilterServiceExtensions.AddDatabaseDeveloperPageExceptionFilter(Microsoft.Extensions.DependencyInjection.IServiceCollection)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Program.cs",
            "snippet": "builder.Services.AddDatabaseDeveloperPageExceptionFilter();",
            "protectedSnippet": "M:Microsoft.Extensions.DependencyInjection.DatabaseDeveloperPageExceptionFilterServiceExtensions.AddDatabaseDeveloperPageExceptionFilter(Microsoft.Extensions.DependencyInjection.IServiceCollection)",
            "label": "M:Microsoft.Extensions.DependencyInjection.DatabaseDeveloperPageExceptionFilterServiceExtensions.AddDatabaseDeveloperPageExceptionFilter(Microsoft.Extensions.DependencyInjection.IServiceCollection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.databasedeveloperpageexceptionfilterserviceextensions.adddatabasedeveloperpageexceptionfilter",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 8
          }
        },
        {
          "incidentId": "96c87f61-af91-47f5-8f5d-6fc9e97682bb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore, 9.0.0-preview.6.24281.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "app.UseMigrationsEndPoint();",
              "protected": "M:Microsoft.AspNetCore.Builder.MigrationsEndPointExtensions.UseMigrationsEndPoint(Microsoft.AspNetCore.Builder.IApplicationBuilder)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Program.cs",
            "snippet": "app.UseMigrationsEndPoint();",
            "protectedSnippet": "M:Microsoft.AspNetCore.Builder.MigrationsEndPointExtensions.UseMigrationsEndPoint(Microsoft.AspNetCore.Builder.IApplicationBuilder)",
            "label": "M:Microsoft.AspNetCore.Builder.MigrationsEndPointExtensions.UseMigrationsEndPoint(Microsoft.AspNetCore.Builder.IApplicationBuilder)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder.migrationsendpointextensions.usemigrationsendpoint",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "f421c928-4841-4cc6-913e-645e9544b849",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore, 9.0.0-preview.6.24281.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Services.AddDatabaseDeveloperPageExceptionFilter();",
              "protected": "T:Microsoft.Extensions.DependencyInjection.DatabaseDeveloperPageExceptionFilterServiceExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Program.cs",
            "snippet": "builder.Services.AddDatabaseDeveloperPageExceptionFilter();",
            "protectedSnippet": "T:Microsoft.Extensions.DependencyInjection.DatabaseDeveloperPageExceptionFilterServiceExtensions",
            "label": "T:Microsoft.Extensions.DependencyInjection.DatabaseDeveloperPageExceptionFilterServiceExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.databasedeveloperpageexceptionfilterserviceextensions",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 8
          }
        },
        {
          "incidentId": "ffe72a3b-a185-464e-bb03-5cafc8187b2b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.AspNetCore.Identity.EntityFrameworkCore, 9.0.0-preview.6.24281.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Services.AddIdentityCore\u003CApplicationUser\u003E(options =\u003E options.SignIn.RequireConfirmedAccount = true)\r\n            .AddEntityFrameworkStores\u003CApplicationDbContext\u003E()\r\n            .AddSignInManager()\r\n            .AddDefaultTokenProviders();",
              "protected": "M:Microsoft.Extensions.DependencyInjection.IdentityEntityFrameworkBuilderExtensions.AddEntityFrameworkStores\u0060\u00601(Microsoft.AspNetCore.Identity.IdentityBuilder)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Program.cs",
            "snippet": "builder.Services.AddIdentityCore\u003CApplicationUser\u003E(options =\u003E options.SignIn.RequireConfirmedAccount = true)\r\n            .AddEntityFrameworkStores\u003CApplicationDbContext\u003E()\r\n            .AddSignInManager()\r\n            .AddDefaultTokenProviders();",
            "protectedSnippet": "M:Microsoft.Extensions.DependencyInjection.IdentityEntityFrameworkBuilderExtensions.AddEntityFrameworkStores\u0060\u00601(Microsoft.AspNetCore.Identity.IdentityBuilder)",
            "label": "M:Microsoft.Extensions.DependencyInjection.IdentityEntityFrameworkBuilderExtensions.AddEntityFrameworkStores\u0060\u00601(Microsoft.AspNetCore.Identity.IdentityBuilder)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.identityentityframeworkbuilderextensions.addentityframeworkstores",
                "isCustom": false
              }
            ],
            "line": 65,
            "column": 8
          }
        },
        {
          "incidentId": "dcc9fae4-a443-423a-b5d4-afb594ab33af",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.AspNetCore.Identity.EntityFrameworkCore, 9.0.0-preview.6.24281.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Services.AddIdentityCore\u003CApplicationUser\u003E(options =\u003E options.SignIn.RequireConfirmedAccount = true)\r\n            .AddEntityFrameworkStores\u003CApplicationDbContext\u003E()\r\n            .AddSignInManager()\r\n            .AddDefaultTokenProviders();",
              "protected": "T:Microsoft.Extensions.DependencyInjection.IdentityEntityFrameworkBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Program.cs",
            "snippet": "builder.Services.AddIdentityCore\u003CApplicationUser\u003E(options =\u003E options.SignIn.RequireConfirmedAccount = true)\r\n            .AddEntityFrameworkStores\u003CApplicationDbContext\u003E()\r\n            .AddSignInManager()\r\n            .AddDefaultTokenProviders();",
            "protectedSnippet": "T:Microsoft.Extensions.DependencyInjection.IdentityEntityFrameworkBuilderExtensions",
            "label": "T:Microsoft.Extensions.DependencyInjection.IdentityEntityFrameworkBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.identityentityframeworkbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 65,
            "column": 8
          }
        },
        {
          "incidentId": "1ea580ac-9c89-487c-99e7-fa449367e309",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "T:Microsoft.ML.PermutationFeatureImportanceExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "T:Microsoft.ML.PermutationFeatureImportanceExtensions",
            "label": "T:Microsoft.ML.PermutationFeatureImportanceExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.permutationfeatureimportanceextensions",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "1191d23a-a8aa-4bda-a602-b9a491233938",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 12
          }
        },
        {
          "incidentId": "87a44ed4-3d8e-462f-a556-6f1255ec038b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversiontransforms",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "27ca3e95-52c8-426d-9ffb-9db97e1d559a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "b1452767-11dc-4dcd-ba6d-5bbfbec87f0d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetRoleClaims\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetRoleClaims\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.droptable",
                "isCustom": false
              }
            ],
            "line": 201,
            "column": 12
          }
        },
        {
          "incidentId": "26d4959d-64e5-4bd2-a5ee-57818af1b7d8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserTokens\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Value = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserTokens\u0022, x =\u003E new { x.UserId, x.LoginProvider, x.Name });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserTokens\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Value = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserTokens\u0022, x =\u003E new { x.UserId, x.LoginProvider, x.Name });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 138,
            "column": 12
          }
        },
        {
          "incidentId": "54fa5267-330d-482c-990c-6896918b60f5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction.cascade",
                "isCustom": false
              }
            ],
            "line": 106,
            "column": 20
          }
        },
        {
          "incidentId": "fabbcc68-a605-4303-9031-fa3c2bd1cd1e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 12
          }
        },
        {
          "incidentId": "2bd66dec-84d6-4a29-a6df-f48519f4839d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 12
          }
        },
        {
          "incidentId": "a4be8359-0492-41cb-b82e-cdbcede7158c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction.cascade",
                "isCustom": false
              }
            ],
            "line": 65,
            "column": 20
          }
        },
        {
          "incidentId": "5300c03b-377b-4981-9363-65c0998be90a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "53cf5648-8083-4f88-8314-f5787da087a5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 267,
            "column": 12
          }
        },
        {
          "incidentId": "64de11c7-93a5-4fc4-8071-9e11c9c1916a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "0276f48d-8995-4df9-bae3-b7529721a52f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "5a925ca5-4841-40c1-b26b-b27d7df901d4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "289497e4-9acf-4155-9edb-3a500417b655",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "d5a8f05b-7e97-4ff2-a6a3-32db19fc1e62",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "b7997fea-4b42-4e8f-85c1-7b702adc9efa",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "789a85cb-1dba-425b-917b-b5be795615b4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 220,
            "column": 20
          }
        },
        {
          "incidentId": "6bceedc3-ca67-42ee-9035-04497c8e34d5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 180,
            "column": 20
          }
        },
        {
          "incidentId": "f4d9fde5-a9de-44af-8f5a-c917e06c8c11",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 166,
            "column": 20
          }
        },
        {
          "incidentId": "3dab757b-c832-45ae-aa78-d82c3090205d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 155,
            "column": 20
          }
        },
        {
          "incidentId": "28dce1aa-3669-46a8-824e-d164f1e4c878",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 144,
            "column": 12
          }
        },
        {
          "incidentId": "37d9c8bf-65ce-4bf9-96d0-5f20ec8f3daa",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 111,
            "column": 20
          }
        },
        {
          "incidentId": "5d57dcd3-c83e-4ed8-bc37-1766fac32113",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 69,
            "column": 20
          }
        },
        {
          "incidentId": "e90c0be6-dd4c-4581-aeca-cf7177e250df",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 52,
            "column": 20
          }
        },
        {
          "incidentId": "5478c927-1792-4c97-8c7d-e3a6a0038d3c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.hasannotation",
                "isCustom": false
              }
            ],
            "line": 21,
            "column": 12
          }
        },
        {
          "incidentId": "a84aa336-e383-46c1-b1e7-f2664d6e7d5d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 264,
            "column": 12
          }
        },
        {
          "incidentId": "da5976fc-3563-483d-a6f7-b31396871046",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "c45ddc4d-0b22-4e3e-8560-86e97452a875",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "2b8e8a12-e02f-4235-bac8-dd96ca0d7fe6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 231,
            "column": 12
          }
        },
        {
          "incidentId": "f5c92110-06f8-45e7-99bb-ff9c4968e792",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "07006845-9de5-4b1d-a945-34e4529ba23a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "58068c83-e61e-4676-b4c8-5c6459584e73",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 163,
            "column": 20
          }
        },
        {
          "incidentId": "2cfaceb9-67c4-4a61-9366-0770c1b91b4f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 159,
            "column": 20
          }
        },
        {
          "incidentId": "57330a40-32ff-4322-849b-20ecf7c4259c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 152,
            "column": 20
          }
        },
        {
          "incidentId": "04513187-3c90-417f-a296-68f0204104b6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 127,
            "column": 20
          }
        },
        {
          "incidentId": "7e49c721-a5f1-460c-9b02-a2723fda2d31",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 124,
            "column": 20
          }
        },
        {
          "incidentId": "7df849c1-f69c-409a-b6fa-68ad38016510",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 12
          }
        },
        {
          "incidentId": "5d06b12b-4bdc-40cc-87c1-075deca07fa9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 106,
            "column": 20
          }
        },
        {
          "incidentId": "acf16037-6995-4cf7-a0e1-5dc41aa5481d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 20
          }
        },
        {
          "incidentId": "9bea1ca6-5bd6-45a2-9420-8441cb02567f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 53,
            "column": 20
          }
        },
        {
          "incidentId": "c83b0c0d-b0f4-448c-92b3-d760e5119b83",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 29,
            "column": 20
          }
        },
        {
          "incidentId": "6b530637-33ff-4339-b520-4a38542797cf",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 26,
            "column": 20
          }
        },
        {
          "incidentId": "3bebaff9-0a55-4e4d-a7cb-7c1fdb6f9802",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ModelSnapshot",
              "protected": "T:Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "ModelSnapshot",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot",
            "label": "T:Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.modelsnapshot",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 54
          }
        },
        {
          "incidentId": "014b81f7-4fda-4f8b-a6a7-f0007dd4315e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "28e22e9b-fcaf-4864-b553-abb3ea0972db",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var schema = PredictEngine.Value.OutputSchema;",
              "protected": "T:Microsoft.ML.DataViewSchema"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "var schema = PredictEngine.Value.OutputSchema;",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema",
            "label": "T:Microsoft.ML.DataViewSchema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema",
                "isCustom": false
              }
            ],
            "line": 108,
            "column": 12
          }
        },
        {
          "incidentId": "341c4e20-2f84-4a1e-8956-59f577938fc7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "8f1622f1-749e-4ac1-bd4d-52661c259149",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TextCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TextCatalog",
            "label": "T:Microsoft.ML.TextCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "bd3da64b-deb3-4e7c-bd16-56d88ef2a551",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var model = pipeline.Fit(trainData);",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var model = pipeline.Fit(trainData);",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 78,
            "column": 12
          }
        },
        {
          "incidentId": "4496b832-5c11-415f-9ecd-82e34aba77f4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "T:Microsoft.ML.DataOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.DataOperationsCatalog",
            "label": "T:Microsoft.ML.DataOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataoperationscatalog",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 12
          }
        },
        {
          "incidentId": "709fc05d-479b-4fc9-93af-38f0ff4aed14",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserLogins\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderKey = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderDisplayName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserLogins\u0022, x =\u003E new { x.LoginProvider, x.ProviderKey });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserLogins\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderKey = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderDisplayName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserLogins\u0022, x =\u003E new { x.LoginProvider, x.ProviderKey });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 12
          }
        },
        {
          "incidentId": "ef1678bf-7396-4cdf-a05a-5dadd8439c90",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserLogins\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderKey = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderDisplayName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserLogins\u0022, x =\u003E new { x.LoginProvider, x.ProviderKey });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserLogins\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderKey = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderDisplayName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserLogins\u0022, x =\u003E new { x.LoginProvider, x.ProviderKey });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 12
          }
        },
        {
          "incidentId": "58288c9f-cda7-44ee-af5f-e17f995fabef",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 86,
            "column": 20
          }
        },
        {
          "incidentId": "392ea2a0-1db6-4f30-9e86-080402b6f8cf",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoles\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoles\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 12
          }
        },
        {
          "incidentId": "344020cf-65c5-448a-9267-b3e825b7c589",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "8c2a0294-06d6-423f-9fe6-857df9c4b97e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "a0d6a36c-19be-4e14-898a-ad7691ac5d96",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 252,
            "column": 12
          }
        },
        {
          "incidentId": "e515f746-a72e-44de-8a58-6d66e135e897",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "24b9da23-1447-4c76-9b4c-167aac122415",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "181cf344-5e40-4541-8cd1-cff77e506a7a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 20
          }
        },
        {
          "incidentId": "782cf95f-0fad-43b9-8451-156b4002d07b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 220,
            "column": 20
          }
        },
        {
          "incidentId": "ff93e3ff-8290-47ce-9e7d-49ec0ec36cc2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 214,
            "column": 20
          }
        },
        {
          "incidentId": "6380cef8-bb6b-4cae-b923-fb662dd2c651",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 196,
            "column": 20
          }
        },
        {
          "incidentId": "9bbee4b7-0317-474e-9992-9d4ceb638254",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 184,
            "column": 20
          }
        },
        {
          "incidentId": "5454e5ca-e226-4fe2-ae2a-e2308e676421",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 133,
            "column": 20
          }
        },
        {
          "incidentId": "9af24420-cdd2-476b-be53-e8f2efce7185",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 127,
            "column": 20
          }
        },
        {
          "incidentId": "71613d5c-5c2f-4b47-ae2c-dbd06f5b073d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 20
          }
        },
        {
          "incidentId": "a99f382a-7734-4d4d-b1be-778aa53d6196",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 111,
            "column": 20
          }
        },
        {
          "incidentId": "4c49af7c-6458-401b-8995-65b0bb694660",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder.isunique",
                "isCustom": false
              }
            ],
            "line": 111,
            "column": 20
          }
        },
        {
          "incidentId": "eff1bd8d-7a2a-4257-a5b4-8a3cbe786d1c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 20
          }
        },
        {
          "incidentId": "62b490ee-29dd-465a-bc0d-5c87d9e7751e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder.isunique",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 20
          }
        },
        {
          "incidentId": "cc9b7425-8c20-4bf4-813e-70180620dfae",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions.hasfilter",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 20
          }
        },
        {
          "incidentId": "85865670-b44b-4dab-8a6a-d0c4b1394ec6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 75,
            "column": 20
          }
        },
        {
          "incidentId": "368d9258-1595-4446-87f4-0181968f186d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 52,
            "column": 20
          }
        },
        {
          "incidentId": "153ca048-86c7-40e3-b91a-c1ffe59891b3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 25,
            "column": 12
          }
        },
        {
          "incidentId": "8b6b99e1-2840-41e4-aa3a-09bb2281dbb0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "cd98f823-6813-4e87-8678-6ee1912ccad6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "02cdbc2d-9061-4b80-a77b-bf9bccff9bb9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "26410c48-a4de-4b90-bf86-74d591245333",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "6549dac9-2ab0-4f19-bd82-1d7e981eed3b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "2c645de6-609e-441f-b66e-05558b0cba35",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022UserId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022UserId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 161,
            "column": 20
          }
        },
        {
          "incidentId": "ec82150c-ed98-4227-b426-8c39e9d1f3ec",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.SqlServer, 8.0.6.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
              "protected": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.sqlserverpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 147,
            "column": 20
          }
        },
        {
          "incidentId": "7df73060-be6e-43fd-8100-024e64019f2b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022RoleId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022RoleId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 136,
            "column": 20
          }
        },
        {
          "incidentId": "52511b1c-6e2f-4b09-a7f7-e01d93f80a2d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "1f592884-9cd5-4f2e-97f0-fb9a48613cb8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ModelSnapshot",
              "protected": "M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.#ctor"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "ModelSnapshot",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.#ctor",
            "label": "M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot.#ctor",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.modelsnapshot.modelsnapshot",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 54
          }
        },
        {
          "incidentId": "c00e08c4-e288-4927-b5f7-5b62b72ba91a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "33e03753-1f9f-46cd-97bc-4647ca0499ba",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.String,Microsoft.ML.DataViewSchema@)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.String,Microsoft.ML.DataViewSchema@)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.String,Microsoft.ML.DataViewSchema@)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.load",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "b24d3767-5abb-40ae-8fae-25e15e52a6b6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options",
            "label": "T:Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lbfgsmaximumentropymulticlasstrainer.options",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "98526a11-17dc-4512-8d77-3c75887abf28",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.MulticlassClassification"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "label": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.multiclassclassification",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "0cfee541-2bb6-440a-9445-03336cd49504",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "4be7b513-778f-48fa-bb3e-9ddd76204d32",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "66322007-af66-4daf-a841-1242c804dac5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "26c36c1a-0593-4eb1-b50f-9f103ff9ca7f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "2187b1ea-d7ec-4d97-98e3-de3d57d989a6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "d72b9870-b6da-4f8d-b4a3-ecbf5063dcfe",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 211,
            "column": 20
          }
        },
        {
          "incidentId": "fc27be99-b06b-4f04-8b36-0a93e4398fdb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 196,
            "column": 20
          }
        },
        {
          "incidentId": "e465e77b-c0d5-45a8-9d1f-630a77a9fcdb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 162,
            "column": 20
          }
        },
        {
          "incidentId": "8c7d595a-9880-4643-bfa0-e8dba3310031",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 130,
            "column": 20
          }
        },
        {
          "incidentId": "399d8747-17d6-4e61-8b60-6190c4cb2774",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "de1c6300-9686-4c03-8dd5-f179585a041f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 20
          }
        },
        {
          "incidentId": "8cc691e6-405f-42ac-b385-cbe1889fe16f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 20
          }
        },
        {
          "incidentId": "0c35c48b-1110-4e80-aec2-227ca5a8314e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "bb4d1135-7856-4c4a-a939-400860bcf455",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "6cdf14a5-8670-4ba6-99e5-cbbbb6f1236a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "bb49b44c-f97b-4cd8-b228-f929f4a69805",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "14572d90-5561-4124-b515-ab07c78d120b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "f9100cec-bb79-4bf3-8ac8-81ec188e8228",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022RoleId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022RoleId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 198,
            "column": 20
          }
        },
        {
          "incidentId": "0d3e6611-c7ba-4c6f-81e8-a3765191d45d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 177,
            "column": 20
          }
        },
        {
          "incidentId": "d464f373-9117-4427-91d7-967f8fc4f872",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 138,
            "column": 20
          }
        },
        {
          "incidentId": "4e7a9b1f-2ead-49f2-a481-69aacdf9f374",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 124,
            "column": 20
          }
        },
        {
          "incidentId": "91fbc5dc-ce57-4560-a13b-5978376ea30a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.SqlServer, 8.0.6.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
              "protected": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.sqlserverpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 122,
            "column": 20
          }
        },
        {
          "incidentId": "d24fb27f-9bc5-4821-afcf-404017b2ee83",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 108,
            "column": 20
          }
        },
        {
          "incidentId": "f84daec5-0d91-4ba7-8bcf-a0f2e79cbf59",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 108,
            "column": 20
          }
        },
        {
          "incidentId": "32304be3-e396-4ed4-aec9-53c50afceb35",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 102,
            "column": 20
          }
        },
        {
          "incidentId": "63ae1258-a586-4818-bc8f-f38d2c18eced",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "e178d677-f4a3-4460-b221-2bb6c60cc9d3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "b64ce0bb-04c8-4831-a3aa-8d64f0e3d148",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 20
          }
        },
        {
          "incidentId": "03aaff8f-a192-4783-ac82-5dff907b4a55",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 53,
            "column": 20
          }
        },
        {
          "incidentId": "975c8b51-031f-45f4-983a-7a5938e45534",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 20
          }
        },
        {
          "incidentId": "fb839371-a1b0-47c1-b65a-3103b1b3b731",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 20
          }
        },
        {
          "incidentId": "6e409f75-cf17-4d62-ac1e-8ada0ce493cd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 29,
            "column": 20
          }
        },
        {
          "incidentId": "f9c0858f-b265-41dd-9da8-9b067d7a2ee5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 18,
            "column": 12
          }
        },
        {
          "incidentId": "0dfb105f-7a51-45c8-ae8b-af0f38b4bfed",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 8
          }
        },
        {
          "incidentId": "a4cac48d-cc8f-47f5-8873-67e06072e9ac",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
              "protected": "P:Microsoft.ML.Data.MetricStatistics.Mean"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
            "protectedSnippet": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "label": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics.mean",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 16
          }
        },
        {
          "incidentId": "db6d9d29-3952-49ef-ab9f-18a4b290f299",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedTrainData = model.Transform(trainData);",
              "protected": "M:Microsoft.ML.ITransformer.Transform(Microsoft.ML.IDataView)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var preprocessedTrainData = model.Transform(trainData);",
            "protectedSnippet": "M:Microsoft.ML.ITransformer.Transform(Microsoft.ML.IDataView)",
            "label": "M:Microsoft.ML.ITransformer.Transform(Microsoft.ML.IDataView)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer.transform",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 12
          }
        },
        {
          "incidentId": "a2e8d53f-7265-45bb-a131-324b3f0da57c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.ConversionsExtensionsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "label": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "d220f20b-7ba7-4452-813b-955b0992bcd3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.StandardTrainersCatalog.LbfgsMaximumEntropy(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.StandardTrainersCatalog.LbfgsMaximumEntropy(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options)",
            "label": "M:Microsoft.ML.StandardTrainersCatalog.LbfgsMaximumEntropy(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.LbfgsMaximumEntropyMulticlassTrainer.Options)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.standardtrainerscatalog.lbfgsmaximumentropy",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "0d815e3d-14d3-47a0-8f4c-dc2f18357882",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserTokens\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Value = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserTokens\u0022, x =\u003E new { x.UserId, x.LoginProvider, x.Name });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserTokens\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Value = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserTokens\u0022, x =\u003E new { x.UserId, x.LoginProvider, x.Name });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 138,
            "column": 12
          }
        },
        {
          "incidentId": "ad6a8366-81eb-4b8f-ab52-3d0a69e01866",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserRoles\u0022, x =\u003E new { x.UserId, x.RoleId });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserRoles\u0022, x =\u003E new { x.UserId, x.RoleId });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 114,
            "column": 12
          }
        },
        {
          "incidentId": "76a953e1-bb80-4926-9040-8ad306c7a457",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "14c0b73d-5b9c-41ad-a46c-e079b430057c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "91f2382f-cce6-48ba-b61c-614b5dd7f0c4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "9b5df4bf-9fbf-40a0-a0ef-2699a5eb2bb6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "9c000e55-6fc1-4354-bd1a-09cab4428010",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "2b6ffddb-29f3-4b2b-9a4b-b74e88f18b91",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "61674963-309e-4d9f-91c5-a3ac7ae8cb29",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "6e0cafb4-6b99-4166-9fb7-d40f79e1e2bf",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "e9f64999-9839-4791-a276-50d1b712a4d6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "4edd0b3b-deff-4803-b362-8bc82beff8a7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "2a4e992d-4ed6-433e-91d5-7326f447f075",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 214,
            "column": 20
          }
        },
        {
          "incidentId": "26fdba32-8ad2-442e-b56e-d757e9ef07f7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 152,
            "column": 20
          }
        },
        {
          "incidentId": "12773766-f6d7-48b0-afbe-3c2d0da74e58",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 20
          }
        },
        {
          "incidentId": "59fbd61b-3b7c-4839-bac6-0fc820e4bb41",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 29,
            "column": 20
          }
        },
        {
          "incidentId": "804453b6-edb7-4679-88dd-aa58a6d10ec3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Blazor.Tools.Data.ApplicationUser\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUsers\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Blazor.Tools.Data.ApplicationUser\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUsers\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "09c51919-6da6-43bc-8dba-230155b4ce1b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "6bb92c26-2d44-44ea-89a9-206d9c1a0983",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "c97b204a-5bf1-4d88-9e39-dcc4b9089271",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "9cf4eae0-c8e2-420d-9f05-183df56fc9ee",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "7f79da24-7687-4ef1-af22-6104fa7343df",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "91a0a3d9-1d16-4f9a-8c18-3d2b31feb8a0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "be62b687-f22a-4e5b-b9c6-f3f2da41d2d1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "e92933dc-32e2-45ee-bb3e-a6d36c6c81c4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 200,
            "column": 20
          }
        },
        {
          "incidentId": "53701c92-87e9-4d38-b0ad-e812280b37b7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022UserId\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022UserId\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 161,
            "column": 20
          }
        },
        {
          "incidentId": "77fbf38d-a0c1-4a85-9f80-126e0b5684e3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 98,
            "column": 20
          }
        },
        {
          "incidentId": "6db61123-ace7-403b-97b4-dc1d31705e56",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoles\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoles\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 89,
            "column": 12
          }
        },
        {
          "incidentId": "7c754c3f-2a02-4c4f-9fb0-42d8b0e9e95c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 76,
            "column": 20
          }
        },
        {
          "incidentId": "351f1176-b536-4d2a-8d05-026a0adb71a3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.hasannotation",
                "isCustom": false
              }
            ],
            "line": 18,
            "column": 12
          }
        },
        {
          "incidentId": "eb09668b-b0db-411d-ad76-2ffd8d241a1b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedTrainData = model.Transform(trainData);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var preprocessedTrainData = model.Transform(trainData);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 12
          }
        },
        {
          "incidentId": "0be87770-6e0a-413a-97ab-8cdc96f924df",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "DataViewSchema dataViewSchema = data.Schema;",
              "protected": "P:Microsoft.ML.IDataView.Schema"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "DataViewSchema dataViewSchema = data.Schema;",
            "protectedSnippet": "P:Microsoft.ML.IDataView.Schema",
            "label": "P:Microsoft.ML.IDataView.Schema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview.schema",
                "isCustom": false
              }
            ],
            "line": 60,
            "column": 12
          }
        },
        {
          "incidentId": "cb74ed7c-7db6-4b4b-86ce-e7ca5f05c30c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserTokens\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Value = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserTokens\u0022, x =\u003E new { x.UserId, x.LoginProvider, x.Name });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserTokens\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Value = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserTokens\u0022, x =\u003E new { x.UserId, x.LoginProvider, x.Name });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 138,
            "column": 12
          }
        },
        {
          "incidentId": "355becad-5f3a-4474-aa14-a4490dd76719",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction.cascade",
                "isCustom": false
              }
            ],
            "line": 130,
            "column": 20
          }
        },
        {
          "incidentId": "1cc52fa0-c787-495f-9859-2d5768b651f1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 86,
            "column": 20
          }
        },
        {
          "incidentId": "be35e011-6456-4350-ae6b-c6311a3558bb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 12
          }
        },
        {
          "incidentId": "a26386c5-9418-49ba-846f-39761515967b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "fbe06155-3b2f-4408-a6aa-42c19e2cfd43",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "e856d394-731d-43b2-8121-f100bf4ab38f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "ab5ce880-ea86-45b1-83fa-3611580115e9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "b75605f9-0a5d-4b49-aa9c-d087acc8556e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "dfc2f2ff-24f3-4072-83ed-c0bff99ec8f4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "77248cfe-a7d1-48e9-94cd-54d5c84692cd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "688846e9-7fea-4432-941e-f3cfd2e4a6c5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "83aa8d54-ebf3-4ba2-966d-0c5739f7a3c9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 203,
            "column": 20
          }
        },
        {
          "incidentId": "96e7cce9-62c6-4df2-a0a8-714d83239f11",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022RoleId\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022RoleId\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 201,
            "column": 20
          }
        },
        {
          "incidentId": "0593bff0-11f3-47fa-a4ce-816a95d4442b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 199,
            "column": 20
          }
        },
        {
          "incidentId": "54a87531-0498-421a-b909-1603c1e43651",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022UserId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022UserId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 186,
            "column": 20
          }
        },
        {
          "incidentId": "dda75be5-18e2-4f43-9421-ccf4f0e501ec",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 162,
            "column": 20
          }
        },
        {
          "incidentId": "e65bd160-e41d-49d2-915e-911ed62f2c73",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 155,
            "column": 20
          }
        },
        {
          "incidentId": "9c958349-dce4-4095-bc8c-8b2f539addf0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions.hasfilter",
                "isCustom": false
              }
            ],
            "line": 111,
            "column": 20
          }
        },
        {
          "incidentId": "1127dc9d-0d3a-4774-8146-07b850514ae7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 20
          }
        },
        {
          "incidentId": "7ac3c457-37d8-40cd-8c8a-6e1e63d751c4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 56,
            "column": 20
          }
        },
        {
          "incidentId": "4e1c5f4f-1f3b-4397-912e-2b25e5ab87a8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 29,
            "column": 20
          }
        },
        {
          "incidentId": "74c0269e-3411-43a3-b853-ce134cf4f007",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Migration",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Migration.#ctor"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "Migration",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Migration.#ctor",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Migration.#ctor",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migration.migration",
                "isCustom": false
              }
            ],
            "line": 14,
            "column": 5
          }
        },
        {
          "incidentId": "7e293369-d530-4e2b-8b46-81f9a87bcb76",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 249,
            "column": 12
          }
        },
        {
          "incidentId": "b3542d38-75d7-47fa-a169-52d5597f3310",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "4810e94b-91f4-4b3d-95c9-f6c25588b474",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "d6c2c8e5-2a3a-48d4-83bf-2a40d8bb8500",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "e20826be-acee-429e-bfcf-a09e950efec0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 171,
            "column": 20
          }
        },
        {
          "incidentId": "1384d008-0cdf-4c35-b666-5c2cd43679ce",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 166,
            "column": 12
          }
        },
        {
          "incidentId": "9b8b0445-748f-4004-9cfd-b189625c91db",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 122,
            "column": 20
          }
        },
        {
          "incidentId": "d8d473f9-432b-4df9-90c9-d6b1624d1f99",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 118,
            "column": 20
          }
        },
        {
          "incidentId": "63e1d5ad-fbfa-4194-bf3d-f8324d209bcb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 113,
            "column": 20
          }
        },
        {
          "incidentId": "a26370a9-5059-4c21-b368-38b2becee771",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 57,
            "column": 20
          }
        },
        {
          "incidentId": "9c92c6bf-3500-49e2-8e00-5cf5e826f66f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 20
          }
        },
        {
          "incidentId": "9d0284ec-127a-4ea5-b817-4e751c33328d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 26,
            "column": 20
          }
        },
        {
          "incidentId": "3aabed0b-44d5-4060-8202-98c797049312",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Blazor.Tools.Data.ApplicationUser\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUsers\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Blazor.Tools.Data.ApplicationUser\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUsers\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 24,
            "column": 12
          }
        },
        {
          "incidentId": "33c442f7-645d-4d9c-a3f9-48fbf7609ac6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 22,
            "column": 12
          }
        },
        {
          "incidentId": "2c6c56e5-e442-498b-ad6f-16cd759de4d3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 8
          }
        },
        {
          "incidentId": "d081f6e5-9328-45b8-baea-75d2d467918b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 16
          }
        },
        {
          "incidentId": "9bd88743-3057-4e9f-bc9b-058ee09b1333",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var labelColumn = schema.GetColumnOrNull(\u0022Sentiment\u0022);",
              "protected": "M:Microsoft.ML.DataViewSchema.GetColumnOrNull(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "var labelColumn = schema.GetColumnOrNull(\u0022Sentiment\u0022);",
            "protectedSnippet": "M:Microsoft.ML.DataViewSchema.GetColumnOrNull(System.String)",
            "label": "M:Microsoft.ML.DataViewSchema.GetColumnOrNull(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema.getcolumnornull",
                "isCustom": false
              }
            ],
            "line": 110,
            "column": 12
          }
        },
        {
          "incidentId": "79716d3d-fc7f-4913-ae25-2b21f5724f47",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "071f55ea-0dc5-4823-8d7d-334a9e52281d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "16444482-ee47-4897-a763-a551573b37b8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 75,
            "column": 8
          }
        },
        {
          "incidentId": "9c6bbe47-b0a8-4f7d-81e1-13618abe421b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataViewSchema, fs);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "mlContext.Model.Save(model, dataViewSchema, fs);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 64,
            "column": 16
          }
        },
        {
          "incidentId": "7714c070-6a56-4fd3-8392-4b971ed20e5a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataViewSchema, fs);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "mlContext.Model.Save(model, dataViewSchema, fs);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.save",
                "isCustom": false
              }
            ],
            "line": 64,
            "column": 16
          }
        },
        {
          "incidentId": "8e232a14-8b01-4622-abf3-3cf2f3070a06",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "DbContext(typeof(ApplicationDbContext))",
              "protected": "M:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute.#ctor(System.Type)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "DbContext(typeof(ApplicationDbContext))",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute.#ctor(System.Type)",
            "label": "M:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute.#ctor(System.Type)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.dbcontextattribute.dbcontextattribute",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 5
          }
        },
        {
          "incidentId": "47927412-cd21-41db-92df-b79e42f4b1fb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetRoles\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.DropTable(\r\n                name: \u0022AspNetRoles\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.DropTable(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.droptable",
                "isCustom": false
              }
            ],
            "line": 216,
            "column": 12
          }
        },
        {
          "incidentId": "1d009d4f-a3ad-40eb-ae7c-cbbd6a9db6da",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 150,
            "column": 20
          }
        },
        {
          "incidentId": "8456f109-a7a8-4ef2-9355-d909c8fe18ec",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 124,
            "column": 20
          }
        },
        {
          "incidentId": "4ffb182d-dfb0-4910-a065-9664e0abe792",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "98a03739-e137-451b-98df-b7778b637bcc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "4925d9da-bfc9-4d4d-b944-09cc78aadd16",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "21bdeb36-3200-4d8e-9b44-cf4f2fec7401",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "c1afd781-9151-4830-87e9-6fb99b303d52",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "77edbf1b-c88c-453c-805a-8c852cbaf0f6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 225,
            "column": 12
          }
        },
        {
          "incidentId": "61c153d9-09e8-47a1-9b37-f0e77df2f213",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 174,
            "column": 20
          }
        },
        {
          "incidentId": "15b7c333-5308-400e-9ead-b02c64ac57e5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 169,
            "column": 12
          }
        },
        {
          "incidentId": "96dbe62f-df66-401c-aeae-8cec98eb6d78",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 158,
            "column": 20
          }
        },
        {
          "incidentId": "8e34f21f-30c9-41b6-9666-c46eb99391cf",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 150,
            "column": 20
          }
        },
        {
          "incidentId": "22e141bd-32d7-4768-8b22-9cfddfbd5653",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 125,
            "column": 20
          }
        },
        {
          "incidentId": "2c9fe85d-0600-4121-a245-4f3e4519502e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 20
          }
        },
        {
          "incidentId": "262f6a7e-b4ff-4827-ba90-1dc2a61e3346",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 97,
            "column": 20
          }
        },
        {
          "incidentId": "3d760ee5-f5dc-4175-a7fb-95e9f12a2026",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 97,
            "column": 20
          }
        },
        {
          "incidentId": "b2ed99cd-bd6e-4d37-a914-c9f68a66b431",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoles\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoles\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 92,
            "column": 12
          }
        },
        {
          "incidentId": "97aab071-c9b5-4848-bba5-482171539e4c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 89,
            "column": 20
          }
        },
        {
          "incidentId": "c485d51f-80b7-48d2-813a-293c3c4ec1fc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions.hasdatabasename",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 20
          }
        },
        {
          "incidentId": "4332a03c-eaa8-4bf7-92ff-988dc4236132",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Blazor.Tools.Data.ApplicationUser\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUsers\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Blazor.Tools.Data.ApplicationUser\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUsers\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "ad8d4d5a-d3e8-4f9f-a197-612fed8c7114",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "DbContext(typeof(ApplicationDbContext))",
              "protected": "T:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "DbContext(typeof(ApplicationDbContext))",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute",
            "label": "T:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.dbcontextattribute",
                "isCustom": false
              }
            ],
            "line": 12,
            "column": 5
          }
        },
        {
          "incidentId": "391fa77a-576e-41fa-9028-ecf1cf64b6d8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "6c4e4f26-417b-4a6a-b6d5-49fb6cc6e906",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "ad2abb18-adcd-4932-8c41-77d84efdd8de",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "9181a8dd-084f-444d-bbfd-15a4598208ba",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "8e5a3003-e2c9-4e78-980f-5e60141514ce",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "3b816cce-f386-4832-9e49-d91a1a1a3d6c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 214,
            "column": 20
          }
        },
        {
          "incidentId": "378b0fe8-40b6-4200-956b-2e01f4aaee29",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 205,
            "column": 20
          }
        },
        {
          "incidentId": "a63d72b7-1013-4760-8d28-cf4bc55b562b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 168,
            "column": 20
          }
        },
        {
          "incidentId": "96435d96-dbcc-464f-8ae4-bb8d274a8245",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 163,
            "column": 20
          }
        },
        {
          "incidentId": "e8a444f6-f605-4fc9-b53b-c32b6b87cf82",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 155,
            "column": 20
          }
        },
        {
          "incidentId": "598f181e-6c60-41dd-986c-d47b315eba28",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions.hasfilter",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "7a1072f3-8bc8-421f-8788-b3ebc0c4960c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 60,
            "column": 20
          }
        },
        {
          "incidentId": "e708db50-e4c5-49af-8931-3495c2d9ea26",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.SqlServer, 8.0.6.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
              "protected": "T:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.sqlservermodelbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 22,
            "column": 12
          }
        },
        {
          "incidentId": "3a07f841-aab3-4e83-b3aa-1f97a9f441fd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "929b195c-a6be-4a47-bb14-d0829f013e91",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "P:Microsoft.ML.MLContext.MulticlassClassification"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "label": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.multiclassclassification",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "9212b3ed-932b-4e68-9f3e-c7910e841c4f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "labelColumn.Value.GetKeyValues(ref keyNames);",
              "protected": "T:Microsoft.ML.Data.SchemaAnnotationsExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "labelColumn.Value.GetKeyValues(ref keyNames);",
            "protectedSnippet": "T:Microsoft.ML.Data.SchemaAnnotationsExtensions",
            "label": "T:Microsoft.ML.Data.SchemaAnnotationsExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemaannotationsextensions",
                "isCustom": false
              }
            ],
            "line": 118,
            "column": 12
          }
        },
        {
          "incidentId": "f7eff168-a106-497c-9ec8-b83f68d3bc5f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.MulticlassClassificationCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "label": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "43a92c66-7fc0-43e7-b548-926d374a2f9d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers",
            "label": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog.trainers",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "9b60a77d-2889-40aa-b099-b4ee8ff9d062",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Text"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Text",
            "label": "P:Microsoft.ML.TransformsCatalog.Text",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.text",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "6a50f9f8-3a03-4ae4-89cd-9fc91442025b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.featurizetext",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "e5ba88c1-c9fd-4ad3-9f96-c8b575e0b775",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "P:Microsoft.ML.MLContext.Data"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Data",
            "label": "P:Microsoft.ML.MLContext.Data",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.data",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 12
          }
        },
        {
          "incidentId": "e3e8e646-33d9-417a-83c6-30d2709df769",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateIndex(\r\n                name: \u0022IX_AspNetUserRoles_RoleId\u0022,\r\n                table: \u0022AspNetUserRoles\u0022,\r\n                column: \u0022RoleId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateIndex(\r\n                name: \u0022IX_AspNetUserRoles_RoleId\u0022,\r\n                table: \u0022AspNetUserRoles\u0022,\r\n                column: \u0022RoleId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.createindex",
                "isCustom": false
              }
            ],
            "line": 180,
            "column": 12
          }
        },
        {
          "incidentId": "8f00c7da-d394-4405-9d55-1d14408a0dee",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 106,
            "column": 20
          }
        },
        {
          "incidentId": "6101cf4f-1bd7-4e11-b6ac-20e097d4cfb1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserLogins\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderKey = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderDisplayName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserLogins\u0022, x =\u003E new { x.LoginProvider, x.ProviderKey });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserLogins\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderKey = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderDisplayName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserLogins\u0022, x =\u003E new { x.LoginProvider, x.ProviderKey });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 12
          }
        },
        {
          "incidentId": "c07325c7-1462-479a-a91d-b40d2407616d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoleClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoleClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoleClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoleClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 52,
            "column": 12
          }
        },
        {
          "incidentId": "7938d8fc-89d0-4921-bf4c-4d4d84a474de",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "727b789b-9337-4acc-a542-8a73f6ce2436",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoles\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoles\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 12
          }
        },
        {
          "incidentId": "f3ad4327-7208-4570-930a-aeeb939e7be3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "db81669d-d4b7-4319-986e-6d7b478a548e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "9469e887-91a1-4c1f-9742-a0ba41b395f0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "8e3c425a-1b86-4ccd-a4f7-93751e92a86e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "0befa7d8-e00a-401e-9adf-4bbb0aeedeac",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 208,
            "column": 20
          }
        },
        {
          "incidentId": "731b3fc9-0ca0-46da-a022-1ecfb21616cb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 191,
            "column": 12
          }
        },
        {
          "incidentId": "f325c893-a118-4965-8e39-1ad06fd51dcb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 188,
            "column": 20
          }
        },
        {
          "incidentId": "688a2c0e-a5d0-48df-9fa7-65981050bdf3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 180,
            "column": 20
          }
        },
        {
          "incidentId": "153f8a5e-4489-4c05-a956-3303e0d54668",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.SqlServer, 8.0.6.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
              "protected": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.sqlserverpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 150,
            "column": 20
          }
        },
        {
          "incidentId": "3c55fb87-5a34-4b4a-bac0-8830b2a16b2b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 20
          }
        },
        {
          "incidentId": "e5dce81f-1bad-484e-ab3b-ac25dddaec09",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 111,
            "column": 20
          }
        },
        {
          "incidentId": "621dd9df-25da-40c3-9e24-6de1ba7c18f9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 111,
            "column": 20
          }
        },
        {
          "incidentId": "cfff7d1f-54bd-4478-a7df-7392a67805a0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 111,
            "column": 20
          }
        },
        {
          "incidentId": "2a236b71-0e95-417c-a7d7-034aa1aee5df",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 20
          }
        },
        {
          "incidentId": "2f4cd3bc-1f11-4321-91e8-c2113cfe1f91",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 75,
            "column": 20
          }
        },
        {
          "incidentId": "f488f639-ef2b-4a1d-86c8-f9055a1ff44a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "7a76d762-68d3-4315-a28f-0c9ebd5eaedd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "3d4061ba-5b0b-43b5-bd26-2f8e2aebd1a1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "aab5d251-7ef6-4e30-8066-cbb263f79ce1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "ade63786-ccd5-4dc9-9433-db16dfb49679",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "d4f6d7bc-4094-4bc4-aadf-c2966fa63072",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "07810bfd-70f3-4f20-bf81-7140962137c4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "647d874e-a413-49c7-a14b-984fa86235d2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "dd982f56-ee4b-4b90-bbaf-aabdca41290d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "f8c4af00-3b7f-4dca-a31a-52a179f07ba1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 190,
            "column": 20
          }
        },
        {
          "incidentId": "0dc4d697-9eca-4960-83aa-4ec2b9fd8fd4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 181,
            "column": 20
          }
        },
        {
          "incidentId": "4ed09bc9-00a9-472c-ac9a-bf6e9c70a45d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 171,
            "column": 20
          }
        },
        {
          "incidentId": "135bc86b-ab7b-4bbe-8290-89c4a659d62d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 130,
            "column": 20
          }
        },
        {
          "incidentId": "9744b343-9f27-4253-a0e1-74fa8cb0411f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 130,
            "column": 20
          }
        },
        {
          "incidentId": "ee8a048e-ecaa-4750-970f-f46971a0c152",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 20
          }
        },
        {
          "incidentId": "68f09155-4955-40fd-bf4c-aa9daf6b40a8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoles\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoles\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 89,
            "column": 12
          }
        },
        {
          "incidentId": "a58fa035-cb78-42c9-af17-6fc5a8f62e4d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 86,
            "column": 20
          }
        },
        {
          "incidentId": "d92102ac-9b10-428d-94b6-c018af04c10d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 78,
            "column": 20
          }
        },
        {
          "incidentId": "2ebd9dca-7286-42e2-be32-d82f8865ac8a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 78,
            "column": 20
          }
        },
        {
          "incidentId": "0c47f6f4-87f5-4f8b-8d75-f95dd7d9cd71",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 69,
            "column": 20
          }
        },
        {
          "incidentId": "daba9834-f739-4904-bb1d-24b413b2ac55",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 36,
            "column": 20
          }
        },
        {
          "incidentId": "65cfc371-1c00-4c61-94b7-faa68adebacb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 8
          }
        },
        {
          "incidentId": "093873c3-5a73-4166-a746-d4134a8f3904",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "T:Microsoft.ML.MulticlassClassificationCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "label": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "8783d379-292c-43ff-bcf1-13d49bcd3e3a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static IEstimator\u003CITransformer\u003E BuildPipeline(MLContext mlContext)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "public static IEstimator\u003CITransformer\u003E BuildPipeline(MLContext mlContext)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 88,
            "column": 8
          }
        },
        {
          "incidentId": "3ea7553d-b843-4f4b-be75-f7f26db1b45f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "0ef6c20d-d503-4379-a594-29fcfbf8c985",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "4c7acdaf-fc86-4ff9-beab-7c7a418f9971",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 57,
            "column": 8
          }
        },
        {
          "incidentId": "89db008d-2a2b-4457-93e8-9407669fac2c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Migration(\u002200000000000000_CreateIdentitySchema\u0022)",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationAttribute.#ctor(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "Migration(\u002200000000000000_CreateIdentitySchema\u0022)",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationAttribute.#ctor(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationAttribute.#ctor(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationattribute.migrationattribute",
                "isCustom": false
              }
            ],
            "line": 14,
            "column": 5
          }
        },
        {
          "incidentId": "80c00499-a8b3-491d-8d07-7f01529fd6a0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "DbContext(typeof(ApplicationDbContext))",
              "protected": "T:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "DbContext(typeof(ApplicationDbContext))",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute",
            "label": "T:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.dbcontextattribute",
                "isCustom": false
              }
            ],
            "line": 13,
            "column": 5
          }
        },
        {
          "incidentId": "7d29f0b7-4880-4633-b50c-9febedf303a8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateIndex(\r\n                name: \u0022IX_AspNetRoleClaims_RoleId\u0022,\r\n                table: \u0022AspNetRoleClaims\u0022,\r\n                column: \u0022RoleId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateIndex(\r\n                name: \u0022IX_AspNetRoleClaims_RoleId\u0022,\r\n                table: \u0022AspNetRoleClaims\u0022,\r\n                column: \u0022RoleId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.createindex",
                "isCustom": false
              }
            ],
            "line": 158,
            "column": 12
          }
        },
        {
          "incidentId": "34790415-d616-4acc-add8-c4eca1656f60",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserRoles\u0022, x =\u003E new { x.UserId, x.RoleId });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserRoles\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserRoles\u0022, x =\u003E new { x.UserId, x.RoleId });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 114,
            "column": 12
          }
        },
        {
          "incidentId": "ee52ff13-8634-4ec0-aeee-9836f9047dc6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserLogins\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderKey = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderDisplayName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserLogins\u0022, x =\u003E new { x.LoginProvider, x.ProviderKey });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserLogins\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderKey = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ProviderDisplayName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserLogins\u0022, x =\u003E new { x.LoginProvider, x.ProviderKey });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserLogins_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 12
          }
        },
        {
          "incidentId": "d606c1d2-db3a-4dad-b19a-e240d37db2ea",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoleClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoleClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoleClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoleClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 52,
            "column": 12
          }
        },
        {
          "incidentId": "3928a17e-7626-4e38-beaa-b5ccbf992012",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "1252afee-0398-429c-a3f8-1391a4e862e8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "82bfcaa7-7f37-4076-88e6-cdef01fd7661",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "d250f177-41b5-4517-a52b-bf008562f439",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "735ec773-7ea4-4593-9eea-c0c2745daf3f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 252,
            "column": 12
          }
        },
        {
          "incidentId": "e2f0c02d-93e0-4668-adab-ab9be6ecfb69",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "7762027e-95fa-494a-8a1e-57c25f021e23",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "2795db7b-7073-402f-a0fd-ed337756ea4c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 184,
            "column": 20
          }
        },
        {
          "incidentId": "36cfdc01-0272-4940-9c31-8278d1c1a339",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 177,
            "column": 20
          }
        },
        {
          "incidentId": "699293c9-5f0e-48a5-8b84-3a8753d815cc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 171,
            "column": 20
          }
        },
        {
          "incidentId": "b2f25576-84a2-465a-8b29-88a3869874a3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 109,
            "column": 20
          }
        },
        {
          "incidentId": "50a702ca-d278-46f2-9eca-e1fdc0fdc639",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 20
          }
        },
        {
          "incidentId": "8b5265db-4f31-40d0-8f0d-d20aa9e553ea",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions.hasdatabasename",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "c49dcaf2-0be7-4c57-b66f-d042e4b4dd6a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedUserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 56,
            "column": 20
          }
        },
        {
          "incidentId": "1219e3a6-ddb2-4f0f-bf85-4943f6b88ed8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 43,
            "column": 20
          }
        },
        {
          "incidentId": "5f8af2e4-97fc-4d2b-a2c7-5d4ec9dccb71",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 20
          }
        },
        {
          "incidentId": "6611f4b0-95db-4391-940b-96977a0b53b4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 21,
            "column": 12
          }
        },
        {
          "incidentId": "189da8c6-4b66-411b-9589-cee363e7fba5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "DbContext(typeof(ApplicationDbContext))",
              "protected": "M:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute.#ctor(System.Type)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "DbContext(typeof(ApplicationDbContext))",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute.#ctor(System.Type)",
            "label": "M:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute.#ctor(System.Type)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.dbcontextattribute.dbcontextattribute",
                "isCustom": false
              }
            ],
            "line": 12,
            "column": 5
          }
        },
        {
          "incidentId": "534af442-6ebb-42e7-a743-ed8f52538dc8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "a0513b97-fd10-425e-a2df-bfa7e39a5c88",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "26ad7131-f8f2-4676-94a7-1914613f4bce",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 240,
            "column": 12
          }
        },
        {
          "incidentId": "bed330fc-1a0e-46e7-bab7-bcdaeb7d070b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "f9520b8b-cfef-4897-899e-6bb480138113",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "8af54036-1aeb-4f63-aadf-16a0b0f3497e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 219,
            "column": 20
          }
        },
        {
          "incidentId": "bf7f7123-3e34-4210-b1cb-6ae67092f4d8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 217,
            "column": 20
          }
        },
        {
          "incidentId": "6384d5bb-f3c2-4c32-8cc4-b852c54e6788",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 214,
            "column": 20
          }
        },
        {
          "incidentId": "54791174-63eb-4d6f-b807-f77a09d6085d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 200,
            "column": 20
          }
        },
        {
          "incidentId": "08fe6f7d-fd29-4500-b850-23bb9b73d986",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022RoleId\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022RoleId\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 198,
            "column": 20
          }
        },
        {
          "incidentId": "ca569b7b-210e-4c04-bc5a-b2c9956da3ee",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 174,
            "column": 20
          }
        },
        {
          "incidentId": "8958933e-e86d-4890-bb84-a7239050f813",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 149,
            "column": 20
          }
        },
        {
          "incidentId": "a2a019b1-c8bd-415e-acac-890737febd21",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "121703ba-0b5c-4527-9872-899c51d76813",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 78,
            "column": 20
          }
        },
        {
          "incidentId": "e335081e-21b2-4f8f-80cb-7d773b417bc9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 20
          }
        },
        {
          "incidentId": "f22ee8c4-255a-4911-a6d1-8c5d229d0c08",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedEmail\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 20
          }
        },
        {
          "incidentId": "4d816f86-e69b-4cdb-9b15-e8f96e18d554",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 40,
            "column": 20
          }
        },
        {
          "incidentId": "8be4b9b6-d87b-4ede-9efe-c00809938194",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "labelColumn.Value.GetKeyValues(ref keyNames);",
              "protected": "T:Microsoft.ML.DataViewSchema.Column"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "labelColumn.Value.GetKeyValues(ref keyNames);",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema.Column",
            "label": "T:Microsoft.ML.DataViewSchema.Column",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema.column",
                "isCustom": false
              }
            ],
            "line": 118,
            "column": 12
          }
        },
        {
          "incidentId": "fd05b470-88e8-4954-be93-cca3b1482eaf",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "9302ffec-935a-45f1-95aa-a569118151a4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator",
            "label": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.valuetokeymappingestimator",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "0a55e781-a871-40b5-ba07-d655d81c9da7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "DataViewSchema dataViewSchema = data.Schema;",
              "protected": "T:Microsoft.ML.DataViewSchema"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "DataViewSchema dataViewSchema = data.Schema;",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema",
            "label": "T:Microsoft.ML.DataViewSchema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema",
                "isCustom": false
              }
            ],
            "line": 60,
            "column": 12
          }
        },
        {
          "incidentId": "acbe158a-0746-4303-bc87-29cd61a19fc2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 44,
            "column": 8
          }
        },
        {
          "incidentId": "8a390943-2486-4287-9ae2-534fe874d60c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 29,
            "column": 12
          }
        },
        {
          "incidentId": "ccb82c71-66f2-45b1-88b6-4047a7cc08a4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 150,
            "column": 20
          }
        },
        {
          "incidentId": "aff73c12-66dc-4a81-b5e7-c492202fd2b4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserTokens\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Value = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserTokens\u0022, x =\u003E new { x.UserId, x.LoginProvider, x.Name });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserTokens\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    LoginProvider = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Value = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserTokens\u0022, x =\u003E new { x.UserId, x.LoginProvider, x.Name });\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 138,
            "column": 12
          }
        },
        {
          "incidentId": "2c7ac091-2ab5-4136-abbb-611bd631ea54",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUserClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    UserId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUserClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 73,
            "column": 12
          }
        },
        {
          "incidentId": "500c7f23-4433-4e2e-a00f-9abfb38e064a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 267,
            "column": 12
          }
        },
        {
          "incidentId": "1845466d-01dd-4ba6-a129-7a54f423708c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "5de5773b-0fea-4df6-bcec-190ecbf2782f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "e7c8b346-5c01-430f-9eca-234598232f92",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 225,
            "column": 12
          }
        },
        {
          "incidentId": "132d3eee-61f8-42fc-b877-f0db2939cab0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 188,
            "column": 20
          }
        },
        {
          "incidentId": "ddb05989-0db9-47c1-8694-e09c4b28d541",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 158,
            "column": 20
          }
        },
        {
          "incidentId": "f9001fe5-4608-4ee2-a60f-89910b5f1cc9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 137,
            "column": 20
          }
        },
        {
          "incidentId": "209fcf9a-377f-4f81-bd3b-65b9d82d94fe",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 130,
            "column": 20
          }
        },
        {
          "incidentId": "856e650b-f11c-44de-8929-45b05ba14e60",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 119,
            "column": 12
          }
        },
        {
          "incidentId": "a4e1fa6c-1969-4c59-b4f0-90ae3dca7a2d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 20
          }
        },
        {
          "incidentId": "5e11aaa8-b681-460b-86cc-8003d1d14a65",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 111,
            "column": 20
          }
        },
        {
          "incidentId": "3383ff96-b5ec-4042-baa4-67a0ca705f1d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 111,
            "column": 20
          }
        },
        {
          "incidentId": "63147d0b-daf2-4c56-89b0-a650665beff7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 89,
            "column": 20
          }
        },
        {
          "incidentId": "0e2c2ecc-36a9-4bf0-b78a-d825c967426b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "e787f9c4-1ba1-4111-8554-75e96e4cb137",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "93f51184-6dcb-41f3-9234-45e2861beb59",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 79,
            "column": 20
          }
        },
        {
          "incidentId": "5dbfe9db-38c1-45d4-9702-1b0d05d3fc18",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022TwoFactorEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 20
          }
        },
        {
          "incidentId": "d9df6478-6d40-4838-86ca-720c9e3e8372",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 20
          }
        },
        {
          "incidentId": "3a4e56d6-05c2-43f8-9685-49a2d8a143f3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 20
          }
        },
        {
          "incidentId": "7ee1c5c4-1a19-4829-a416-74c35a9c080e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "adeb97c7-17bc-41c0-8dd8-ec0f2aaf8db3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "8b00de59-6e3c-401c-bb39-17146eba38e0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "d84f8583-51eb-4139-af24-0ea1e5fc714d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 249,
            "column": 12
          }
        },
        {
          "incidentId": "33faa8ff-b12e-4663-80a1-3ca4aa2a62de",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "3b26dcbc-48e8-4c3e-878b-566a657d41a8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "66c2f9c9-978d-4ef9-8838-a820d3f2bf6d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "739a786a-33ce-4f53-a3ba-364426eea4cb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 12
          }
        },
        {
          "incidentId": "4b470afd-3985-49a2-976f-ee9d45c6d374",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 127,
            "column": 20
          }
        },
        {
          "incidentId": "41711c7f-e611-4b24-9f9d-d3b97c82a8e8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 108,
            "column": 20
          }
        },
        {
          "incidentId": "edfc7b62-c9ec-4234-abb4-82da9cc544c0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 102,
            "column": 20
          }
        },
        {
          "incidentId": "e8dd93b7-44ff-4618-bbbb-5ec234241f3c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 86,
            "column": 20
          }
        },
        {
          "incidentId": "1faea1a3-ae1f-4b07-b71a-217740487818",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "80cddc91-84f2-4776-b31c-fc113c154ea6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 78,
            "column": 20
          }
        },
        {
          "incidentId": "25003479-455f-4fa3-9a53-fd63ab7c9a08",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 60,
            "column": 20
          }
        },
        {
          "incidentId": "5f7216f3-4828-4069-8403-b798e43295e2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 43,
            "column": 20
          }
        },
        {
          "incidentId": "78809174-bbe0-4616-990e-8448cb93ec53",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "P:Microsoft.ML.Data.MetricStatistics.Mean"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "label": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics.mean",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "e028616e-379e-458f-9e29-358cbfd0e5ed",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 12
          }
        },
        {
          "incidentId": "4f7111ef-f889-4b3a-a361-00f0939f5eda",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.ConversionsExtensionsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "label": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "6e693ca6-b662-4745-a472-777d9bd8ecbc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 57,
            "column": 8
          }
        },
        {
          "incidentId": "a34d43e8-d088-4f8d-b688-1d2ae856b96d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 44,
            "column": 8
          }
        },
        {
          "incidentId": "604c2140-6c67-4432-9adb-3695ff18462f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "protected override void Up(MigrationBuilder migrationBuilder)",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "protected override void Up(MigrationBuilder migrationBuilder)",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder",
                "isCustom": false
              }
            ],
            "line": 11,
            "column": 8
          }
        },
        {
          "incidentId": "6c7ee8f8-29b8-4a92-a9e7-402c72db1a06",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateIndex(\r\n                name: \u0022UserNameIndex\u0022,\r\n                table: \u0022AspNetUsers\u0022,\r\n                column: \u0022NormalizedUserName\u0022,\r\n                unique: true,\r\n                filter: \u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateIndex(\r\n                name: \u0022UserNameIndex\u0022,\r\n                table: \u0022AspNetUsers\u0022,\r\n                column: \u0022NormalizedUserName\u0022,\r\n                unique: true,\r\n                filter: \u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.createindex",
                "isCustom": false
              }
            ],
            "line": 190,
            "column": 12
          }
        },
        {
          "incidentId": "61cc2ae4-c245-40cf-ba03-290b938b1c65",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateIndex(\r\n                name: \u0022RoleNameIndex\u0022,\r\n                table: \u0022AspNetRoles\u0022,\r\n                column: \u0022NormalizedName\u0022,\r\n                unique: true,\r\n                filter: \u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateIndex(\r\n                name: \u0022RoleNameIndex\u0022,\r\n                table: \u0022AspNetRoles\u0022,\r\n                column: \u0022NormalizedName\u0022,\r\n                unique: true,\r\n                filter: \u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.createindex",
                "isCustom": false
              }
            ],
            "line": 163,
            "column": 12
          }
        },
        {
          "incidentId": "49caa984-f056-4ce5-81bb-49c093fbf572",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction.cascade",
                "isCustom": false
              }
            ],
            "line": 124,
            "column": 20
          }
        },
        {
          "incidentId": "db51b8c0-6600-47dd-84bd-11c40b9f9bc6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 65,
            "column": 20
          }
        },
        {
          "incidentId": "fba50d96-c22e-4e07-8af7-3fd463b91771",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasone",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "0fce5188-c22d-4eed-97bd-78b5cc155fb1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "9e223061-8b91-4835-aa11-492c4a747a77",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "04caef31-a875-4b1c-9d5a-068d317921c4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "837f2e8b-ea18-4d36-a08d-3bd54832f46b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "817c0c0f-7c65-4ce9-bd37-521020be4673",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 234,
            "column": 12
          }
        },
        {
          "incidentId": "4fc912ce-8053-43d1-86ad-3af5982034da",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "283ba8ab-fde8-4afa-a883-a949c4685f60",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "b22f1a36-669f-4bb2-959f-4b6415bfa96a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "d6ead4ae-8544-4a4b-b715-905051883e94",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 174,
            "column": 20
          }
        },
        {
          "incidentId": "7d4cd844-ab16-4d11-9f85-e3cc1b250711",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 171,
            "column": 20
          }
        },
        {
          "incidentId": "f909a0b4-3c9d-4fd0-9996-88b8f46f02d8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 166,
            "column": 20
          }
        },
        {
          "incidentId": "a734bed5-3ab2-45c6-9396-6352a41f0d98",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022UserId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022UserId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 164,
            "column": 20
          }
        },
        {
          "incidentId": "aea2c2e5-01d0-4e77-87f9-d4d00d0e3895",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022RoleId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022RoleId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 139,
            "column": 20
          }
        },
        {
          "incidentId": "54c4b384-f027-4d04-bd16-24c8040c911a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 69,
            "column": 20
          }
        },
        {
          "incidentId": "82e8a30f-5c68-4326-8f0f-b17090e532de",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 35,
            "column": 20
          }
        },
        {
          "incidentId": "d0b52d66-015e-475d-9aca-c3fdfd215a68",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "78e363ba-db70-4071-8371-8374af7bf37a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "f928d856-9dcb-4895-894c-e403d34c41ba",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "3827859f-5345-4813-ac87-5313f7e090eb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "84f208a5-f0f8-4fe9-ba03-1a5941b1b6e4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 219,
            "column": 20
          }
        },
        {
          "incidentId": "cddfca68-8914-4e5e-9c79-0df2cd0eb3d3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 203,
            "column": 12
          }
        },
        {
          "incidentId": "162d6560-b4dc-4c97-b7f7-a3cd0a06baf8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 193,
            "column": 20
          }
        },
        {
          "incidentId": "18f558a3-edf6-401b-87ab-714aa2c5f78d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserRole\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 188,
            "column": 12
          }
        },
        {
          "incidentId": "43c97844-de99-47ab-9ee6-5ff10a4ac61e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 177,
            "column": 20
          }
        },
        {
          "incidentId": "0a243a34-150b-4dc8-af5f-cc40f0a512bb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 159,
            "column": 20
          }
        },
        {
          "incidentId": "f9968c63-e4fd-46ef-8922-bdc333a7aa47",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 116,
            "column": 12
          }
        },
        {
          "incidentId": "5cb9a7fe-9bfa-4a17-837f-b614412d1c31",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 108,
            "column": 20
          }
        },
        {
          "incidentId": "8e4854ec-627f-4c18-b535-196bb61901c4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 108,
            "column": 20
          }
        },
        {
          "incidentId": "7c11b1c5-30fe-4524-861e-b6ff4d492043",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 20
          }
        },
        {
          "incidentId": "9c3bff83-684b-4d00-b65e-0270f4ab50c4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "0f84bab1-21eb-4270-9523-a1ee10fafd87",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "ad4512f0-41f9-4c55-bca4-ae7b26098c59",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022PhoneNumberConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 20
          }
        },
        {
          "incidentId": "e6d30189-9f0d-4a3c-8c08-a17b28f3dc71",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 20
          }
        },
        {
          "incidentId": "ac726ae7-315c-4d4d-8708-feaab17350ea",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "e15dcf96-1719-4d7d-ac1d-68e78a8df94c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 61,
            "column": 12
          }
        },
        {
          "incidentId": "b5b72c86-0c82-4357-9627-784f66003c8c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.LearningPipelineExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.LearningPipelineExtensions",
            "label": "T:Microsoft.ML.LearningPipelineExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.learningpipelineextensions",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "90858a2b-228a-4d9c-8eca-22e06bbd9902",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 75,
            "column": 8
          }
        },
        {
          "incidentId": "747d1029-ccd5-4427-999a-b3d73f5ed1f4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateIndex(\r\n                name: \u0022IX_AspNetUserLogins_UserId\u0022,\r\n                table: \u0022AspNetUserLogins\u0022,\r\n                column: \u0022UserId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateIndex(\r\n                name: \u0022IX_AspNetUserLogins_UserId\u0022,\r\n                table: \u0022AspNetUserLogins\u0022,\r\n                column: \u0022UserId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.createindex",
                "isCustom": false
              }
            ],
            "line": 175,
            "column": 12
          }
        },
        {
          "incidentId": "7e7f1c40-e70c-4ff5-9196-089da2fa0a33",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "9502ceca-8cb8-4651-ac78-f178b75940b0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "52748943-bdfd-4c16-b796-451b62d3dc9f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder.withmany",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "adfce9f6-dbd0-4bb8-946d-6bba48f3250c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "f8f7a6bb-ab01-4b57-b2de-bb41b2fd57b2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "75bf0f89-c038-460a-9262-fc78b596d6fd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 20
          }
        },
        {
          "incidentId": "54a93ea3-30c0-452e-a8ba-4bfa8f540591",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 211,
            "column": 20
          }
        },
        {
          "incidentId": "1c2c8e26-835f-4ffd-96aa-a12be64c0f65",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 206,
            "column": 12
          }
        },
        {
          "incidentId": "815ad64b-cdd9-4be2-9934-bb6d2279e2c9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 141,
            "column": 20
          }
        },
        {
          "incidentId": "a910f106-149c-497c-8458-7e6b6aab66fe",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022RoleId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 119,
            "column": 12
          }
        },
        {
          "incidentId": "ae8cd0e4-52a4-4dd5-baf0-117a2a684f5b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "e4219929-7424-4a56-989e-dedc931911e0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "8c1ba24b-5469-425e-8ef5-1540895ecf91",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRoleClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 12
          }
        },
        {
          "incidentId": "1a215699-8b05-4299-bda5-9dbd701a9d8d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);\r\n\r\n                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 141,
            "column": 12
          }
        },
        {
          "incidentId": "2eea729b-8993-4f04-a50b-965d1cda2fd1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUsers\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 86,
            "column": 20
          }
        },
        {
          "incidentId": "86d962ee-b1ba-4396-a44c-e0b688ccdd15",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022SecurityStamp\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 20
          }
        },
        {
          "incidentId": "6d0211d0-c21b-47fd-900b-8e327c2e3079",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 20
          }
        },
        {
          "incidentId": "1ea72e48-e966-4070-811e-dbc64ed93e65",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.createpredictionengine",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 12
          }
        },
        {
          "incidentId": "bd95e1ae-e428-493d-9d30-1815e8b3a498",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Conversion"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "label": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversion",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "5bea50ff-cab9-44b2-b64f-c98a3d1d4487",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator",
            "label": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.columnconcatenatingestimator",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "e154d4df-7cf9-465e-a11e-05ec20c36de2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "7053d63d-f5a9-429a-923e-9e788f88fef6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 12
          }
        },
        {
          "incidentId": "ddcaf2cc-3ff0-4d33-be28-56af5d0a9f74",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoleClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoleClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoleClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoleClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 52,
            "column": 12
          }
        },
        {
          "incidentId": "fc5a2190-274c-4304-9154-b462a2cc9855",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 269,
            "column": 20
          }
        },
        {
          "incidentId": "36832b0f-9ba4-4706-95c8-e741bd278619",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "eee2cc5a-7be7-4c4a-9497-91c43e18b4e1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 254,
            "column": 20
          }
        },
        {
          "incidentId": "8662f7fe-de15-4724-b000-665ed8eff744",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 222,
            "column": 20
          }
        },
        {
          "incidentId": "1ad0d9f3-3b6e-4da4-affc-d2ae0225ec40",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions.totable",
                "isCustom": false
              }
            ],
            "line": 166,
            "column": 20
          }
        },
        {
          "incidentId": "37cc6319-69b2-47fa-af90-273ccdddff13",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022RoleId\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022RoleId\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 139,
            "column": 20
          }
        },
        {
          "incidentId": "a0eff9c0-b86f-4aa7-8caf-a550b642f70f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 20
          }
        },
        {
          "incidentId": "ee014a7c-cc3e-4772-a8d2-d12ac476c439",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 101,
            "column": 20
          }
        },
        {
          "incidentId": "f1a6fa0c-beef-4012-8d94-d649e647aadc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "7de07f40-4e3e-4f03-8040-34384a9328f2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 79,
            "column": 20
          }
        },
        {
          "incidentId": "5a6acdd7-a7d2-466d-9db9-13b3bf4a8b6d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 20
          }
        },
        {
          "incidentId": "e28e5293-8a00-4060-9398-ccd06ac0914e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "a57c6b28-9ac6-4510-8cc3-839b0e6e7a23",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 231,
            "column": 12
          }
        },
        {
          "incidentId": "e169f037-77bf-4749-a151-505fa49264ff",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 208,
            "column": 20
          }
        },
        {
          "incidentId": "501b1379-bde7-4d08-b2e8-7576b217d6e0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 155,
            "column": 20
          }
        },
        {
          "incidentId": "0d94ca0e-ea03-41c8-a797-550799fd99e7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimValue\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 152,
            "column": 20
          }
        },
        {
          "incidentId": "fd283faa-a6c4-4319-bdb7-4e50c7dc1d46",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 20
          }
        },
        {
          "incidentId": "9b06ac01-b838-4b17-b056-d5f3f11fb702",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder.isunique",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "cd779db0-26a2-4bd4-86da-e67b9a5deac6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 20
          }
        },
        {
          "incidentId": "4afc52de-273d-4d2e-88f6-7b451c537b9a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 57,
            "column": 20
          }
        },
        {
          "incidentId": "8814edbc-ff14-4994-90f9-b36eed50e866",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversiontransforms",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "8a6f0adc-9f56-4628-9231-464eb5ffa13d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)",
            "label": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog.mapvaluetokey",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "fdb0dd2a-c8d0-42fe-8b48-e39be75d07c0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "T:Microsoft.ML.TextLoaderSaverCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "label": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 12
          }
        },
        {
          "incidentId": "cd0e45a9-d75c-41aa-b537-192dd0e13589",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserRoles_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 130,
            "column": 20
          }
        },
        {
          "incidentId": "07793d2f-d2c8-46e1-9813-5eee03ce7118",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoleClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoleClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetRoleClaims\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                        .Annotation(\u0022SqlServer:Identity\u0022, \u00221, 1\u0022),\r\n                    RoleId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    ClaimType = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ClaimValue = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetRoleClaims\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 52,
            "column": 12
          }
        },
        {
          "incidentId": "58c67ff7-5336-4714-803e-7f9e2e639843",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 260,
            "column": 20
          }
        },
        {
          "incidentId": "a826940a-5f2d-4a1a-98d1-c48ec1393f7f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "0f0c35dc-57cb-4194-b6e0-3daee8b8039e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserClaim\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 234,
            "column": 12
          }
        },
        {
          "incidentId": "8d4256f9-7dc4-48d5-9842-76fbc2f08796",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 177,
            "column": 20
          }
        },
        {
          "incidentId": "56a8752c-3d9a-40ef-9794-311cd1b4c385",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 169,
            "column": 12
          }
        },
        {
          "incidentId": "743049e8-6e92-4d5f-a467-2e38f054ee31",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 137,
            "column": 20
          }
        },
        {
          "incidentId": "7e5ad7d1-6164-4fef-b3b3-368efe70e1b6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022RoleId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 133,
            "column": 20
          }
        },
        {
          "incidentId": "c6aa0f7e-9d61-4ea2-a6e4-f2628f700bf7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ClaimType\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 127,
            "column": 20
          }
        },
        {
          "incidentId": "f0d6379a-e3de-4aee-886e-7805baef2649",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.SqlServer, 8.0.6.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
              "protected": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property\u003Cint\u003E(\u0022Id\u0022));",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.SqlServerPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.sqlserverpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 125,
            "column": 20
          }
        },
        {
          "incidentId": "6289614f-ce73-48fe-8c61-917225bab8ff",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoles\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022Id\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022NormalizedName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetRoles\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 92,
            "column": 12
          }
        },
        {
          "incidentId": "37dce402-2811-4f30-a5ab-d0278c262eea",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 20
          }
        },
        {
          "incidentId": "e8d1c6fc-fb7f-4327-b0e3-1ae6c9a074cd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022PhoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 20
          }
        },
        {
          "incidentId": "ff1110fc-1b23-4f98-b175-2f129ce05c55",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003CDateTimeOffset?\u003E(\u0022LockoutEnd\u0022)\r\n                        .HasColumnType(\u0022datetimeoffset\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 20
          }
        },
        {
          "incidentId": "e6277809-5f74-411f-995e-786920325859",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 266,
            "column": 20
          }
        },
        {
          "incidentId": "66784524-cc8e-45d8-a383-9f74718f3395",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencenavigationbuilder",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "08669486-d396-4166-b528-5eca3d9aed7a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 205,
            "column": 20
          }
        },
        {
          "incidentId": "6456602a-ab32-4353-b7bf-efa3ec5b3cc3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022UserId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022UserId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 183,
            "column": 20
          }
        },
        {
          "incidentId": "7ecdd892-e134-415d-82db-f90e71e9cb88",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserClaims\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 163,
            "column": 20
          }
        },
        {
          "incidentId": "85160b89-64ed-4432-a91a-70f4cf87f568",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022ConcurrencyStamp\u0022)\r\n                        .IsConcurrencyToken()\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 94,
            "column": 20
          }
        },
        {
          "incidentId": "a529d60d-ae96-4cfa-acad-c6df073d4cc6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserName\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 72,
            "column": 20
          }
        },
        {
          "incidentId": "7f7a3a61-f013-48cb-bbf9-294fe039373b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics",
            "label": "T:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.multiclassclassificationmetricsstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "09d60627-4b89-4804-9c36-8839a8604275",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "P:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics.MacroAccuracy"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "P:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics.MacroAccuracy",
            "label": "P:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics.MacroAccuracy",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.multiclassclassificationmetricsstatistics.macroaccuracy",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "1b3b2f57-1c92-4470-a05a-4ab41c216f15",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "M:Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportance(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.ITransformer,Microsoft.ML.IDataView,System.String,System.Boolean,System.Nullable{System.Int32},System.Int32)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "M:Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportance(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.ITransformer,Microsoft.ML.IDataView,System.String,System.Boolean,System.Nullable{System.Int32},System.Int32)",
            "label": "M:Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportance(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.ITransformer,Microsoft.ML.IDataView,System.String,System.Boolean,System.Nullable{System.Int32},System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.permutationfeatureimportanceextensions.permutationfeatureimportance",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "32e459e3-3260-4011-819e-2375ce94d5de",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog.mapkeytovalue",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "92d2fb34-b79c-4ada-97d4-ff015b2e4821",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformExtensionsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformExtensionsCatalog",
            "label": "T:Microsoft.ML.TransformExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "3a91cacd-4972-49aa-9c22-346c68696758",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])",
            "label": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog.concatenate",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "94db2c4d-c81a-414b-a1a6-5142ff182f4f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.TextTransforms"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.texttransforms",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "3509d721-58f6-42b5-909a-33f6e68cb22d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateIndex(\r\n                name: \u0022IX_AspNetUserClaims_UserId\u0022,\r\n                table: \u0022AspNetUserClaims\u0022,\r\n                column: \u0022UserId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateIndex(\r\n                name: \u0022IX_AspNetUserClaims_UserId\u0022,\r\n                table: \u0022AspNetUserClaims\u0022,\r\n                column: \u0022UserId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder.CreateIndex(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.migrationbuilder.createindex",
                "isCustom": false
              }
            ],
            "line": 170,
            "column": 12
          }
        },
        {
          "incidentId": "1b53a3a6-4858-453c-a51f-da0fa5406006",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserTokens_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction.cascade",
                "isCustom": false
              }
            ],
            "line": 150,
            "column": 20
          }
        },
        {
          "incidentId": "4805b12b-ae6f-4093-b2f3-a662c113e9ab",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "migrationBuilder.CreateTable(\r\n                name: \u0022AspNetUsers\u0022,\r\n                columns: table =\u003E new\r\n                {\r\n                    Id = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    UserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedUserName = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    Email = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    NormalizedEmail = table.Column\u003Cstring\u003E(type: \u0022nvarchar(256)\u0022, maxLength: 256, nullable: true),\r\n                    EmailConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    PasswordHash = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    SecurityStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    ConcurrencyStamp = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PhoneNumberConfirmed = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    TwoFactorEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    LockoutEnd = table.Column\u003CDateTimeOffset\u003E(type: \u0022datetimeoffset\u0022, nullable: true),\r\n                    LockoutEnabled = table.Column\u003Cbool\u003E(type: \u0022bit\u0022, nullable: false),\r\n                    AccessFailedCount = table.Column\u003Cint\u003E(type: \u0022int\u0022, nullable: false)\r\n                },\r\n                constraints: table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_AspNetUsers\u0022, x =\u003E x.Id);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "label": "M:Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder.Column\u0060\u00601(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean,System.String,System.Boolean,System.Object,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.operations.builders.columnsbuilder.column",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "b0b2d20f-4b7f-4c4a-998a-c8f67896067c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "b28f90cf-74bd-48f1-a1fe-c0f3e1d3694c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 243,
            "column": 12
          }
        },
        {
          "incidentId": "cdfbd1f1-f8de-40e6-98a9-99eafce548bc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "50cdfbaf-6753-4699-bd07-543cf57e7acb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 193,
            "column": 20
          }
        },
        {
          "incidentId": "7b4e724a-0fe0-4ea9-99e9-56b12fe210d6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 146,
            "column": 20
          }
        },
        {
          "incidentId": "85c48ccf-c79b-40af-8fee-a7fef4fcef4b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd()\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 146,
            "column": 20
          }
        },
        {
          "incidentId": "f297ae5e-544e-49d2-8c1a-66a47a0ed4be",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 109,
            "column": 20
          }
        },
        {
          "incidentId": "b5f90f01-cb80-4382-aff1-a342d686ae8f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 84,
            "column": 20
          }
        },
        {
          "incidentId": "a6590c1f-105d-4f1f-af25-8e6d2ddcc22a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022PasswordHash\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 60,
            "column": 20
          }
        },
        {
          "incidentId": "3e4708cc-fd93-4dfb-b626-b79d8abdb7ba",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Email\u0022)\r\n                        .HasMaxLength(256)\r\n                        .HasColumnType(\u0022nvarchar(256)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 39,
            "column": 20
          }
        },
        {
          "incidentId": "27ea08ee-9fe4-4cef-baa4-2943a34e0547",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cint\u003E(\u0022AccessFailedCount\u0022)\r\n                        .HasColumnType(\u0022int\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 20
          }
        },
        {
          "incidentId": "8ae6a732-f375-4b82-8def-8b02a92bd8ac",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.SqlServer, 8.0.6.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
              "protected": "T:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.sqlservermodelbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 25,
            "column": 12
          }
        },
        {
          "incidentId": "1fa208e8-15f9-48b9-b670-f9d707e7a3f0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder\r\n                .HasAnnotation(\u0022ProductVersion\u0022, \u00228.0.0\u0022)\r\n                .HasAnnotation(\u0022Relational:MaxIdentifierLength\u0022, 128);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 21,
            "column": 12
          }
        },
        {
          "incidentId": "b568aff0-9816-4f8b-9738-0d7be98ecebc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "protected override void BuildModel(ModelBuilder modelBuilder)",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "protected override void BuildModel(ModelBuilder modelBuilder)",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 15,
            "column": 8
          }
        },
        {
          "incidentId": "4d037682-813e-48f8-bda9-7cd607e591fe",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "4208860a-87a0-47d2-a6ca-976ec55b7905",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.hasforeignkey",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "8c18edd3-0bcb-48c7-8921-cd726d585841",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "edfc3668-c337-4d5a-9238-ec3d76308f18",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 242,
            "column": 20
          }
        },
        {
          "incidentId": "46e0c076-fe06-406e-808e-11ce02eee4dd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 211,
            "column": 20
          }
        },
        {
          "incidentId": "faa8a68e-15f0-4d0f-862f-0133cf9a3d8a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalpropertybuilderextensions",
                "isCustom": false
              }
            ],
            "line": 208,
            "column": 20
          }
        },
        {
          "incidentId": "d47f8d7c-a760-4ea7-8e3d-e41e9ceca0c6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022UserId\u0022, \u0022RoleId\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 196,
            "column": 20
          }
        },
        {
          "incidentId": "3edc0324-bb7c-40fd-89b1-4c0134002277",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 190,
            "column": 20
          }
        },
        {
          "incidentId": "e173acc4-9d71-46ee-826f-a3c1bae395a1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 185,
            "column": 20
          }
        },
        {
          "incidentId": "354e7214-b0f8-492a-80e1-cd905403df03",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 113,
            "column": 20
          }
        },
        {
          "incidentId": "036ac2c6-3668-41d5-ae35-9b6825770d8f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.keybuilder",
                "isCustom": false
              }
            ],
            "line": 76,
            "column": 20
          }
        },
        {
          "incidentId": "95689641-fbd4-4179-ba91-71c0362e24ba",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.consumption.cs",
            "snippet": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 63,
            "column": 12
          }
        },
        {
          "incidentId": "ec8ed839-f69c-4fd9-a379-e46fe0dca2e1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator",
            "label": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.keytovaluemappingestimator",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "928c8c9c-63f5-4121-80e6-62d5cc3a6802",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.TrainerInputBase.FeatureColumnName"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022SentimentText\u0022,outputColumnName:@\u0022SentimentText\u0022)      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022SentimentText\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Sentiment\u0022,inputColumnName:@\u0022Sentiment\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(new LbfgsMaximumEntropyMulticlassTrainer.Options(){L1Regularization=0.03125F,L2Regularization=0.3752415F,LabelColumnName=@\u0022Sentiment\u0022,FeatureColumnName=@\u0022Features\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.TrainerInputBase.FeatureColumnName",
            "label": "F:Microsoft.ML.Trainers.TrainerInputBase.FeatureColumnName",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.trainerinputbase.featurecolumnname",
                "isCustom": false
              }
            ],
            "line": 91,
            "column": 12
          }
        },
        {
          "incidentId": "3bbc8ed8-e50e-4332-89e0-3c12f21efbc0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataViewSchema, fs);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "mlContext.Model.Save(model, dataViewSchema, fs);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 64,
            "column": 16
          }
        },
        {
          "incidentId": "6950e71f-82c7-41d5-9e47-8d98d3c8c9ce",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = LoadIDataViewFromFile(mlContext, inputDataFilePath, separatorChar, hasHeader, allowQuoting);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "Blazor.Tools\\MLModels\\SentimentModel.training.cs",
            "snippet": "var data = LoadIDataViewFromFile(mlContext, inputDataFilePath, separatorChar, hasHeader, allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 12
          }
        },
        {
          "incidentId": "23fbb0e9-e115-4c68-8a49-246c62a7008a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetUserClaims_AspNetUsers_UserId\u0022,\r\n                        column: x =\u003E x.UserId,\r\n                        principalTable: \u0022AspNetUsers\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction.cascade",
                "isCustom": false
              }
            ],
            "line": 86,
            "column": 20
          }
        },
        {
          "incidentId": "cf6498da-2675-4d1f-8be8-ed635b0ccf9b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
              "protected": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.cs",
            "snippet": "table.ForeignKey(\r\n                        name: \u0022FK_AspNetRoleClaims_AspNetRoles_RoleId\u0022,\r\n                        column: x =\u003E x.RoleId,\r\n                        principalTable: \u0022AspNetRoles\u0022,\r\n                        principalColumn: \u0022Id\u0022,\r\n                        onDelete: ReferentialAction.Cascade);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "label": "T:Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.migrations.referentialaction",
                "isCustom": false
              }
            ],
            "line": 65,
            "column": 20
          }
        },
        {
          "incidentId": "8acc6c45-d521-4c87-a3a2-e372afbc6938",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.ondelete",
                "isCustom": false
              }
            ],
            "line": 245,
            "column": 20
          }
        },
        {
          "incidentId": "1ec3c9b3-ee72-4c5d-8233-c7332ed53caf",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 243,
            "column": 12
          }
        },
        {
          "incidentId": "f91491c5-3d56-4896-b170-e36d22245c99",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "label": "F:Microsoft.EntityFrameworkCore.DeleteBehavior.Cascade",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior.cascade",
                "isCustom": false
              }
            ],
            "line": 236,
            "column": 20
          }
        },
        {
          "incidentId": "56284641-8dcb-4445-9560-21dc39e9f6a3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "9378b421-a9dc-4170-9694-39b5baccd3cc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder.isrequired",
                "isCustom": false
              }
            ],
            "line": 227,
            "column": 20
          }
        },
        {
          "incidentId": "2f8d1e8b-fbee-4d99-940b-953d1019250a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 203,
            "column": 20
          }
        },
        {
          "incidentId": "b4e8479e-5709-481d-a629-0ad244d2f4eb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022RoleId\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022RoleId\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.hasindex",
                "isCustom": false
              }
            ],
            "line": 201,
            "column": 20
          }
        },
        {
          "incidentId": "0804b815-f158-4234-b5db-e7ea00de2a4e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 193,
            "column": 20
          }
        },
        {
          "incidentId": "671eaec5-be73-4747-9d2b-8094ff5b215f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022UserId\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022UserId\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 186,
            "column": 20
          }
        },
        {
          "incidentId": "98e58f72-f042-4aad-bc0e-f609902f002f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions.hasdatabasename",
                "isCustom": false
              }
            ],
            "line": 111,
            "column": 20
          }
        },
        {
          "incidentId": "5bbc8b46-f7d3-45bc-931a-c7c008e6d65f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022LockoutEnabled\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 20
          }
        },
        {
          "incidentId": "df2b8a31-1294-4ed0-a8b0-0179e80ac4b0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\00000000000000_CreateIdentitySchema.Designer.cs",
            "snippet": "b.Property\u003Cbool\u003E(\u0022EmailConfirmed\u0022)\r\n                        .HasColumnType(\u0022bit\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property\u0060\u00601(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.property",
                "isCustom": false
              }
            ],
            "line": 43,
            "column": 20
          }
        },
        {
          "incidentId": "323e9540-bfa6-4bca-b4d5-97a3cccd47f1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Abstractions, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.DeleteBehavior"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "label": "T:Microsoft.EntityFrameworkCore.DeleteBehavior",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.deletebehavior",
                "isCustom": false
              }
            ],
            "line": 257,
            "column": 20
          }
        },
        {
          "incidentId": "eeb51223-7746-4a2a-9353-941dc6c35134",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 251,
            "column": 20
          }
        },
        {
          "incidentId": "2fbe224a-fc21-486f-9539-172834f24ad6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "3ff444f8-5f3d-4ac0-93eb-716b0901a01b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Blazor.Tools.Data.ApplicationUser\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022UserId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 233,
            "column": 20
          }
        },
        {
          "incidentId": "bfbbec8d-e2a2-4506-978e-31471e971712",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasOne(\u0022Microsoft.AspNetCore.Identity.IdentityRole\u0022, null)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022RoleId\u0022)\r\n                        .OnDelete(DeleteBehavior.Cascade)\r\n                        .IsRequired();",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.referencecollectionbuilder",
                "isCustom": false
              }
            ],
            "line": 224,
            "column": 20
          }
        },
        {
          "incidentId": "7ecaa50d-c74a-4030-a0df-d06c9e54a420",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 217,
            "column": 20
          }
        },
        {
          "incidentId": "6027e1c2-dba6-4e66-a3c9-d98713678dbf",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);\r\n                });",
              "protected": "T:Microsoft.EntityFrameworkCore.ModelBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserToken\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Value\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022UserId\u0022, \u0022LoginProvider\u0022, \u0022Name\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserTokens\u0022, (string)null);\r\n                });",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.ModelBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder",
                "isCustom": false
              }
            ],
            "line": 203,
            "column": 12
          }
        },
        {
          "incidentId": "4ec17fd8-eec4-4b04-bb9f-4df3a248694d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetUserRoles\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder",
                "isCustom": false
              }
            ],
            "line": 200,
            "column": 20
          }
        },
        {
          "incidentId": "5b3ace2f-fc81-426a-80d8-191136b34d21",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022UserId\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022UserId\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 183,
            "column": 20
          }
        },
        {
          "incidentId": "be68f130-e929-4243-9467-b7f754b6096e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);\r\n                });",
              "protected": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "modelBuilder.Entity(\u0022Microsoft.AspNetCore.Identity.IdentityUserLogin\u003Cstring\u003E\u0022, b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LoginProvider\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderKey\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022ProviderDisplayName\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022UserId\u0022)\r\n                        .IsRequired()\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.HasKey(\u0022LoginProvider\u0022, \u0022ProviderKey\u0022);\r\n\r\n                    b.HasIndex(\u0022UserId\u0022);\r\n\r\n                    b.ToTable(\u0022AspNetUserLogins\u0022, (string)null);\r\n                });",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "label": "M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder.entity",
                "isCustom": false
              }
            ],
            "line": 166,
            "column": 12
          }
        },
        {
          "incidentId": "19a63ebd-098d-4367-8630-638a011b9a54",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetRoleClaims\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 138,
            "column": 20
          }
        },
        {
          "incidentId": "34981782-9f06-481e-b4d3-4d17abdad9ec",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022RoleId\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022RoleId\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 136,
            "column": 20
          }
        },
        {
          "incidentId": "675d261d-4f88-4814-8575-1472b61a67db",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasKey(\u0022Id\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasKey(\u0022Id\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "label": "M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.entitytypebuilder.haskey",
                "isCustom": false
              }
            ],
            "line": 134,
            "column": 20
          }
        },
        {
          "incidentId": "28149a0e-e741-4b8b-a7ae-bd874e0ae68f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
              "protected": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.ToTable(\u0022AspNetRoles\u0022, (string)null);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "label": "T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalentitytypebuilderextensions",
                "isCustom": false
              }
            ],
            "line": 113,
            "column": 20
          }
        },
        {
          "incidentId": "1754031e-5c78-4b9f-8434-2707fbc178d7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
              "protected": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022RoleNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedName] IS NOT NULL\u0022);",
            "protectedSnippet": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "label": "T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.metadata.builders.indexbuilder",
                "isCustom": false
              }
            ],
            "line": 108,
            "column": 20
          }
        },
        {
          "incidentId": "8d3ca028-8530-4841-829c-2be95ca72a75",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedUserName\u0022)\r\n                        .IsUnique()\r\n                        .HasDatabaseName(\u0022UserNameIndex\u0022)\r\n                        .HasFilter(\u0022[NormalizedUserName] IS NOT NULL\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions.hasdatabasename",
                "isCustom": false
              }
            ],
            "line": 81,
            "column": 20
          }
        },
        {
          "incidentId": "c6b1d12f-cd6b-4742-af26-03c0d7c50e31",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.EntityFrameworkCore.Relational, 9.0.0-preview.6.24302.4.",
          "projectPath": "Blazor.Tools\\Blazor.Tools.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
              "protected": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)"
            },
            "kind": "File",
            "path": "Blazor.Tools\\Data\\Migrations\\ApplicationDbContextModelSnapshot.cs",
            "snippet": "b.HasIndex(\u0022NormalizedEmail\u0022)\r\n                        .HasDatabaseName(\u0022EmailIndex\u0022);",
            "protectedSnippet": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "label": "M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.relationalindexbuilderextensions.hasdatabasename",
                "isCustom": false
              }
            ],
            "line": 78,
            "column": 20
          }
        }
      ]
    },
    {
      "path": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
      "startingProject": true,
      "issues": 3,
      "storyPoints": 12,
      "ruleInstances": [
        {
          "incidentId": "b8fc7018-d171-44df-9ab6-75503230d311",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "OpenTelemetry.Instrumentation.AspNetCore, 1.8.1\n\nRecommendation:\n\nOpenTelemetry.Instrumentation.AspNetCore 1.9.0",
              "protected": "OpenTelemetry.Instrumentation.AspNetCore, 1.8.1\n\nRecommendation:\n\nOpenTelemetry.Instrumentation.AspNetCore 1.9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
            "snippet": "OpenTelemetry.Instrumentation.AspNetCore, 1.8.1\n\nRecommendation:\n\nOpenTelemetry.Instrumentation.AspNetCore 1.9.0",
            "protectedSnippet": "OpenTelemetry.Instrumentation.AspNetCore, 1.8.1\n\nRecommendation:\n\nOpenTelemetry.Instrumentation.AspNetCore 1.9.0",
            "label": "OpenTelemetry.Instrumentation.AspNetCore 1.8.1"
          }
        },
        {
          "incidentId": "1a94e2bc-07dc-488b-9f2f-d95e89598981",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.Extensions.Http.Resilience, 8.3.0\n\nRecommendation:\n\nMicrosoft.Extensions.Http.Resilience 9.0.0-preview.7.24412.10",
              "protected": "Microsoft.Extensions.Http.Resilience, 8.3.0\n\nRecommendation:\n\nMicrosoft.Extensions.Http.Resilience 9.0.0-preview.7.24412.10"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
            "snippet": "Microsoft.Extensions.Http.Resilience, 8.3.0\n\nRecommendation:\n\nMicrosoft.Extensions.Http.Resilience 9.0.0-preview.7.24412.10",
            "protectedSnippet": "Microsoft.Extensions.Http.Resilience, 8.3.0\n\nRecommendation:\n\nMicrosoft.Extensions.Http.Resilience 9.0.0-preview.7.24412.10",
            "label": "Microsoft.Extensions.Http.Resilience 8.3.0"
          }
        },
        {
          "incidentId": "11eb3cac-4896-41d9-b820-2f1d5da262a2",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Microsoft.Extensions.ServiceDiscovery, 8.0.0\n\nRecommendation:\n\nMicrosoft.Extensions.ServiceDiscovery 8.2.0",
              "protected": "Microsoft.Extensions.ServiceDiscovery, 8.0.0\n\nRecommendation:\n\nMicrosoft.Extensions.ServiceDiscovery 8.2.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
            "snippet": "Microsoft.Extensions.ServiceDiscovery, 8.0.0\n\nRecommendation:\n\nMicrosoft.Extensions.ServiceDiscovery 8.2.0",
            "protectedSnippet": "Microsoft.Extensions.ServiceDiscovery, 8.0.0\n\nRecommendation:\n\nMicrosoft.Extensions.ServiceDiscovery 8.2.0",
            "label": "Microsoft.Extensions.ServiceDiscovery 8.0.0"
          }
        },
        {
          "incidentId": "ab1daf45-9f0c-47ed-a0fa-1e5c1c2e5a6a",
          "ruleId": "NuGet.0002",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "OpenTelemetry.Instrumentation.Http, 1.8.1\n\nRecommendation:\n\nOpenTelemetry.Instrumentation.Http 1.9.0",
              "protected": "OpenTelemetry.Instrumentation.Http, 1.8.1\n\nRecommendation:\n\nOpenTelemetry.Instrumentation.Http 1.9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
            "snippet": "OpenTelemetry.Instrumentation.Http, 1.8.1\n\nRecommendation:\n\nOpenTelemetry.Instrumentation.Http 1.9.0",
            "protectedSnippet": "OpenTelemetry.Instrumentation.Http, 1.8.1\n\nRecommendation:\n\nOpenTelemetry.Instrumentation.Http 1.9.0",
            "label": "OpenTelemetry.Instrumentation.Http 1.8.1"
          }
        },
        {
          "incidentId": "5bfe42ad-a347-442a-bdb5-d20e3e5f6b9f",
          "ruleId": "Project.0002",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        },
        {
          "incidentId": "e9fb8714-906a-49c2-9b67-08e56b1d6cc8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Extensions.ServiceDiscovery, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Services.AddServiceDiscovery();",
              "protected": "M:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryServiceCollectionExtensions.AddServiceDiscovery(Microsoft.Extensions.DependencyInjection.IServiceCollection)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Extensions.cs",
            "snippet": "builder.Services.AddServiceDiscovery();",
            "protectedSnippet": "M:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryServiceCollectionExtensions.AddServiceDiscovery(Microsoft.Extensions.DependencyInjection.IServiceCollection)",
            "label": "M:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryServiceCollectionExtensions.AddServiceDiscovery(Microsoft.Extensions.DependencyInjection.IServiceCollection)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.servicediscoveryservicecollectionextensions.addservicediscovery",
                "isCustom": false
              }
            ],
            "line": 22,
            "column": 8
          }
        },
        {
          "incidentId": "3045cf5b-6882-42d0-933e-9ff857774c36",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Extensions.ServiceDiscovery, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "builder.Services.AddServiceDiscovery();",
              "protected": "T:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryServiceCollectionExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Extensions.cs",
            "snippet": "builder.Services.AddServiceDiscovery();",
            "protectedSnippet": "T:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryServiceCollectionExtensions",
            "label": "T:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryServiceCollectionExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.servicediscoveryservicecollectionextensions",
                "isCustom": false
              }
            ],
            "line": 22,
            "column": 8
          }
        },
        {
          "incidentId": "2e086c66-49e0-49e3-8050-e7d6f76f2e5c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Extensions.Http.Resilience, 9.0.0-preview.5.24301.1.",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "http.AddStandardResilienceHandler();",
              "protected": "M:Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions.AddStandardResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Extensions.cs",
            "snippet": "http.AddStandardResilienceHandler();",
            "protectedSnippet": "M:Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions.AddStandardResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)",
            "label": "M:Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions.AddStandardResilienceHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.resiliencehttpclientbuilderextensions.addstandardresiliencehandler",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "16d4d11c-70de-4df9-bf42-bc4649c878e8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Extensions.Http.Resilience, 9.0.0-preview.5.24301.1.",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "http.AddStandardResilienceHandler();",
              "protected": "T:Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Extensions.cs",
            "snippet": "http.AddStandardResilienceHandler();",
            "protectedSnippet": "T:Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder",
            "label": "T:Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.http.resilience.ihttpstandardresiliencepipelinebuilder",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "6c90fc27-53d9-4762-99e4-e73caf13c66e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Extensions.Http.Resilience, 9.0.0-preview.5.24301.1.",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "http.AddStandardResilienceHandler();",
              "protected": "T:Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Extensions.cs",
            "snippet": "http.AddStandardResilienceHandler();",
            "protectedSnippet": "T:Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions",
            "label": "T:Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.resiliencehttpclientbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 27,
            "column": 12
          }
        },
        {
          "incidentId": "d01ed7ad-193f-41a3-8426-46d13c135689",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Extensions.ServiceDiscovery, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "http.AddServiceDiscovery();",
              "protected": "M:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryHttpClientBuilderExtensions.AddServiceDiscovery(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Extensions.cs",
            "snippet": "http.AddServiceDiscovery();",
            "protectedSnippet": "M:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryHttpClientBuilderExtensions.AddServiceDiscovery(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)",
            "label": "M:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryHttpClientBuilderExtensions.AddServiceDiscovery(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.servicediscoveryhttpclientbuilderextensions.addservicediscovery",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 12
          }
        },
        {
          "incidentId": "2d49bc62-376e-4e8b-9ad7-dd6b42c8dec5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.Extensions.ServiceDiscovery, 9.0.0-preview.4.24229.9.",
          "projectPath": "Blazor.Tools.ServiceDefaults\\Blazor.Tools.ServiceDefaults.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "http.AddServiceDiscovery();",
              "protected": "T:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryHttpClientBuilderExtensions"
            },
            "kind": "File",
            "path": "Blazor.Tools.ServiceDefaults\\Extensions.cs",
            "snippet": "http.AddServiceDiscovery();",
            "protectedSnippet": "T:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryHttpClientBuilderExtensions",
            "label": "T:Microsoft.Extensions.DependencyInjection.ServiceDiscoveryHttpClientBuilderExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.servicediscoveryhttpclientbuilderextensions",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 12
          }
        }
      ]
    },
    {
      "path": "MyPackage\\MyPackage.csproj",
      "startingProject": true,
      "issues": 1,
      "storyPoints": 1,
      "ruleInstances": [
        {
          "incidentId": "3ca53328-3925-4285-a00c-af1059714286",
          "ruleId": "Project.0002",
          "projectPath": "MyPackage\\MyPackage.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "MyPackage\\MyPackage.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        }
      ]
    },
    {
      "path": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
      "startingProject": true,
      "issues": 2,
      "storyPoints": 125,
      "ruleInstances": [
        {
          "incidentId": "f381007e-7064-4850-b344-1774f33f92c6",
          "ruleId": "Project.0002",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        },
        {
          "incidentId": "9affb6e7-3140-4a1d-91f6-a3eb6336299a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var labelColumn = schema.GetColumnOrNull(\u0022Machine failure\u0022);",
              "protected": "M:Microsoft.ML.DataViewSchema.GetColumnOrNull(System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "var labelColumn = schema.GetColumnOrNull(\u0022Machine failure\u0022);",
            "protectedSnippet": "M:Microsoft.ML.DataViewSchema.GetColumnOrNull(System.String)",
            "label": "M:Microsoft.ML.DataViewSchema.GetColumnOrNull(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema.getcolumnornull",
                "isCustom": false
              }
            ],
            "line": 152,
            "column": 12
          }
        },
        {
          "incidentId": "190e5715-e1e4-461b-80a8-bc24dfd29bf7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator",
            "label": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.keytovaluemappingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "3016752f-af22-45b1-a3d8-180615656800",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers",
            "label": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog.trainers",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "9d0e7737-fc35-41d2-97cd-5e1777919e50",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversiontransforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "a01afae3-d512-4418-8d04-429b351a50a4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.ConversionsExtensionsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "label": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "03a1c2b5-9b31-4b03-a3ec-c5f2fe939e43",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TextCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TextCatalog",
            "label": "T:Microsoft.ML.TextCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "0f65fd80-f559-41ff-89b1-11306e6f6327",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedTrainData = model.Transform(trainData);",
              "protected": "M:Microsoft.ML.ITransformer.Transform(Microsoft.ML.IDataView)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var preprocessedTrainData = model.Transform(trainData);",
            "protectedSnippet": "M:Microsoft.ML.ITransformer.Transform(Microsoft.ML.IDataView)",
            "label": "M:Microsoft.ML.ITransformer.Transform(Microsoft.ML.IDataView)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer.transform",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 12
          }
        },
        {
          "incidentId": "ebacf4c9-50a1-4697-bf34-94dcf9db1a43",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "labelColumn.Value.GetKeyValues(ref keyNames);",
              "protected": "T:Microsoft.ML.DataViewSchema.Column"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "labelColumn.Value.GetKeyValues(ref keyNames);",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema.Column",
            "label": "T:Microsoft.ML.DataViewSchema.Column",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema.column",
                "isCustom": false
              }
            ],
            "line": 160,
            "column": 12
          }
        },
        {
          "incidentId": "70c9bcc3-8b59-4e3b-8f6a-f4853af8bc96",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase",
            "label": "T:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.boosterparameterbase.optionsbase",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "e9df6eaa-35b3-4f7e-8aa2-4ae9328421d1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers",
            "label": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog.multiclassclassificationtrainers",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "2ca31e4e-ce02-4171-bfa3-76f4fd2271ed",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformExtensionsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformExtensionsCatalog",
            "label": "T:Microsoft.ML.TransformExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "6459cbf2-898a-45fd-a5e3-f4787973908a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataViewSchema, fs);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "mlContext.Model.Save(model, dataViewSchema, fs);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.save",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 16
          }
        },
        {
          "incidentId": "1a56c739-f803-43d1-8d75-34f5645144a7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 8
          }
        },
        {
          "incidentId": "35ee7926-1079-45c0-85c2-a5942d74c1f7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var model = RetrainModel(mlContext, data);",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var model = RetrainModel(mlContext, data);",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "d29cad99-f6aa-4eac-8729-598c008b3d30",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 8
          }
        },
        {
          "incidentId": "501a08ac-6fa4-4d03-b612-4bea2261177b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedTrainData = model.Transform(trainData);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var preprocessedTrainData = model.Transform(trainData);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 12
          }
        },
        {
          "incidentId": "2b8d68b0-b4d2-4a8e-bbec-0de7c4c361e7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "M:Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportance(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.ITransformer,Microsoft.ML.IDataView,System.String,System.Boolean,System.Nullable{System.Int32},System.Int32)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "M:Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportance(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.ITransformer,Microsoft.ML.IDataView,System.String,System.Boolean,System.Nullable{System.Int32},System.Int32)",
            "label": "M:Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportance(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.ITransformer,Microsoft.ML.IDataView,System.String,System.Boolean,System.Nullable{System.Int32},System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.permutationfeatureimportanceextensions.permutationfeatureimportance",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "a19c7f4c-282a-4442-8859-797cf637b2b1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog.mapkeytovalue",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "78140733-4eb2-45eb-af8b-921d520531fa",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L1Regularization"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L1Regularization",
            "label": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L1Regularization",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.boosterparameterbase.optionsbase.l1regularization",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "f2c9b1ca-9990-4160-bb35-052da5a5255a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataViewSchema, fs);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "mlContext.Model.Save(model, dataViewSchema, fs);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 16
          }
        },
        {
          "incidentId": "3dc5278a-6e7e-4747-bf12-a772123fc8a5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics",
            "label": "T:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.multiclassclassificationmetricsstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "40c4a3df-5612-496a-b739-142cc2fd9df8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "T:Microsoft.ML.PermutationFeatureImportanceExtensions"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "T:Microsoft.ML.PermutationFeatureImportanceExtensions",
            "label": "T:Microsoft.ML.PermutationFeatureImportanceExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.permutationfeatureimportanceextensions",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "de6e081c-8256-4000-a4df-df816f073fce",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "P:Microsoft.ML.MLContext.MulticlassClassification"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "label": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.multiclassclassification",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "7fcce9a4-d622-4fed-b036-fa8c5e5987d4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversiontransforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "d48d85d1-cd60-4912-9562-57bf4d0117e6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.SubsampleFraction"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.SubsampleFraction",
            "label": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.SubsampleFraction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.boosterparameterbase.optionsbase.subsamplefraction",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "9434f4a1-ce51-4426-ab19-1686f08c15bd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.LightGbmExtensions"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.LightGbmExtensions",
            "label": "T:Microsoft.ML.LightGbmExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.lightgbmextensions",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "d96fd0e5-7508-4e42-940d-116e9963f8f2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.InputOutputColumnPair"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.InputOutputColumnPair",
            "label": "T:Microsoft.ML.InputOutputColumnPair",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "87b36fcf-91e2-47f4-bf9a-0b74d8d24136",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.ExtensionsCatalog.ReplaceMissingValues(Microsoft.ML.TransformsCatalog,Microsoft.ML.InputOutputColumnPair[],Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode,System.Boolean)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.ExtensionsCatalog.ReplaceMissingValues(Microsoft.ML.TransformsCatalog,Microsoft.ML.InputOutputColumnPair[],Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode,System.Boolean)",
            "label": "M:Microsoft.ML.ExtensionsCatalog.ReplaceMissingValues(Microsoft.ML.TransformsCatalog,Microsoft.ML.InputOutputColumnPair[],Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode,System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.extensionscatalog.replacemissingvalues",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "9601ae24-4f48-4f5d-b38e-33e890839e9f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "7225c782-790b-4450-a3b7-285a950164ac",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.CategoricalCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.CategoricalCatalog",
            "label": "T:Microsoft.ML.CategoricalCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.categoricalcatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "3dbbfef5-c454-4262-82a2-8db0d0261a20",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "T:Microsoft.ML.MulticlassClassificationCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "label": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "4a7e10f4-c94e-40ea-8532-d93314ce2ad9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.MulticlassClassification"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "label": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.multiclassclassification",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "dd5e8339-5c9e-41f5-8e99-43c271f01f67",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer",
            "label": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.lightgbmmulticlasstrainer",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "333c410a-53fd-4394-8cd5-64cfd2e8d640",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "8ee6eac6-43b0-4771-9986-21895f60d45b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "label": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "73e06774-0868-4121-997d-8301076b217c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 59,
            "column": 8
          }
        },
        {
          "incidentId": "86a9180c-0c96-4c2d-9bd0-5b938773da27",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 16
          }
        },
        {
          "incidentId": "1cc89188-f6b5-4ad9-a583-975a69edbe24",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "P:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics.MacroAccuracy"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "P:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics.MacroAccuracy",
            "label": "P:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics.MacroAccuracy",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.multiclassclassificationmetricsstatistics.macroaccuracy",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "43db78ad-ad61-459d-97cf-ac5eb0f60138",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "cbe765c4-51e0-4cf4-b3a3-a6df3d689a07",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.String,Microsoft.ML.DataViewSchema@)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.String,Microsoft.ML.DataViewSchema@)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.String,Microsoft.ML.DataViewSchema@)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.load",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 12
          }
        },
        {
          "incidentId": "8f5f78fa-eb6c-4637-be7f-1c649b080216",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Conversion"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "label": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversion",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "d8b819db-1524-4fc9-9ff7-8adf5d4cd893",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.TextTransforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.texttransforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "b476d0b2-7316-4585-96d0-14d66d6bb5d1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.InputOutputColumnPair"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.InputOutputColumnPair",
            "label": "T:Microsoft.ML.InputOutputColumnPair",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "56908c79-6002-4f09-a7ca-c1926dabcf3b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "label": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "3d9597ee-ebee-4ef8-9ed7-166a0e2f1da7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.LearningPipelineExtensions"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.LearningPipelineExtensions",
            "label": "T:Microsoft.ML.LearningPipelineExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.learningpipelineextensions",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "1677cd26-b255-4c86-a549-39f63802304c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "T:Microsoft.ML.DataOperationsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.DataOperationsCatalog",
            "label": "T:Microsoft.ML.DataOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataoperationscatalog",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 12
          }
        },
        {
          "incidentId": "94362196-b69b-4016-a220-4843315ca078",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "26b60928-41c0-4b19-8dc2-e5db3bcfa94e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static IEstimator\u003CITransformer\u003E BuildPipeline(MLContext mlContext)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static IEstimator\u003CITransformer\u003E BuildPipeline(MLContext mlContext)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 90,
            "column": 8
          }
        },
        {
          "incidentId": "f7dbbca8-57c8-4bff-883f-3ab6c1a3b684",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.InputOutputColumnPair"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.InputOutputColumnPair",
            "label": "T:Microsoft.ML.InputOutputColumnPair",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "0fe66209-e782-48c2-84a5-3625f074ec51",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator",
            "label": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.onehotencodingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "e1aa4877-59c9-4eb8-8540-cdb843999e6a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 8
          }
        },
        {
          "incidentId": "fe203944-45bf-4546-8b9d-bb9a252e8eac",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 8
          }
        },
        {
          "incidentId": "70497b95-09f9-4753-984c-dd01e7e96f74",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "P:Microsoft.ML.Data.MetricStatistics.Mean"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "label": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics.mean",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "466e9ae0-a105-4078-a96e-782543103f9f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 12
          }
        },
        {
          "incidentId": "f9e63d6c-8e48-4ef9-bc31-99dcd4b76809",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.TrainerInputBaseWithLabel.LabelColumnName"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.TrainerInputBaseWithLabel.LabelColumnName",
            "label": "F:Microsoft.ML.Trainers.TrainerInputBaseWithLabel.LabelColumnName",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.trainerinputbasewithlabel.labelcolumnname",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "82659ad3-f1c8-4db3-b9a2-998afb4ffba3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind",
            "label": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.onehotencodingestimator.outputkind",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "ff4e8095-cea6-4a99-84a6-18f619d2342e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "5c46f521-b4ae-4bd9-91d8-5da395974795",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 12
          }
        },
        {
          "incidentId": "59273e4d-c3fd-4090-a8f7-6f8b8b66bcd3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.TrainerInputBase.FeatureColumnName"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.TrainerInputBase.FeatureColumnName",
            "label": "F:Microsoft.ML.Trainers.TrainerInputBase.FeatureColumnName",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.trainerinputbase.featurecolumnname",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "d568c402-4d15-4821-9a36-46afe9529a57",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "label": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "3873b7a2-5dd5-4607-ac5b-d9b316043cd9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 8
          }
        },
        {
          "incidentId": "012b5e41-0ec8-4f15-8c19-2b2916e18676",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
              "protected": "P:Microsoft.ML.Data.MetricStatistics.Mean"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
            "protectedSnippet": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "label": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics.mean",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 16
          }
        },
        {
          "incidentId": "c6dab3cd-112f-4bdc-ac4c-d5fe43b45af5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 8
          }
        },
        {
          "incidentId": "468f7f2d-3db1-449c-8d28-ed2f1eae02b6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options",
            "label": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.lightgbmmulticlasstrainer.options",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "ca5b7af8-f747-4b2e-b3e3-561bf0d27f3d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator",
            "label": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.valuetokeymappingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "e45f691e-8216-4e05-8155-bf0cb2679596",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)",
            "label": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog.mapvaluetokey",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "c15f4f02-2d16-48a7-bb40-91999ddd08db",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "f98aab8c-805d-4e74-8521-308d33ed4b98",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.InputOutputColumnPair"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.InputOutputColumnPair",
            "label": "T:Microsoft.ML.InputOutputColumnPair",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "469338e0-7aea-4f22-94ea-76490271a8f8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.ExtensionsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.ExtensionsCatalog",
            "label": "T:Microsoft.ML.ExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.extensionscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "fe727f83-04de-491b-8e16-3227d28a4b38",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.CategoricalTransforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.CategoricalTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.CategoricalTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.categoricaltransforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "42ee24a3-084a-402e-92b7-7e892100452a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "DataViewSchema dataViewSchema = data.Schema;",
              "protected": "T:Microsoft.ML.DataViewSchema"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "DataViewSchema dataViewSchema = data.Schema;",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema",
            "label": "T:Microsoft.ML.DataViewSchema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "a6371935-8597-43d7-83b6-56ee735c296b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 12
          }
        },
        {
          "incidentId": "77085e86-8c9d-4648-9f7d-3f049fedd73d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 103,
            "column": 12
          }
        },
        {
          "incidentId": "56c2a4be-ed0e-4944-ab27-bd4fdd788bc9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "7634c5fc-c325-4dcb-9197-260c53a00e32",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "c376cf5d-7248-46a4-8273-6aa972c72a80",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])",
            "label": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog.concatenate",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "520157bd-cc2a-4ea2-84c0-614b99a5d445",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.featurizetext",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "b394caba-fd1e-4825-ab31-0181a2b42c03",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "35973695-efc6-4ac0-90c7-a65c25d0634d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 12
          }
        },
        {
          "incidentId": "17809186-2be9-4cdc-8ae9-3df5c8a32b68",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.createpredictionengine",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 12
          }
        },
        {
          "incidentId": "2adcacb6-31ed-43db-b4dc-38c99c06886d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "35c0972f-fbf3-4229-a5be-5175cff1559a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.InputOutputColumnPair"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.InputOutputColumnPair",
            "label": "T:Microsoft.ML.InputOutputColumnPair",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "38b58eb1-9ea7-4675-90e7-33650b4ab3c3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "label": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "080cf227-082d-4969-9aa8-28f648a16223",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.MissingValueReplacingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.MissingValueReplacingEstimator",
            "label": "T:Microsoft.ML.Transforms.MissingValueReplacingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.missingvaluereplacingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "ef243a95-b81b-42ba-8ff6-0a655b54e8c5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 59,
            "column": 8
          }
        },
        {
          "incidentId": "e6dffbbc-b413-400e-9d3e-15be8dd6878e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = LoadIDataViewFromFile(mlContext, inputDataFilePath, separatorChar, hasHeader, allowQuoting);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var data = LoadIDataViewFromFile(mlContext, inputDataFilePath, separatorChar, hasHeader, allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 12
          }
        },
        {
          "incidentId": "5012e4e1-8296-4e6c-8e55-f9ac29a3bd99",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "labelColumn.Value.GetKeyValues(ref keyNames);",
              "protected": "T:Microsoft.ML.Data.SchemaAnnotationsExtensions"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "labelColumn.Value.GetKeyValues(ref keyNames);",
            "protectedSnippet": "T:Microsoft.ML.Data.SchemaAnnotationsExtensions",
            "label": "T:Microsoft.ML.Data.SchemaAnnotationsExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemaannotationsextensions",
                "isCustom": false
              }
            ],
            "line": 160,
            "column": 12
          }
        },
        {
          "incidentId": "acff83ae-3993-476d-b6ef-a92dd5aa0e7c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "b6ed3979-2dcf-48c5-95f1-93c58e17c942",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Categorical"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Categorical",
            "label": "P:Microsoft.ML.TransformsCatalog.Categorical",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.categorical",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "7d1086c8-aace-4470-8150-e413572e4c49",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 8
          }
        },
        {
          "incidentId": "d0b26b8d-c727-4221-b76e-3814c49fd232",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "T:Microsoft.ML.TextLoaderSaverCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "label": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 12
          }
        },
        {
          "incidentId": "fd081281-9cf3-4d2b-9237-12a9562a6798",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 12
          }
        },
        {
          "incidentId": "709ae3ed-617b-4fe1-a6dd-aad621d1db3e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "label": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog.loadfromtextfile",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 12
          }
        },
        {
          "incidentId": "bd89ee43-ccd9-4bca-a574-b4b62e00e249",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var schema = PredictEngine.Value.OutputSchema;",
              "protected": "T:Microsoft.ML.DataViewSchema"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "var schema = PredictEngine.Value.OutputSchema;",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema",
            "label": "T:Microsoft.ML.DataViewSchema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema",
                "isCustom": false
              }
            ],
            "line": 150,
            "column": 12
          }
        },
        {
          "incidentId": "4057b7fe-9c3a-4018-8c4f-401b2947af0a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 12
          }
        },
        {
          "incidentId": "9e736bac-b7c6-4d8a-a30b-4208d5b59d79",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 12
          }
        },
        {
          "incidentId": "473f67c0-0cda-4242-9597-3ea2c8ec2941",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "1e8d3e0f-53a7-4d03-839b-112c99693fab",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options",
            "label": "T:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.gradientbooster.options",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "f87595f6-732c-4678-a727-50c14c39c8e3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.#ctor"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.#ctor",
            "label": "M:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.#ctor",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.lightgbmmulticlasstrainer.options.options",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "32231c58-51b0-48d7-a2fd-8fad785d6a8e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator",
            "label": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.columnconcatenatingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "72aa40f5-fea4-4a45-af10-09e1200965af",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "76335d85-0e7d-4e75-ba14-212f264db610",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.CategoricalCatalog.OneHotEncoding(Microsoft.ML.TransformsCatalog.CategoricalTransforms,System.String,System.String,Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,Microsoft.ML.IDataView)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.CategoricalCatalog.OneHotEncoding(Microsoft.ML.TransformsCatalog.CategoricalTransforms,System.String,System.String,Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,Microsoft.ML.IDataView)",
            "label": "M:Microsoft.ML.CategoricalCatalog.OneHotEncoding(Microsoft.ML.TransformsCatalog.CategoricalTransforms,System.String,System.String,Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,Microsoft.ML.IDataView)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.categoricalcatalog.onehotencoding",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "fb4c7d33-39e1-4548-84c4-fbd72d6d9f0e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var model = pipeline.Fit(trainData);",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var model = pipeline.Fit(trainData);",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 80,
            "column": 12
          }
        },
        {
          "incidentId": "b607e250-2852-4a10-962b-29a29512e3ff",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "P:Microsoft.ML.MLContext.Data"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Data",
            "label": "P:Microsoft.ML.MLContext.Data",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.data",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 12
          }
        },
        {
          "incidentId": "55d03111-4199-4c96-acad-9c3013984087",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "4685576b-ce0e-4f09-8997-c6a99ed82a37",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 59,
            "column": 8
          }
        },
        {
          "incidentId": "7bd046e6-2bfa-4bc8-a8d8-5001e50f44c2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 8
          }
        },
        {
          "incidentId": "375d88ba-ae35-4825-9271-c16ee31b7710",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "label": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "293ff344-f3a0-425b-a797-e47d633d6f76",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind.Indicator"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind.Indicator",
            "label": "F:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind.Indicator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.onehotencodingestimator.outputkind.indicator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "9123b46b-5cd3-4161-8776-f01a3960be56",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "DataViewSchema dataViewSchema = data.Schema;",
              "protected": "P:Microsoft.ML.IDataView.Schema"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "DataViewSchema dataViewSchema = data.Schema;",
            "protectedSnippet": "P:Microsoft.ML.IDataView.Schema",
            "label": "P:Microsoft.ML.IDataView.Schema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview.schema",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "eea33bf7-02e3-44e5-9bf8-2855642fff52",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.ConversionsExtensionsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "label": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "b5d854bb-53ea-467d-80d7-c5fc7036e176",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options.#ctor"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options.#ctor",
            "label": "M:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options.#ctor",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.gradientbooster.options.options",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "5e3b90ae-4b45-4205-9060-08677c7e24b8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.LightGbmExtensions.LightGbm(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options)"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.LightGbmExtensions.LightGbm(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options)",
            "label": "M:Microsoft.ML.LightGbmExtensions.LightGbm(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.lightgbmextensions.lightgbm",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "6b27de49-2394-4c9b-9d5b-2573c6791168",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataViewSchema, fs);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "mlContext.Model.Save(model, dataViewSchema, fs);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 16
          }
        },
        {
          "incidentId": "ba10afbd-8052-4d48-8fe7-075b53760b23",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 12
          }
        },
        {
          "incidentId": "7f644f3c-7a21-4ba2-afc2-3eeb8e4d7b13",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 103,
            "column": 12
          }
        },
        {
          "incidentId": "927137cd-aa1f-4200-b084-9d5bbf2cd4a1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Conversion"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "label": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversion",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "4b6ee35f-de2b-4b04-bdca-54b63672a8f4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "9993aa12-a044-43b3-a61d-60921faa32fa",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind",
            "label": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.onehotencodingestimator.outputkind",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "8c945e08-ba02-4c56-ae18-1989fbc2be8f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L2Regularization"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L2Regularization",
            "label": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L2Regularization",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.boosterparameterbase.optionsbase.l2regularization",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "fa4d4fb9-75bb-454e-b366-fd53be8bcbf7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.FeatureFraction"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.FeatureFraction",
            "label": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.FeatureFraction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.boosterparameterbase.optionsbase.featurefraction",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "ea2a19e7-dd39-4822-8eed-1648bbda5e87",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.MulticlassClassificationCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "label": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "c3b83557-6ad7-4407-a386-93d31c43835e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Text"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Text",
            "label": "P:Microsoft.ML.TransformsCatalog.Text",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.text",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "bb8c3837-ecef-4538-8866-179b372feae1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenance\\PredictiveMaintenance.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenance\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "label": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        }
      ]
    },
    {
      "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
      "startingProject": true,
      "issues": 2,
      "storyPoints": 125,
      "ruleInstances": [
        {
          "incidentId": "2147694e-babc-4020-ae4a-03b876dcb7b3",
          "ruleId": "Project.0002",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net6.0\nNew: net9.0",
              "protected": "Current: net6.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
            "snippet": "Current: net6.0\nNew: net9.0",
            "protectedSnippet": "Current: net6.0\nNew: net9.0"
          }
        },
        {
          "incidentId": "571afb5b-f2ed-46e0-822c-d753038a1867",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "labelColumn.Value.GetKeyValues(ref keyNames);",
              "protected": "T:Microsoft.ML.DataViewSchema.Column"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "labelColumn.Value.GetKeyValues(ref keyNames);",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema.Column",
            "label": "T:Microsoft.ML.DataViewSchema.Column",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema.column",
                "isCustom": false
              }
            ],
            "line": 160,
            "column": 12
          }
        },
        {
          "incidentId": "52a4298c-bd7f-4ecb-bb40-659f81b5c4a1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "ea93d61d-5789-4afa-95e7-6c5f797109d2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.InputOutputColumnPair"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.InputOutputColumnPair",
            "label": "T:Microsoft.ML.InputOutputColumnPair",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "36cb5874-dd0e-4934-8ab0-33707ecf6cf3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "1724a3be-87cf-4fb3-91b1-6eb6692116a5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.CategoricalCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.CategoricalCatalog",
            "label": "T:Microsoft.ML.CategoricalCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.categoricalcatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "41c00173-ffe6-4b1a-9bf2-d27206270da0",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "T:Microsoft.ML.TextLoaderSaverCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "label": "T:Microsoft.ML.TextLoaderSaverCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 12
          }
        },
        {
          "incidentId": "474b9f4f-b018-4950-b6a0-f1a263beb9a6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "label": "M:Microsoft.ML.TextLoaderSaverCatalog.LoadFromTextFile\u0060\u00601(Microsoft.ML.DataOperationsCatalog,System.String,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textloadersavercatalog.loadfromtextfile",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 12
          }
        },
        {
          "incidentId": "89730f80-227f-4e33-9e11-4151011f8d31",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "5228e2e8-327e-4f14-b37b-358b4ac530a5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedTrainData = model.Transform(trainData);",
              "protected": "M:Microsoft.ML.ITransformer.Transform(Microsoft.ML.IDataView)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var preprocessedTrainData = model.Transform(trainData);",
            "protectedSnippet": "M:Microsoft.ML.ITransformer.Transform(Microsoft.ML.IDataView)",
            "label": "M:Microsoft.ML.ITransformer.Transform(Microsoft.ML.IDataView)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer.transform",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 12
          }
        },
        {
          "incidentId": "e74e3b6b-4632-4861-a7ce-deaf34da8ef5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "47c41d1f-0bbd-46b7-8f6b-bb97659c8f65",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Conversion"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "label": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversion",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "78ea3f90-66e4-4ba8-b86a-f3e7d933a51c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.FeatureFraction"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.FeatureFraction",
            "label": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.FeatureFraction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.boosterparameterbase.optionsbase.featurefraction",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "dc505e58-5f0a-472f-b745-3d301944466c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)",
            "label": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapValueToKey(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,System.Boolean,Microsoft.ML.IDataView)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog.mapvaluetokey",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "d83bdb7e-c8fd-4625-8d39-53cd03eba102",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.TextCatalog.FeaturizeText(Microsoft.ML.TransformsCatalog.TextTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.featurizetext",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "b5b93940-a542-4062-b05d-c5bfd742cba8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "label": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "9ef42e16-1d66-458f-a871-35c4b267ce0b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.ExtensionsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.ExtensionsCatalog",
            "label": "T:Microsoft.ML.ExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.extensionscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "336eb050-fc33-452f-a172-3a79d0f69332",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.MissingValueReplacingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.MissingValueReplacingEstimator",
            "label": "T:Microsoft.ML.Transforms.MissingValueReplacingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.missingvaluereplacingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "a1c702bb-513a-43c7-a583-c6f52608ff6a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "M:Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportance(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.ITransformer,Microsoft.ML.IDataView,System.String,System.Boolean,System.Nullable{System.Int32},System.Int32)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "M:Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportance(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.ITransformer,Microsoft.ML.IDataView,System.String,System.Boolean,System.Nullable{System.Int32},System.Int32)",
            "label": "M:Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportance(Microsoft.ML.MulticlassClassificationCatalog,Microsoft.ML.ITransformer,Microsoft.ML.IDataView,System.String,System.Boolean,System.Nullable{System.Int32},System.Int32)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.permutationfeatureimportanceextensions.permutationfeatureimportance",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "35843b1d-cc34-4c33-bad3-b42fbf5b54ae",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var preprocessedTrainData = model.Transform(trainData);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var preprocessedTrainData = model.Transform(trainData);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 32,
            "column": 12
          }
        },
        {
          "incidentId": "e176f8a6-4ecd-44d6-b107-bb1e591085d6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var schema = PredictEngine.Value.OutputSchema;",
              "protected": "T:Microsoft.ML.DataViewSchema"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "var schema = PredictEngine.Value.OutputSchema;",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema",
            "label": "T:Microsoft.ML.DataViewSchema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema",
                "isCustom": false
              }
            ],
            "line": 150,
            "column": 12
          }
        },
        {
          "incidentId": "23478a94-0e52-4ce5-9df5-4807e990829c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.LightGbmExtensions"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.LightGbmExtensions",
            "label": "T:Microsoft.ML.LightGbmExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.lightgbmextensions",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "6d55eec1-0ce6-4afd-b4fb-c46eb0abcfea",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "label": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "d6e59aff-e365-4bb9-8a00-08e5199a5b2a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 8
          }
        },
        {
          "incidentId": "d34ca273-e40d-4f37-990d-3b5084a275d1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "T:Microsoft.ML.PermutationFeatureImportanceExtensions"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "T:Microsoft.ML.PermutationFeatureImportanceExtensions",
            "label": "T:Microsoft.ML.PermutationFeatureImportanceExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.permutationfeatureimportanceextensions",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "e2d75eda-1826-40f2-a986-54825db4b1d6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.ConversionsExtensionsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "label": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "448f182f-0b7f-478d-9f04-792b0bf4d32d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "dc132932-d58e-4fd5-93d8-bcd3cdbe299f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])",
            "label": "M:Microsoft.ML.TransformExtensionsCatalog.Concatenate(Microsoft.ML.TransformsCatalog,System.String,System.String[])",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog.concatenate",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "bed4a9ba-ea9b-4838-b8b8-8a4292d826ac",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind",
            "label": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.onehotencodingestimator.outputkind",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "7892dad6-a225-4531-9583-343e45270697",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind.Indicator"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind.Indicator",
            "label": "F:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind.Indicator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.onehotencodingestimator.outputkind.indicator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "ecd48631-1e81-453f-8734-436111e26859",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "a8d3a4a7-941a-4640-9240-3f4e481170af",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "P:Microsoft.ML.MLContext.MulticlassClassification"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "label": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.multiclassclassification",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "ccb2dd52-7b20-4718-882c-c62873c46ac8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)",
            "label": "M:Microsoft.ML.ConversionsExtensionsCatalog.MapKeyToValue(Microsoft.ML.TransformsCatalog.ConversionTransforms,System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog.mapkeytovalue",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "566eaf7b-0331-4832-8718-7f72819806dc",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.TrainerInputBase.FeatureColumnName"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.TrainerInputBase.FeatureColumnName",
            "label": "F:Microsoft.ML.Trainers.TrainerInputBase.FeatureColumnName",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.trainerinputbase.featurecolumnname",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "30467a1d-3583-4427-8f04-d78ae18c7439",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "488d885d-efb8-4509-a8c8-f51a742acf66",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "label": "T:Microsoft.ML.Transforms.Text.TextFeaturizingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "24380774-33cf-432e-b5fe-ab4f18929182",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "08a080b1-053b-4322-8ac2-a389665e25c6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "6ae414ed-d5fa-4800-8e4a-c9faed85463f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Categorical"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Categorical",
            "label": "P:Microsoft.ML.TransformsCatalog.Categorical",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.categorical",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "18b7c525-6dbc-44ea-9e0f-04fd8bce69eb",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var data = LoadIDataViewFromFile(mlContext, inputDataFilePath, separatorChar, hasHeader, allowQuoting);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var data = LoadIDataViewFromFile(mlContext, inputDataFilePath, separatorChar, hasHeader, allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 33,
            "column": 12
          }
        },
        {
          "incidentId": "91ffa462-f174-4294-8acf-f2dd1e493b32",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 12
          }
        },
        {
          "incidentId": "719ae23b-6839-44e0-aae9-183043964378",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
              "protected": "T:Microsoft.ML.MulticlassClassificationCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var permutationFeatureImportance =\r\n         mlContext.MulticlassClassification\r\n         .PermutationFeatureImportance(\r\n                 model,\r\n                 preprocessedTrainData,\r\n                 labelColumnName: labelColumnName);",
            "protectedSnippet": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "label": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "e1ef480a-6514-48d6-95de-11e441813e41",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 103,
            "column": 12
          }
        },
        {
          "incidentId": "b72fa084-31e2-4edf-be07-8b44dcdf800c",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static IEstimator\u003CITransformer\u003E BuildPipeline(MLContext mlContext)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static IEstimator\u003CITransformer\u003E BuildPipeline(MLContext mlContext)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 90,
            "column": 8
          }
        },
        {
          "incidentId": "9884b76e-023d-4b8e-9e73-33c5c853db00",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.ConversionsExtensionsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "label": "T:Microsoft.ML.ConversionsExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.conversionsextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "6e7c49b1-c2b1-4d78-996e-9dfea3cbdf36",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "label": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "be45da4e-4d84-440a-8735-7fa4c1dd7587",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "DataViewSchema dataViewSchema = data.Schema;",
              "protected": "T:Microsoft.ML.DataViewSchema"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "DataViewSchema dataViewSchema = data.Schema;",
            "protectedSnippet": "T:Microsoft.ML.DataViewSchema",
            "label": "T:Microsoft.ML.DataViewSchema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "ef3e73bc-5d71-4be7-86a0-e1d9aeee0cc9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 16
          }
        },
        {
          "incidentId": "cc653c0f-be24-40d6-a798-c41ba7fb3888",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "4db7bf7d-4d0c-4503-b7b2-981f9b408c09",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var labelColumn = schema.GetColumnOrNull(\u0022Machine failure\u0022);",
              "protected": "M:Microsoft.ML.DataViewSchema.GetColumnOrNull(System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "var labelColumn = schema.GetColumnOrNull(\u0022Machine failure\u0022);",
            "protectedSnippet": "M:Microsoft.ML.DataViewSchema.GetColumnOrNull(System.String)",
            "label": "M:Microsoft.ML.DataViewSchema.GetColumnOrNull(System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataviewschema.getcolumnornull",
                "isCustom": false
              }
            ],
            "line": 152,
            "column": 12
          }
        },
        {
          "incidentId": "b8db6d87-b2c3-4659-a059-11927254706a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options",
            "label": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.lightgbmmulticlasstrainer.options",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "097ab6fa-9617-411c-8c8f-fa8acb9f8429",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers",
            "label": "T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog.multiclassclassificationtrainers",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "c9066a91-4c84-4c73-a9cd-ca4766378eca",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "95fe3a09-ef53-4536-a778-79ae35114580",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Text"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Text",
            "label": "P:Microsoft.ML.TransformsCatalog.Text",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.text",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "747df389-5b8a-45b7-9e47-264eb0f24c0f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator",
            "label": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.onehotencodingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "32f0bc00-50ce-4680-908a-05e0ac981aec",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataViewSchema, fs);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "mlContext.Model.Save(model, dataViewSchema, fs);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 16
          }
        },
        {
          "incidentId": "dcf9bb55-6dcb-4541-a06d-da564c9de8e6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "P:Microsoft.ML.Data.MetricStatistics.Mean"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "label": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics.mean",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "fe9842ca-4b9a-4937-9170-bd623fa5b503",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "P:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics.MacroAccuracy"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "P:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics.MacroAccuracy",
            "label": "P:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics.MacroAccuracy",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.multiclassclassificationmetricsstatistics.macroaccuracy",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "8249c1da-b908-408a-860b-3cf216727d93",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.InputOutputColumnPair"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.InputOutputColumnPair",
            "label": "T:Microsoft.ML.InputOutputColumnPair",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "8609f4ac-8103-462d-b126-7cb4549199bd",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 8
          }
        },
        {
          "incidentId": "e1653ad6-958c-44ca-978f-07bc229ff190",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var model = RetrainModel(mlContext, data);",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var model = RetrainModel(mlContext, data);",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 34,
            "column": 12
          }
        },
        {
          "incidentId": "f3679b2a-553f-4d50-a2eb-507414a5121d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics",
            "label": "T:Microsoft.ML.Data.MulticlassClassificationMetricsStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.multiclassclassificationmetricsstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "52433fce-c099-49f8-9160-739b68487f2b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "2a8247cb-10aa-422b-a584-e355d58af6e1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 59,
            "column": 8
          }
        },
        {
          "incidentId": "12fbc57f-665f-44e0-89a9-ef1fb7d69938",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataViewSchema, fs);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "mlContext.Model.Save(model, dataViewSchema, fs);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Save(Microsoft.ML.ITransformer,Microsoft.ML.DataViewSchema,System.IO.Stream)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.save",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 16
          }
        },
        {
          "incidentId": "b1ea453e-9c5b-42c9-a036-6b82b8690326",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
              "protected": "T:Microsoft.ML.Data.MetricStatistics"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var featureImportanceMetrics =\r\n                 permutationFeatureImportance\r\n                 .Select((kvp) =\u003E new { kvp.Key, kvp.Value.MacroAccuracy })\r\n                 .OrderByDescending(myFeatures =\u003E Math.Abs(myFeatures.MacroAccuracy.Mean));",
            "protectedSnippet": "T:Microsoft.ML.Data.MetricStatistics",
            "label": "T:Microsoft.ML.Data.MetricStatistics",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics",
                "isCustom": false
              }
            ],
            "line": 41,
            "column": 12
          }
        },
        {
          "incidentId": "04ea38d7-1b71-420b-aa75-ec8feb0a415b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase",
            "label": "T:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.boosterparameterbase.optionsbase",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "d2625f76-1e12-4247-abbc-8fd1f6bd7c9f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.MulticlassClassificationCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "label": "T:Microsoft.ML.MulticlassClassificationCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "8531fc44-8d74-4b9d-a1e8-a483f9d95d52",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.MulticlassClassification"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "label": "P:Microsoft.ML.MLContext.MulticlassClassification",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.multiclassclassification",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "7633e477-11b1-4fec-8a97-d26deb40300b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator",
            "label": "T:Microsoft.ML.Transforms.ColumnConcatenatingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.columnconcatenatingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "0c79981c-de76-4478-99be-9b793ab48911",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "label": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "29efd7ad-6c10-4dee-81cb-7dcd652df73d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "mlContext.Model.Save(model, dataViewSchema, fs);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "mlContext.Model.Save(model, dataViewSchema, fs);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 66,
            "column": 16
          }
        },
        {
          "incidentId": "c2431d28-c8e4-44a5-b7b7-95992dce24d4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 31,
            "column": 12
          }
        },
        {
          "incidentId": "07cacb44-d2a5-465b-a6a9-d2ce068478b4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
              "protected": "P:Microsoft.ML.Data.MetricStatistics.Mean"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "var pfiValue = Math.Abs(feature.MacroAccuracy.Mean);",
            "protectedSnippet": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "label": "P:Microsoft.ML.Data.MetricStatistics.Mean",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.metricstatistics.mean",
                "isCustom": false
              }
            ],
            "line": 49,
            "column": 16
          }
        },
        {
          "incidentId": "aa34352b-59f1-4002-88f2-956e01180bee",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog",
            "label": "T:Microsoft.ML.TransformsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "2d8a8b47-83f7-4e00-ac0d-b75429f0b313",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "label": "M:Microsoft.ML.InputOutputColumnPair.#ctor(System.String,System.String)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "0ca45151-71a2-4a7b-b4fa-0287c894c448",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.CategoricalTransforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.CategoricalTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.CategoricalTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.categoricaltransforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "a7eddee8-841b-4cea-9b35-ea566c57fd2a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.CategoricalCatalog.OneHotEncoding(Microsoft.ML.TransformsCatalog.CategoricalTransforms,System.String,System.String,Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,Microsoft.ML.IDataView)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.CategoricalCatalog.OneHotEncoding(Microsoft.ML.TransformsCatalog.CategoricalTransforms,System.String,System.String,Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,Microsoft.ML.IDataView)",
            "label": "M:Microsoft.ML.CategoricalCatalog.OneHotEncoding(Microsoft.ML.TransformsCatalog.CategoricalTransforms,System.String,System.String,Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind,System.Int32,Microsoft.ML.Transforms.ValueToKeyMappingEstimator.KeyOrdinality,Microsoft.ML.IDataView)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.categoricalcatalog.onehotencoding",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "c291c270-f515-4e80-b69b-1e2a6a112323",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 8
          }
        },
        {
          "incidentId": "a063bef9-d890-4c35-9d7e-1e8f194d1c13",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 59,
            "column": 8
          }
        },
        {
          "incidentId": "d49c7006-4c01-4143-a6ab-8f1619bbf515",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 12
          }
        },
        {
          "incidentId": "22681d52-7cab-4387-806e-2d4d546008b6",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 8
          }
        },
        {
          "incidentId": "20e1ff35-4f2a-4bf8-9f7b-a3ea0a54c844",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator",
            "label": "T:Microsoft.ML.Transforms.KeyToValueMappingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.keytovaluemappingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "52a9e547-666c-41dd-9c7d-ae2ed033d53a",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers",
            "label": "P:Microsoft.ML.MulticlassClassificationCatalog.Trainers",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.multiclassclassificationcatalog.trainers",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "c3cdc9e0-b94e-4d03-a6a9-febc8e3ae6e9",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversiontransforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "11a085bf-e418-4d23-b217-658238d6f677",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.TransformsCatalog.Conversion"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "label": "P:Microsoft.ML.TransformsCatalog.Conversion",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversion",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "44cd1b25-ffba-4a52-88c6-89c30d47569e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TextCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TextCatalog",
            "label": "T:Microsoft.ML.TextCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "ddafa428-7598-4e7e-a450-5718e5d72b3f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.InputOutputColumnPair"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.InputOutputColumnPair",
            "label": "T:Microsoft.ML.InputOutputColumnPair",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "20ef8ae5-cbfa-468c-9d60-959056132da2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 8
          }
        },
        {
          "incidentId": "f3c85b89-4343-46d9-8678-a4ce2401689f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var model = pipeline.Fit(trainData);",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var model = pipeline.Fit(trainData);",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 80,
            "column": 12
          }
        },
        {
          "incidentId": "4f108cbd-6781-4532-8b73-f171b5c7394f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static void SaveModel(MLContext mlContext, ITransformer model, IDataView data, string modelSavePath)",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 59,
            "column": 8
          }
        },
        {
          "incidentId": "dc84d694-bc77-4c4b-9630-81d39c1bd16f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
              "protected": "T:Microsoft.ML.MLContext"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static IDataView LoadIDataViewFromFile(MLContext mlContext, string inputDataFilePath, char separatorChar, bool hasHeader, bool allowQuoting)",
            "protectedSnippet": "T:Microsoft.ML.MLContext",
            "label": "T:Microsoft.ML.MLContext",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext",
                "isCustom": false
              }
            ],
            "line": 46,
            "column": 8
          }
        },
        {
          "incidentId": "d25e5f61-c254-4ee3-b0da-d178b0f3b637",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.evaluate.cs",
            "snippet": "public static List\u003CTuple\u003Cstring, double\u003E\u003E CalculatePFI(MLContext mlContext, IDataView trainData, ITransformer model, string labelColumnName)",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 30,
            "column": 8
          }
        },
        {
          "incidentId": "ececcbcc-0787-4a5b-97ed-148c12e5d013",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine\u0060\u00602(Microsoft.ML.ITransformer,System.Boolean,Microsoft.ML.Data.SchemaDefinition,Microsoft.ML.Data.SchemaDefinition)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.createpredictionengine",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 12
          }
        },
        {
          "incidentId": "7e20413a-c216-4857-8469-991fba625935",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.SubsampleFraction"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.SubsampleFraction",
            "label": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.SubsampleFraction",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.boosterparameterbase.optionsbase.subsamplefraction",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "04432f63-f77f-48f0-adf5-84981e6f01e8",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "T:Microsoft.ML.DataOperationsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "T:Microsoft.ML.DataOperationsCatalog",
            "label": "T:Microsoft.ML.DataOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.dataoperationscatalog",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 12
          }
        },
        {
          "incidentId": "f88afdbe-3d18-4cf1-9f65-400d66fc1063",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
              "protected": "P:Microsoft.ML.MLContext.Data"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "return mlContext.Data.LoadFromTextFile\u003CModelInput\u003E(inputDataFilePath, separatorChar, hasHeader, allowQuoting: allowQuoting);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Data",
            "label": "P:Microsoft.ML.MLContext.Data",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.data",
                "isCustom": false
              }
            ],
            "line": 48,
            "column": 12
          }
        },
        {
          "incidentId": "e019e15c-92cc-4471-987c-56085efeb0e4",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 12
          }
        },
        {
          "incidentId": "a8a9a51e-af87-420b-8a5a-a963b432ffd1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.String,Microsoft.ML.DataViewSchema@)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.String,Microsoft.ML.DataViewSchema@)",
            "label": "M:Microsoft.ML.ModelOperationsCatalog.Load(System.String,Microsoft.ML.DataViewSchema@)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog.load",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 12
          }
        },
        {
          "incidentId": "8137c935-54ac-4a03-8953-62af337327d1",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.#ctor"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.#ctor",
            "label": "M:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options.#ctor",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.lightgbmmulticlasstrainer.options.options",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "a0eba800-a65c-4e96-a4e9-0a7925b5f343",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer",
            "label": "T:Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.lightgbmmulticlasstrainer",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "5d680484-2093-4cf8-b1d8-c3dfa77ae3d5",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.LightGbmExtensions.LightGbm(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.LightGbmExtensions.LightGbm(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options)",
            "label": "M:Microsoft.ML.LightGbmExtensions.LightGbm(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,Microsoft.ML.Trainers.LightGbm.LightGbmMulticlassTrainer.Options)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.lightgbmextensions.lightgbm",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "76da17a5-1e43-4867-9e15-7a05f0e6ac14",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.InputOutputColumnPair"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.InputOutputColumnPair",
            "label": "T:Microsoft.ML.InputOutputColumnPair",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "ffdb32bd-0c73-4922-b87a-e122ebd87d6d",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
              "protected": "T:Microsoft.ML.IDataView"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "public static ITransformer RetrainModel(MLContext mlContext, IDataView trainData)",
            "protectedSnippet": "T:Microsoft.ML.IDataView",
            "label": "T:Microsoft.ML.IDataView",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview",
                "isCustom": false
              }
            ],
            "line": 77,
            "column": 8
          }
        },
        {
          "incidentId": "8141ab38-8d22-4895-bcf5-a524acc0a763",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.DataView, 4.0.0-preview.24271.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "DataViewSchema dataViewSchema = data.Schema;",
              "protected": "P:Microsoft.ML.IDataView.Schema"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "DataViewSchema dataViewSchema = data.Schema;",
            "protectedSnippet": "P:Microsoft.ML.IDataView.Schema",
            "label": "P:Microsoft.ML.IDataView.Schema",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.idataview.schema",
                "isCustom": false
              }
            ],
            "line": 62,
            "column": 12
          }
        },
        {
          "incidentId": "a63297c3-1269-4b63-af8a-2a4b542e8f07",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "P:Microsoft.ML.MLContext.Transforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Transforms",
            "label": "P:Microsoft.ML.MLContext.Transforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.transforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "9cba5c16-a15d-4071-a896-4e839f395267",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options",
            "label": "T:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.gradientbooster.options",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "f028b021-1422-4b47-b4f0-8f61de83bfa7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.TrainerInputBaseWithLabel.LabelColumnName"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.TrainerInputBaseWithLabel.LabelColumnName",
            "label": "F:Microsoft.ML.Trainers.TrainerInputBaseWithLabel.LabelColumnName",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.trainerinputbasewithlabel.labelcolumnname",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "123d1d0a-294b-4ac7-be1e-babd61231357",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind",
            "label": "T:Microsoft.ML.Transforms.OneHotEncodingEstimator.OutputKind",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.onehotencodingestimator.outputkind",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "934e4ddb-ffa3-44ad-9cb4-0235febf646b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.LearningPipelineExtensions"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.LearningPipelineExtensions",
            "label": "T:Microsoft.ML.LearningPipelineExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.learningpipelineextensions",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "75486567-388d-4206-9d04-b498357fe599",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var mlContext = new MLContext();",
              "protected": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "var mlContext = new MLContext();",
            "protectedSnippet": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "label": "M:Microsoft.ML.MLContext.#ctor(System.Nullable{System.Int32})",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.mlcontext",
                "isCustom": false
              }
            ],
            "line": 103,
            "column": 12
          }
        },
        {
          "incidentId": "aab6d5cc-379e-4132-9e47-5b330c4fa8ff",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.InputOutputColumnPair"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.InputOutputColumnPair",
            "label": "T:Microsoft.ML.InputOutputColumnPair",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.inputoutputcolumnpair",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "65a2da2e-8f77-40f1-9fcb-ab154ff94497",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.ExtensionsCatalog.ReplaceMissingValues(Microsoft.ML.TransformsCatalog,Microsoft.ML.InputOutputColumnPair[],Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode,System.Boolean)"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.ExtensionsCatalog.ReplaceMissingValues(Microsoft.ML.TransformsCatalog,Microsoft.ML.InputOutputColumnPair[],Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode,System.Boolean)",
            "label": "M:Microsoft.ML.ExtensionsCatalog.ReplaceMissingValues(Microsoft.ML.TransformsCatalog,Microsoft.ML.InputOutputColumnPair[],Microsoft.ML.Transforms.MissingValueReplacingEstimator.ReplacementMode,System.Boolean)",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.extensionscatalog.replacemissingvalues",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "9701ea3e-1c7c-4322-af09-d6b7d33d6250",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "labelColumn.Value.GetKeyValues(ref keyNames);",
              "protected": "T:Microsoft.ML.Data.SchemaAnnotationsExtensions"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "labelColumn.Value.GetKeyValues(ref keyNames);",
            "protectedSnippet": "T:Microsoft.ML.Data.SchemaAnnotationsExtensions",
            "label": "T:Microsoft.ML.Data.SchemaAnnotationsExtensions",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.data.schemaannotationsextensions",
                "isCustom": false
              }
            ],
            "line": 160,
            "column": 12
          }
        },
        {
          "incidentId": "1943c1fb-f29f-467b-9f79-c900c59c78ca",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "T:Microsoft.ML.ITransformer"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "T:Microsoft.ML.ITransformer",
            "label": "T:Microsoft.ML.ITransformer",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.itransformer",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 12
          }
        },
        {
          "incidentId": "5d80692f-43e3-43fa-bc89-0042122640f2",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L2Regularization"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L2Regularization",
            "label": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L2Regularization",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.boosterparameterbase.optionsbase.l2regularization",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "75221fb9-acd9-4432-a33f-f08d5b940ee7",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "M:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options.#ctor"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "M:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options.#ctor",
            "label": "M:Microsoft.ML.Trainers.LightGbm.GradientBooster.Options.#ctor",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.gradientbooster.options.options",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "95d48ae4-b66d-4da6-bb15-a70f1fe41882",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator",
            "label": "T:Microsoft.ML.Transforms.ValueToKeyMappingEstimator",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.valuetokeymappingestimator",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "93edd0f4-0d80-4782-a951-f83fa58cd88f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.TextTransforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.TextTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.texttransforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "7ba4c795-4ac2-4ecc-9d63-d4162f4eb80b",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 104,
            "column": 12
          }
        },
        {
          "incidentId": "41937929-9b32-45dd-8a12-84a7388ffc1f",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformExtensionsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformExtensionsCatalog",
            "label": "T:Microsoft.ML.TransformExtensionsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformextensionscatalog",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "f1ce4fb9-7797-468e-bdd2-d6491b36212e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
              "protected": "T:Microsoft.ML.ModelOperationsCatalog"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
            "protectedSnippet": "T:Microsoft.ML.ModelOperationsCatalog",
            "label": "T:Microsoft.ML.ModelOperationsCatalog",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.modeloperationscatalog",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 12
          }
        },
        {
          "incidentId": "3c220099-54c1-4f63-9619-c562cf9b9330",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML.LightGbm, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L1Regularization"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L1Regularization",
            "label": "F:Microsoft.ML.Trainers.LightGbm.BoosterParameterBase.OptionsBase.L1Regularization",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.trainers.lightgbm.boosterparameterbase.optionsbase.l1regularization",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "ceac26f5-6c78-4504-b34d-1f6b6a97b4a3",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
              "protected": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.training.cs",
            "snippet": "var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@\u0022Type\u0022, @\u0022Type\u0022, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      \r\n                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@\u0022Air temperature K\u0022, @\u0022Air temperature K\u0022),new InputOutputColumnPair(@\u0022Process temperature K\u0022, @\u0022Process temperature K\u0022),new InputOutputColumnPair(@\u0022Rotational speed rpm\u0022, @\u0022Rotational speed rpm\u0022),new InputOutputColumnPair(@\u0022Torque Nm\u0022, @\u0022Torque Nm\u0022),new InputOutputColumnPair(@\u0022Tool wear min\u0022, @\u0022Tool wear min\u0022)}))      \r\n                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@\u0022Product ID\u0022,outputColumnName:@\u0022Product ID\u0022))      \r\n                                    .Append(mlContext.Transforms.Concatenate(@\u0022Features\u0022, new []{@\u0022Type\u0022,@\u0022Air temperature K\u0022,@\u0022Process temperature K\u0022,@\u0022Rotational speed rpm\u0022,@\u0022Torque Nm\u0022,@\u0022Tool wear min\u0022,@\u0022Product ID\u0022}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@\u0022Machine failure\u0022,inputColumnName:@\u0022Machine failure\u0022,addKeyValueAnnotationsAsText:false))      \r\n                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=13,NumberOfIterations=123,MinimumExampleCountPerLeaf=20,LearningRate=0.21338081397513467,LabelColumnName=@\u0022Machine failure\u0022,FeatureColumnName=@\u0022Features\u0022,Booster=new GradientBooster.Options(){SubsampleFraction=0.9999997766729865,FeatureFraction=0.9932642926900449,L1Regularization=2.918384928728697E-10,L2Regularization=0.39698573593899295},MaximumBinCountPerFeature=312}))      \r\n                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@\u0022PredictedLabel\u0022,inputColumnName:@\u0022PredictedLabel\u0022));",
            "protectedSnippet": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "label": "T:Microsoft.ML.TransformsCatalog.ConversionTransforms",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.transformscatalog.conversiontransforms",
                "isCustom": false
              }
            ],
            "line": 93,
            "column": 12
          }
        },
        {
          "incidentId": "fa6b140d-1cb3-47c4-b89b-6f54684cb00e",
          "ruleId": "Api.0002",
          "description": "API is available in package Microsoft.ML, 3.0.1.",
          "projectPath": "PredictiveMaintenanceConsole\\PredictiveMaintenanceConsole.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
              "protected": "P:Microsoft.ML.MLContext.Model"
            },
            "kind": "File",
            "path": "PredictiveMaintenanceConsole\\PredictiveMaintenanceModel.consumption.cs",
            "snippet": "return mlContext.Model.CreatePredictionEngine\u003CModelInput, ModelOutput\u003E(mlModel);",
            "protectedSnippet": "P:Microsoft.ML.MLContext.Model",
            "label": "P:Microsoft.ML.MLContext.Model",
            "links": [
              {
                "title": "API documentation",
                "url": "https://learn.microsoft.com/dotnet/api/microsoft.ml.mlcontext.model",
                "isCustom": false
              }
            ],
            "line": 105,
            "column": 12
          }
        }
      ]
    },
    {
      "path": "TargetLibrary\\TargetLibrary.csproj",
      "startingProject": true,
      "issues": 1,
      "storyPoints": 1,
      "ruleInstances": [
        {
          "incidentId": "2348087d-1791-4ea7-b283-947ea795d55d",
          "ruleId": "Project.0002",
          "projectPath": "TargetLibrary\\TargetLibrary.csproj",
          "state": "Active",
          "location": {
            "snippetModel": {
              "unrestricted": "Current: net8.0\nNew: net9.0",
              "protected": "Current: net8.0\nNew: net9.0"
            },
            "kind": "File",
            "path": "TargetLibrary\\TargetLibrary.csproj",
            "snippet": "Current: net8.0\nNew: net9.0",
            "protectedSnippet": "Current: net8.0\nNew: net9.0"
          }
        }
      ]
    }
  ],
  "rules": {
    "NuGet.0002": {
      "id": "NuGet.0002",
      "description": "NuGet package upgrade is recommended for selected target framework.\n\nStandard .NET packages are recommended to have versions matching version of .NET that project targets.\n\nSome other packages also are known to work better for selected target frameworks.",
      "label": "NuGet package upgrade is recommended",
      "severity": "Potential",
      "effort": 1,
      "links": [
        {
          "url": "https://go.microsoft.com/fwlink/?linkid=2262530",
          "isCustom": false
        }
      ]
    },
    "Project.0002": {
      "id": "Project.0002",
      "description": "Project\u0027s target framework(s) needs to be changed to the new target framework that you selected for this upgrade.\n\nDuring upgrade target framework will be adjusted to corresponding platform when applicable. In some cases project would result in multiple target frameworks after the upgrade if it was using features that now have their own platforms in moderrn .NET frameworks (windows, iOS, Android etc).",
      "label": "Project\u0027s target framework(s) needs to be changed",
      "severity": "Mandatory",
      "effort": 1,
      "links": [
        {
          "title": "Overview of porting from .NET Framework to .NET",
          "url": "https://go.microsoft.com/fwlink/?linkid=2265227",
          "isCustom": false
        },
        {
          "title": ".NET project SDKs",
          "url": "https://go.microsoft.com/fwlink/?linkid=2265226",
          "isCustom": false
        }
      ]
    },
    "Api.0002": {
      "id": "Api.0002",
      "description": "Some API that lived in older versions of .NET frameworks were moved to standalone NuGet packages that could be added to projects explicitly.",
      "label": "API available in NuGet package",
      "severity": "Potential",
      "effort": 1,
      "links": [
        {
          "title": "Breaking changes in .NET",
          "url": "https://go.microsoft.com/fwlink/?linkid=2262679",
          "isCustom": false
        }
      ]
    },
    "NuGet.0001": {
      "id": "NuGet.0001",
      "description": "NuGet package is incompatible with selected target framework.\n\nPackage needs to be upgraded to a version supporting selected project target framework. If there no new package versions supporting new target framework, different package needs to be used and all code needs to be upgraded to new API.",
      "label": "NuGet package is incompatible",
      "severity": "Mandatory",
      "effort": 1,
      "links": [
        {
          "url": "https://go.microsoft.com/fwlink/?linkid=2262529",
          "isCustom": false
        }
      ]
    }
  }
}
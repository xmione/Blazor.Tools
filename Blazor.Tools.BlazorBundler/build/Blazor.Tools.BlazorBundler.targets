<Project>
	<PropertyGroup>
		<BlazorBundlerPackageName>blazor.tools.blazorbundler</BlazorBundlerPackageName>
		<PackageVersion Condition="'$(PackageVersion)' == ''">$(PackageVersion)</PackageVersion>
		<SourcePath>$(NuGetPackageRoot)$(BlazorBundlerPackageName)\$(PackageVersion)</SourcePath>
		<TargetProjectPath>$(MSBuildProjectFullPath)</TargetProjectPath>
		<PackagesPath>$(SourcePath)\packages</PackagesPath>
		<PowerShellCommand Condition="'$(OS)' == 'Windows_NT'">powershell.exe</PowerShellCommand>
		<PowerShellCommand Condition="'$(OS)' != 'Windows_NT'">pwsh</PowerShellCommand>
	</PropertyGroup>

	<ItemGroup>
		<EnvVars Include="Configuration: $(Configuration)" />
		<EnvVars Include="MajorVersion: $(MajorVersion)" />
		<EnvVars Include="MinorVersion: $(MinorVersion)" />
		<EnvVars Include="PatchVersion: $(PatchVersion)" />
		<EnvVars Include="RevisionVersion: $(RevisionVersion)" />
		<EnvVars Include="NugetApiKey: $(NugetApiKey)" />
		<EnvVars Include="Publish: $(Publish)" />
		<EnvVars Include="IsRelease: $(IsRelease)" />
		<EnvVars Include="GitComment: $(GitComment)" />
		<EnvVars Include="AssemblyVersion: $(AssemblyVersion)" />
		<EnvVars Include="FileVersion: $(FileVersion)" />
		<EnvVars Include="ChangelogPath: $(ChangelogPath)" />
	</ItemGroup>

	<PropertyGroup>
		<FormattedEnvVars>@(EnvVars, ' | ')</FormattedEnvVars>
	</PropertyGroup>

	<Target Name="CustomInstall" BeforeTargets="PrepareForBuild">
		<!-- Log some information for debugging -->
		<Message Text="Executing CustomInstall target" Importance="high" />
		<Message Text="BlazorBundlerPackageName: $(BlazorBundlerPackageName)" Importance="high" />
		<Message Text="PackageVersion: $(PackageVersion)" Importance="high" />
		<Message Text="SourcePath: $(SourcePath)" Importance="high" />
		<Message Text="TargetProjectPath: $(TargetProjectPath)" Importance="high" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\wwwroot\bundler\blazor-bootstrap\blazor.bootstrap.css')"
			  SourceFiles="$(MSBuildThisFileDirectory)..\wwwroot\bundler\blazor-bootstrap\blazor.bootstrap.css"
			  DestinationFolder="$(MSBuildProjectDirectory)\wwwroot\bundler\blazor-bootstrap\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\wwwroot\bundler\blazor-bootstrap\blazor.bootstrap.js')"
			  SourceFiles="$(MSBuildThisFileDirectory)..\wwwroot\bundler\blazor-bootstrap\blazor.bootstrap.js"
			  DestinationFolder="$(MSBuildProjectDirectory)\wwwroot\bundler\blazor-bootstrap\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\wwwroot\bundler\blazored-typeahead\blazored-typeahead.js')"
			  SourceFiles="$(MSBuildThisFileDirectory)..\wwwroot\bundler\blazored-typeahead\blazored-typeahead.js"
			  DestinationFolder="$(MSBuildProjectDirectory)\wwwroot\bundler\blazored-typeahead\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\wwwroot\bundler\bootstrap-icons\font\bootstrap-icons.min.css')"
			  SourceFiles="$(MSBuildThisFileDirectory)..\wwwroot\bundler\bootstrap-icons\font\bootstrap-icons.min.css"
			  DestinationFolder="$(MSBuildProjectDirectory)\wwwroot\bundler\bootstrap-icons\font\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\wwwroot\bundler\bootstrap-icons\font\fonts\bootstrap-icons.woff')"
			  SourceFiles="$(MSBuildThisFileDirectory)..\wwwroot\bundler\bootstrap-icons\font\fonts\bootstrap-icons.woff"
			  DestinationFolder="$(MSBuildProjectDirectory)\wwwroot\bundler\bootstrap-icons\font\fonts\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\wwwroot\bundler\bootstrap-icons\font\fonts\bootstrap-icons.woff2')"
			  SourceFiles="$(MSBuildThisFileDirectory)..\wwwroot\bundler\bootstrap-icons\font\fonts\bootstrap-icons.woff2"
			  DestinationFolder="$(MSBuildProjectDirectory)\wwwroot\bundler\bootstrap-icons\font\fonts\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\wwwroot\bundler\js\bootstrap.bundle.min.js')"
			  SourceFiles="$(MSBuildThisFileDirectory)..\wwwroot\bundler\js\bootstrap.bundle.min.js"
			  DestinationFolder="$(MSBuildProjectDirectory)\wwwroot\bundler\js\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\wwwroot\bundler\js\site.js')"
			  SourceFiles="$(MSBuildThisFileDirectory)..\wwwroot\bundler\js\site.js"
			  DestinationFolder="$(MSBuildProjectDirectory)\wwwroot\bundler\js\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\wwwroot\bundler\css\bundler.css')"
			  SourceFiles="$(MSBuildThisFileDirectory)..\wwwroot\bundler\css\bundler.css"
			  DestinationFolder="$(MSBuildProjectDirectory)\wwwroot\bundler\css\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\BlazorBundler\Cleanup-Tools.psm1')"
			  SourceFiles="$(MSBuildThisFileDirectory)..\tools\Cleanup-Tools.psm1"
			  DestinationFolder="$(MSBuildProjectDirectory)\BlazorBundler\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\BlazorBundler\Get-EnvVars.psm1')"
			SourceFiles="$(MSBuildThisFileDirectory)..\tools\Get-EnvVars.psm1"
			DestinationFolder="$(MSBuildProjectDirectory)\BlazorBundler\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\BlazorBundler\Get-Tools.ps1')"
			SourceFiles="$(MSBuildThisFileDirectory)..\tools\Get-Tools.ps1"
			DestinationFolder="$(MSBuildProjectDirectory)\BlazorBundler\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\BlazorBundler\install-nupkg.ps1')"
			SourceFiles="$(MSBuildThisFileDirectory)..\tools\install-nupkg.ps1"
			DestinationFolder="$(MSBuildProjectDirectory)\BlazorBundler\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\BlazorBundler\Install-Pkgs.psm1')"
			SourceFiles="$(MSBuildThisFileDirectory)..\tools\Install-Pkgs.psm1"
			DestinationFolder="$(MSBuildProjectDirectory)\BlazorBundler\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\BlazorBundler\load-env.ps1')"
			SourceFiles="$(MSBuildThisFileDirectory)..\tools\load-env.ps1"
			DestinationFolder="$(MSBuildProjectDirectory)\BlazorBundler\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\BlazorBundler\Print-Folder-Structure.psm1')"
			SourceFiles="$(MSBuildThisFileDirectory)..\tools\Print-Folder-Structure.psm1"
			DestinationFolder="$(MSBuildProjectDirectory)\BlazorBundler\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\BlazorBundler\Set-EnvVars.psm1')"
			SourceFiles="$(MSBuildThisFileDirectory)..\tools\Set-EnvVars.psm1"
			DestinationFolder="$(MSBuildProjectDirectory)\BlazorBundler\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\BlazorBundler\Uninstall-Pkgs.psm1')"
			SourceFiles="$(MSBuildThisFileDirectory)..\tools\Uninstall-Pkgs.psm1"
			DestinationFolder="$(MSBuildProjectDirectory)\BlazorBundler\" />

		<Copy Condition="!Exists('$(MSBuildProjectDirectory)\BlazorBundler\Update-EnvironmentVariable.psm1')"
			SourceFiles="$(MSBuildThisFileDirectory)..\tools\Update-EnvironmentVariable.psm1"
			DestinationFolder="$(MSBuildProjectDirectory)\BlazorBundler\" />

	</Target>
	
	<Target Name="DisplayEnvVars">
		<Message Text="Environment Variables: $(FormattedEnvVars)" Importance="high" />
	</Target>

	<Target Name="SetEnvironmentVariables" BeforeTargets="RunPowerShellScript">
		<!-- Set environment variables for Windows -->
		<Exec Command="set Configuration=$(Configuration)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="set MajorVersion=$(MajorVersion)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="set MinorVersion=$(MinorVersion)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="set PatchVersion=$(PatchVersion)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="set RevisionVersion=$(RevisionVersion)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="set NugetApiKey=$(NugetApiKey)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="set Publish=$(Publish)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="set IsRelease=$(IsRelease)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="set GitComment=$(GitComment)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="set AssemblyVersion=$(AssemblyVersion)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="set FileVersion=$(FileVersion)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="set ChangelogPath=$(ChangelogPath)" Condition="'$(OS)' == 'Windows_NT'" />

		<!-- Set environment variables for Linux -->
		<Exec Command="export Configuration=$(Configuration)" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="export MajorVersion=$(MajorVersion)" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="export MinorVersion=$(MinorVersion)" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="export PatchVersion=$(PatchVersion)" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="export RevisionVersion=$(RevisionVersion)" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="export NugetApiKey=$(NugetApiKey)" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="export Publish=$(Publish)" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="export IsRelease=$(IsRelease)" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="export GitComment=$(GitComment)" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="export AssemblyVersion=$(AssemblyVersion)" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="export FileVersion=$(FileVersion)" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="export ChangelogPath=$(ChangelogPath)" Condition="'$(OS)' != 'Windows_NT'" />
	</Target>

	<Target Name="RunPowerShellScript" DependsOnTargets="SetEnvironmentVariables">
		<!-- Invoke PowerShell script to load PowerShell Modules -->
		<Exec Command="$(PowerShellCommand) -ExecutionPolicy Bypass -File &quot;$(MSBuildProjectDirectory)\BlazorBundler\load-env.ps1&quot; " />
		<Exec Command="$(PowerShellCommand) -ExecutionPolicy Bypass -File &quot;$(MSBuildProjectDirectory)\BlazorBundler\Get-Tools.ps1&quot; " />
	</Target>
</Project>
